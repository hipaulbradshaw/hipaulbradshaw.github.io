%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 2/28/2015
%%BoundingBox: 0 0 473 385
%%HiResBoundingBox: 0 0 472.2068 384.8783
%%CropBox: 0 0 472.2068 384.8783
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 13091 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD47FF7D7DFD39FF7D52527EA8FD0DFF7D53A8FD0BFFA8CFFD14FF
%A8FD0EFFA82853A8FD0EFFA8A8FD0CFFA87DA8FD0EFFA0C9FD09FFA85252
%7DA8FD0BFF7D527DFFFFFFA8FD09FFA8C9C9FD12FFA9A8FD09FFA8A8FFFF
%FF7D5252A8FD0CFF7D52A8FD0BFFA8527D527DFD0BFFCFC1C0C0FD0AFFA8
%522784FD0AFF525252A8FFFFA87DFD0AFF9FC0A6FD0FFFFD05A8FD08FFA8
%52FFFFFFA85227527D7DA8FD08FFA8527DA8FD0AFFA828A8FFFF527DFD08
%FFC9C198C09EC9FD0BFF52527DFD07FFA87D7D7D52A8FFFFFF7D7DFD0AFF
%CEC0C0C9FD0AFFC8C1CFFFFFA8FFA8FD09FFA8527DFFFFFF7D7D525252FD
%09FF52A8FD0CFF7D7DFD04FF52FD07FFC1C0C0C7C8CFFFFFFFCFFFFFFF7D
%A8FFFF7D52527DAFFD06FFA85252527DA8FFFFFF277DFD0BFFC99EC0C8FD
%08FFCF9EC0BAC8A8AFA8FD0BFF5252A8FF7D7D28525252A8FD06FFA852A8
%FD0DFFA852FFFFFFA87DFD06FF9EC0C0C8CAFFFFFFCFC198C9FFFFA8527D
%5252527D7D7DFD06FF7DFD04527D7DA85252A8FD0CFFCEC0C0C9FD07FFC9
%C09EC8C0C8A8FD0CFF7DFD0652275252A8FD06FF52A8FD0FFF7D7DFFA852
%52A8FD04FFC1C0C0CEFD05FFC898C7CFFFFFFFA852522752527E7D7DA8FD
%04FF7D525227FD0652FD0EFFC99EC0C8FD05FF7D74C0A8A8C998C8FD0CFF
%7DFD09527DFD04FFA852A8FD10FFA87D5252527D52A8FFFF9FC09EC9FD06
%FF98C0A6FD06FFA8A8FFFF7DA87D7DA8FFFFFF527D7D7D527D525252A8FD
%0FFFCFC1C0C8FFFFFF59269FCFA8FFA8C0C1FD0DFF7DFD04527D527D527D
%A8FFFFFF52FD16FFA852A87DA8C9C0C0CEFD06FFC8C0C1FD0BFFAF52A87D
%7DA8FF7D7DFD04522752527DA9FD10FFCFC0C0C8FF52F874CAA8A9A7C09E
%FD0FFFA87D527D527D52FD047DA852A8FD17FFA852A87D9FBAC8FD06FFCA
%C09EC9FD0DFF7DA8FD067DA8FFA8A8A8FD14FFCFC1C774F875CFA8FFA8C0
%4AFD17FFFD047D52A9FD19FFA852A8C0C1C9FD05FFCFC198C8FD0FFF52FD
%057DA8FD1AFFC99EC098CAA8A9A7C020A8FD17FFCF597D527D7DFD1AFF84
%75C09EA1FD04FFA8C198C1A8FD0FFFA87DA87D7DA8FD1BFF004AC0C7A0AF
%A8C12084FD17FFC8C1A852FD047DFD1AFFC8C0C87DA8FFFFC9C1C0C1C9FD
%0FFF7E52A8FD047DA8FD19FFF8F875C99FC09F9EF87EFD17FFCF9EC09EA7
%597D7D7D52A9FD18FF9FC07C7D76A0C1C098C7CAFD0FFFA8527D7DA87DA8
%7D7DA8FD17FF27F8262753CAC1C66E7EFD17FFC9C0C0C1C0C1FF53FD047D
%A9FD15FFA85975C0C19EC0BAC0C0C8CFFD0EFFA87D527D7D527DFFFD047D
%A8FD15FF274A74277D277CC198C0C2FD16FFC99EC098C09EC9FFA8527D7D
%7D52A8FD13FFA852522E7698C09E9F7CA1FD0FFFA87D7DA87D7D7DFFFFFF
%7DA87D7DA8FD11FFCFCEA09FC098F859269820A1C7C0C2FD14FFC9FD05C0
%FD04FFA8527D7D7D52A8FD11FFA8527D525252A7CFA853A87DA8FFFFA8FD
%0AFFA8FD067DFD05FF537D7D527D7DA8FD0DFF76C1FD04C098742074F87D
%FFCFC1C09FFD12FFC89EC0C0C098CFFD05FFA8527D7D7D52A8FD10FF5252
%7D7D527DA9FFFFA852A87D7D5252527DA8FD06FFA8FD067DFD07FF7D7D52
%7D7D527DFD0BFFA1F820C0C0C098C0C0C020A8FFFFFFCFC1C0C1FD10FFC9
%FD04C09EFD08FFA8527D7D7D527DFD0EFF7D52527D527DA8FD04FFA852A8
%FD05527DA8FD04FFFD077DFD09FF52A8FFFFA852A8FD0AFF52F8F820C0FD
%04982084FD05FFCF9FC09FFD0EFFC898C098BA98CFFD09FFA8527D7D7D52
%7DA8FD0BFFA8FD04527DA8FD06FFA85252527DA8A8527DFFFFFFA8FD067D
%FD0AFF7DFD04FF52A8FD0AFF52F8F8F826C0C09E27AFFD07FFCFC1C0C1FD
%0CFFC9FD04C09EFD0CFFA8527D7DA8537DFD0BFF7D525252A8AFFD08FF7E
%5252A8FFFFFFA8FFFFFFA852FF7D537DFD0BFF52A8FFFFA852A8FD0AFFA8
%FD04F8209E75FD0AFFCF9FC0C1FD0AFFC99EC098C09EFD0EFFA8527DA8A8
%52FD0AFFA8525253FD0BFF7D5252FD08FFA8FD047DFD0CFFA8527EA8527D
%FD0CFF7DFD04F87CFD0CFFCFC1C0CAFD09FFFD04C09EFD10FFA8527D52A8
%FD0AFF527DA8FD0CFFA852527DFD08FFA87D7DFD0EFFA8527D7DFD0EFFA8
%527CA1FD0EFFCFA7FD0AFFC198BA9FFD11FFA8A87DA8A8FD0AFFA8A8FD0E
%FFA8525252A8FD47FFCFC8C8FD33FFA8A8A8FDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFD1EFFA8A852A8FD06FF527DA8FD23FF7D7DA8FD0FFFA8A87D52A8
%FD1BFFA8A8FD0FFFA87DFD0AFF7D7D5252A8FD06FF7D525252A8FD0FFFA8
%7DFD0FFF52527DFD0FFFA87D52527DFD0BFF527DA8FD0FFF7DA8FD0EFF52
%7DA8FD08FF53525252A8FD08FF7D525252A8FD0EFFA852527DA8FD0BFF7D
%527DFD0FFF7E5252527DFD0BFF7D52A87D7DFD0FFF52A8FD0CFF5252A8FD
%08FF59525259A8FD0AFF7E525252A8FD0EFF7D52527D7DFD0AFF7D527DFF
%FFA8FD0BFFA85252537DFD0DFF52A8FFA87DFD0FFF52A8FD0AFF537DFD09
%FF525252539FC9FD0AFFC17C2E5252A8FD0EFFFD0552A8FD07FFA8525252
%7D5252A8FD09FF7D52525276C1C9FD0CFF7D52A8FF7D7DFD0FFF52A8FD08
%FF527DFD09FF7D52527D9FC0C0CEFD08FFC1C0C07D525252A8FD0DFFA852
%7D525252A8FD05FFA853A85252527DA8FD09FFA85252527CC1C0C0C9FD0A
%FFA8527D52A8A87DFD10FF52A8FD06FF7D7DFD09FFA8525252A8C998C098
%C9FD06FF9FC098C0CA84525252FD0EFF7D527D7D5252A8FFFFFFA852A852
%7DA8A8A8FD0AFFA852527DFFA0C098C0C9FD08FFA85252527D525252FD11
%FF52A8FD04FF527DFD0BFFA87DA8FFFFC998C0C0CEFD04FFC1C098C1CFFF
%FFA87DFD0FFFA87D527D525253FFFFA852A87D7DFD0FFFA87DFFFFFFA0C0
%C0C0C9FD06FFA85252527DFFFF7DA8FD12FF52A8FFFF52A8FD0DFFA8FD04
%FFC998C098C9FFFF9EC098C0A8FD15FFA85252522E519FA852A8527EFD16
%FFA0C098C0A7FFFFFFA7C0755927A8FD18FF52A8527DFD14FFC998C0C0C9
%C1C0C0C1CFFD17FFA87D527CC1A17DA859A1C9FD17FFC8C0C0C0C9CFC1C0
%C1CFA0A7FD1AFF527DFD16FFC998C09EC098C1CAFD19FFA8A19EA153A853
%7C9EC0C1FD17FFA0C098C1C0C0C8FFC8C0CAFD16FFCFFFFF52A852A8FFFF
%CAFD13FFC9BAC0C0C1CFFD1BFFCFA17DA852A8CAC8C0C0C0CFFD16FFC2C1
%C0C0C8FFC9C0C8FD16FFCFC0C87DA8FFFF59A7C0C8FD12FFCF279898C04A
%7DFD1BFF7D53A8527DFFFFFFC99EC098CFFD14FFA6C098C098277CC79EFD
%16FFCF9FC09E9FFFFFFFCA9EC098C9FD10FFCF27F8F8C175F8F87DFD19FF
%A87DA859A8FD05FFCFC1C0C0FD13FFC7C0C1FFC94BF89FC0CFFD15FFCFC1
%C0C0C1BACFFFFFC1C0C0C098C9FD0EFFA8F8F8F852CFA8F8F8F852CAFD12
%FFA8A8FFFF7D7DA852A0C1FD06FFCFC0C0A0FD11FFC1C09FFFFFFF7D75C0
%7452FD14FFCFC0C098C098C9CAFFFFC99FC09EC098C8FD0CFFA7F8F8F852
%FFFFFFCAF8F8F851A8FD0FFFA87D5252527D7DA853A8C1C0C8FD06FFCEC0
%C0CAFD0FFFC1C0C8FD04FFCFC0C0F8F851FD12FFCFFD04C098CFFD06FFC1
%C0C0C098C8FD0AFF7DF8F8F84BA8FD04FFA7F8F8F827A8FD0DFFA8525252
%2852527D52A8FFC898C0C9FD05FFCAC798C8FD0EFF9FC0A0FD05FFC1C075
%F8F8F827FD10FFCF9EC098C098C9FD08FF9FC098C098C8FD08FF7DF8F8F8
%4BA8FD06FFA7F8F8F827A8FD0CFF7D7DFFA87D525252A8FFFFFFC8C0C0CA
%FD05FFC9C0C0CFFD0CFFC7C0C8FD05FFC8C0C8FF76F8F8F827FD0EFFCFFD
%04C098C9FD0AFFC1C0C0C098C8FD06FF7DF8F8F827A8FD08FF7DF8F8F827
%A7FD0BFFA8FFFFFFA852527DFD04FFCAC798C0A7FD05FFC1C09FFD0BFFA0
%C0C1FD05FFA0C0C1FFFFFF52F8F8F827CFFD0BFFCA9EC0C0C098C9FD0CFF
%C1C098C098C2FD04FF7DF8F8F827A7FD0AFF7DF8F8F827A7FD0FFF525252
%FD05FFCFC7C0C0C1CFFFFFFFCFC1C9FD0BFFC1C1FD05FFC8C0C1FD05FF52
%F8F8F827FD0AFFCFFD04C098C9FD0EFFC1C0C0C098C8FFFF7DF8F8F827A7
%FD0CFF7DF8F8F827A7FD0DFF7D52277DFD06FFCAC89EC098C1C9FD0FFFCA
%FD05FF9FC09FFD07FF51F8F8F827CFFD07FFCF9EC098C098C9FD10FF9FC0
%98C098C8A8F8F8F84BA8FD0EFFA1F8F8F852CFFD0AFFA85252527EFD09FF
%CFC8C1C0C0C9FD13FFC1C0C1FD09FF5200F8F852FD07FFC8C0C0C098CFFD
%12FFC1C0C0C0987DF8F84BA8FD10FFA1F8F827FD0BFF7DA87DFD0DFFCAC8
%98C8FD11FFCFC0C09FFD0BFF52F8F87DFD07FFCF98C098CAFD14FF9FC098
%C1FF7D7CCAFD12FFA852CAFD30FFCAC7C8FD0DFF7DA1FD09FFCFC2FD17FF
%C9C9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD1BFFA8FD17FFA8A8A8FD09FF
%A8FD5BFF7DA8FD0CFFA87DFD08FFA8527EFD08FFA87DFD1AFFA8A8FD0CFF
%FD05A8FD1FFFFD097DFFFF52FFFFFF7D52A8FD07FFA8FFFFFFA8527DFD07
%FFA8527DFD08FFA87DFD0BFFA852A8FD0BFFA87D7DFFFFA8A8FD05FFA87D
%527D7DA87D7D7DFD07FFA8FD09FFA8FFA8FD07FFA87D5252275252522752
%5252FFA852A8FFFFFF527DFD07FF7DFD04FF5252A8FD07FF7DFD09FFA8A8
%FD0BFFA852A8FD0BFFA852FFFFFF52A8FD05FF7D52FD05FF7D527DFD05FF
%AEFD0BFFA8FD08FF7D525252595259527D525252FFA8527DFFFFFF7D27A8
%FD06FF52A8FFFFA85352A8FD07FF7DA8FD08FFA87DFD0BFF7D527DFD0BFF
%7D527DFF7D52A8FD05FFA852527D7D7D525252FD06FFC9A6FD09FFA8A8A8
%FD07FFFD05A8A09FA0A8A9A8A8FF7E5252FFFFFF52527DFD06FF7D52A8A8
%7D5252A8FD07FF7DFD09FFA8A8FD0AFFA87D527DA9FD0AFFA8FD0552FD08
%FFA8527D527DA8FD07FFC1C1FD08FFA8FFA8FD0DFFC0C0C0FD05FFA82752
%7D7D5252527DFD06FF7D5227FD0452FD08FF7DA8FD08FFA87DFD0AFFA852
%5252A8FD0BFF7D525252A8FD09FF7D52527DFD07FFCAC79FFD09FFA8A8A8
%FD0CFFC198C0CAFD04FF7D7D5252527D52527DFD07FFFD0552FD09FF7DFD
%09FFA8A8FD0AFF7D5252527DFD0BFFA87D7DA8FD0AFF7D5252A8FD08FFC1
%C7FD06FFC8C7C0C1C0C0C8FD0BFFC0C0C0FD04FF7D52525227FD0452FD09
%FFFD047DFD09FF7DA8FD08FFA87DFD0AFF7D527D527DFD0BFFA87D7D7DFD
%0AFFA85252A8FD08FFC7C1FD05FFCAC7C0C1A1CA9FC1FD0BFFC198C1CFFD
%04FF7D52527D7D7D52FD0BFF7DA87DFD09FF7DFD09FFA8A8FD0AFFFD057D
%FD0BFFA87D7DA8FD0AFF7D5252A8FD08FFC1C7FD06FFC8C09FAFA9C99EFD
%0BFFC1C098FD06FF5252525352A8FD0AFFA87D7D7DFD09FF7DA8FD08FFA8
%7DFD09FFA87D527D527DFD0BFFA87D7D7DFD0AFF7C7D7D7DFD08FFC79EFD
%06FFCF9EC8A8A9A074A8FD09FFCFC198C0A8FD06FF525252FD0DFF7DA87D
%FD09FF7DFD09FFA8A8FD0AFF7D52527D7DFD0BFFA87D7DA8FD09FFCFC0C9
%C8C1FD08FFC1C7FD06FFAF75C2FFA9C94AAFFD0AFFC1C09EFD07FF7D527D
%FD0CFFA87D7D7DFD09FF7DA8FD08FFA87DFD0AFF7E2E5228A8FD0BFFA87D
%7D7DFD09FFC9C0C9C9C0CFFD07FFC79EFD07FF20C2A8AFA04A84FD09FFCF
%C198C0CAFD06FF7D7D7DFD0DFF7D7D7DFD09FF7DFD09FFA8A8FD0AFFA09F
%9F99A7FD0BFFA87D7DA8FD09FFC8C0FFC9C0C9FD07FFC1C7FD07FF269FFF
%A9C94AA9FD0AFFC0C09EFD06FFA87D7D7DA8FD0BFFA87D7D7DFD08FFAF7D
%A8FD08FFA87DFD09FFCAC098C7C0C1FD0BFFA87D7D7DFD09FF9EC1FFFF9E
%C8FD06FFCAC79FFD06FFA8F8A0A8AFA04A7DFD0AFFC198C0CAFD06FF7D7D
%7DFD0DFF7DA87DFD09FF7DFD09FFA8A8FD09FFC8BAC8CFC7C0C9FD0AFFA8
%A87DA8FD08FFCFC0C8FFFFC7C0FD07FFC1C7FD06FFA8F875FFA9C94AA8FD
%0AFFC0C0C0FD06FFA87D7D7DA8FD0BFFA87D7D7DFD07FFCFA6A0A0CAFD06
%FFC9C89FC9CFFD06FFCF9EC0CAFFC9C098CFFD09FFA87D7D7DFD08FFC998
%C9FFFF9FC0CAFD06FFC7C1FD06FFA7F87CA8AFA04A7DFD0AFFC1C0C0CFFD
%05FFA8527D7DFD0DFF7DA87DFD07FFC8FD04C0FD05FFCFC0C0C798CEFD06
%FFC1C0C8FFFFFFC7C0C2FD09FFA87D7DA8FD08FFC8C0C9FFFFCEC0C9FD06
%FFC1C7FD06FF7DF875FFA9C94A84FD0AFF51264BFD06FFA87D7D7DA8FD0B
%FFA87D7D7DFD07FFCF9EC098C9FD06FF9FC09EC0CAFD05FFC9C098CFFFFF
%FFC99EC0CAFD08FFA87D7D7DFD08FFC89EFFFFFFC9C0A0FD06FFC79EFD06
%FFA1F8A0A8A8A04A7DFD0AFF27F827A8FD05FFA87D7D7DFD0DFF7DA87DFD
%07FFCAC1C0C0C8FD06FFC8C0C09EFD06FFCEC0C7FD04FFCFC7C0CFFD08FF
%A87D7DA8FD08FFC1C1FFFFFFCFC0C8FD06FFC1C7FD06FF7D20512700754A
%A8FD0AFF27F826CFFD05FFA87D7D7DA8FD0BFFA87D7D7DFD07FFCF9EC098
%C8FD06FF9FC098C0CAFD05FFC8C0A0FD05FFC1C0C9FD08FFA87D7D7DFD07
%FFCAC1C1FD04FFC19EFD06FFC79EFD06FFA1F826527D204A7DFD09FFA827
%F827A7FD05FFA87D7D52FD0DFF7D7D7DFD07FFC9C1C0C0C2FD06FFC898C0
%9ECFFD05FFC8BAC9FD05FFC8C0C9FD08FFA87D7DA8FD07FFCFC0C8FD04FF
%C1C0CFFD05FFC1C7FD06FF7D264A2700744AA8FD09FFCAF8F8F8A8FD05FF
%7D7D7D53A8FD0BFFA87D7D7DFD07FFCA98C098C8FD06FF9FC098C0CAFD05
%FF9FC0C2FD05FF9FC0C8FD08FFA87D7D7DFD07FFC9C0A0FFFFFFCAC79EFD
%05FFCAC79FFD06FFA820C06E74984A7EFD09FFA720F820A1FD05FFA87D7D
%52A8FD0CFF7DA87DFD07FFC9C1C0C0C2FD06FFC7C0C0C0FD06FFC9C0C8FD
%05FFC7C0CFFD07FFA8527D52A8FD07FFCFC0C9FD04FFC1C0CAFD05FFC1C7
%FD06FFA975C0C1BAC04AA9FD09FFA8F8F8F8A8FD05FFFD057DFD0BFFA87D
%527DFD07FFCF9EC098C8FD06FFC1C098C0CAFD05FFC9C09EFD04FFCF9EC0
%CAFD06FF7D27FD0452FD07FFC9C0A0FD04FFC89ECFFD05FFC7C1FD06FFCF
%C0C09898984AA8FD09FFA7F8F8F87DFD05FF7D7DA752A8FD0BFF7D527D52
%A8FD06FFCAC0C0C0C2FD06FFC7C0C098FD07FFC0C0C9FFFFFFC9C0C1FD06
%FFA8FD0752FD06FFCFC0C9FD04FFC1C1FD06FFC1C7FD06FFC1C7C0C098C0
%74FD0AFFA8F8F8F8A8FD05FFFD057DFD0AFFA852FFA8A852A8FD05FFCF9E
%C098C8FD06FF9FC098C0A8FD06FFC898C8FFFFCAC798C8FD06FF7D527DFF
%A8535252A8FD05FFA7C09FFFFFFFCFC198FD06FFC79EFD05FFC9C19EC0C0
%C098C1FD0AFF7DF8F8F87DFD05FFFD047DA8FD0AFF52A8FFFFFF7D7DFD05
%FFCAC1C0C0C2FD06FFC8C0C098FD07FFC9C0C0FFFFCFC0C0CAFD06FF7E52
%FFFFFFA85252FD06FFCFC0C8FD04FFC1C1FD06FFC1C7FD05FFA1F8262026
%20264BFD0AFFA8F8F8F8A8FD05FF527DA87D7DFD0AFF7D7DFFFFFF527DFD
%05FFCF9EC098C8FD06FF9FC098C0CAFD06FFCF9EC0CFFFA7C09EFD07FF7D
%7DFFFFFFAF527DFD06FFCAC1C1FFFFFFCFC19EFD06FFC19EFD05FFA1FD06
%F852FD0AFF7DF8F8F87DFD05FF7DA8FF52A8FD0AFF7D52A8FF7D52A8FD05
%FFC9C1C0C0C2FD06FFC898C09EFD07FFCFC1C0FFFFCFC0C8FD08FFA8FFFF
%FF7D52A8FD07FFC0C1FFFFFFCFC0C7FD06FFC8C8FD06FF52FD04F827A8FD
%0AFFA8F8F8F8A8FD05FFA87D527DA8FD0BFF7D525252A8FD06FFCF98C098
%C9FD06FFA0C098C0CFFD07FFCAFD04FFCFCAFD0CFF7DA8FD08FFCAA6FFFF
%FFCAC9CAFD0FFF7D272052A8FD0BFFA1F8F8F87DFD21FFC9C1C8CFFD06FF
%CFC0C0C8FD4CFFA8F8F8F8A8FD2DFFCAFD4DFFA827F827A7FD7CFFA8A8A7
%FD83FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SHABLON</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-02-10T14:59:44+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-02-10T14:59:44+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-02-10T14:59:44+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Hea7HzRdWS/4e1COyuo&#xA;6lkmjDpLWlBzoxSlD0G+KvP/ACt+a3mCHzIvl/zRbp67zi1aZFCNHKTxXkF+FlJ7jFXreKuxVIfN&#xA;/nTR/K1h9ZvmLzyAi1tE/vJWHh4KO7H9e2KpP+W2u+ZPMUV5rmpuIrGV/S0+xjUBFC/afkRzY9qk&#xA;+PTFWVWOraffT3kFrKJJLCX0LoCtFk4hqV6GnLf3xVGYqoXn1kQ87dqPGeTIRXmoBqvtkJkgWOaQ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:1e96a31b-a507-40ec-8af7-afb9a4efe815</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1e96a31b-a507-40ec-8af7-afb9a4efe815</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F658EEB6F62AE311A780D694AE8E2902</stEvt:instanceID>
                  <stEvt:when>2013-10-02T22:27:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bbd1bb41-bdbf-4c0b-ae7c-6422c2136517</stEvt:instanceID>
                  <stEvt:when>2014-04-02T10:20:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d2b1cd72-579c-4a13-8b83-b2d42802a9d9</stEvt:instanceID>
                  <stEvt:when>2014-04-26T20:35:23+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4f2ff325-8c9e-4127-974b-690eafd24bbf</stEvt:instanceID>
                  <stEvt:when>2014-04-27T20:47:41+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:279ef6dd-b373-41dc-ad5d-3b450d1663fe</stEvt:instanceID>
                  <stEvt:when>2014-04-28T14:19:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2636de9b-11f4-40b7-9942-5af2defd84ae</stEvt:instanceID>
                  <stEvt:when>2014-05-11T23:18:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e3c42754-0ada-4e36-a629-74e6c60b9b00</stEvt:instanceID>
                  <stEvt:when>2014-05-12T12:20:25+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12e5d5de-7677-44bf-8e28-ba80fbb25ba0</stEvt:instanceID>
                  <stEvt:when>2014-05-17T21:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2b8ab455-e61c-45db-a51a-6d395cd91357</stEvt:instanceID>
                  <stEvt:when>2014-05-17T22:30:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:30435c9b-a1be-4669-9ed9-088ae3f3aa67</stEvt:instanceID>
                  <stEvt:when>2014-05-19T13:57:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3aea365-ebdb-43c1-b1c0-4f65534a15d3</stEvt:instanceID>
                  <stEvt:when>2014-05-20T21:26:09+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2c4537d3-5b5c-40d2-838f-1f0cec971438</stEvt:instanceID>
                  <stEvt:when>2014-05-21T14:12:14+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a8c012fa-9f6e-42cf-a1bf-d89ba9d28678</stEvt:instanceID>
                  <stEvt:when>2014-05-27T12:20:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d53041b-bcb7-4185-9eea-7f293f3df7c8</stEvt:instanceID>
                  <stEvt:when>2014-05-27T12:38:58+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f3b58f3b-c7eb-4683-b3f4-f1e25deb11f2</stEvt:instanceID>
                  <stEvt:when>2014-05-30T17:12:19+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:98cfc885-dc94-4222-9585-188aedeaefe2</stEvt:instanceID>
                  <stEvt:when>2014-05-31T00:45:31+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a9caa970-ed2f-44ce-bfb9-c4cfbe030e36</stEvt:instanceID>
                  <stEvt:when>2014-06-10T20:24:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ec963ddb-541c-4aa6-9b41-11726c2d61ae</stEvt:instanceID>
                  <stEvt:when>2014-06-15T13:33:24+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ac853a94-a300-45a7-ad99-bd1a09648a73</stEvt:instanceID>
                  <stEvt:when>2014-06-15T18:05:34+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7feb5f5a-60eb-4cde-99eb-aee6ca9469dc</stEvt:instanceID>
                  <stEvt:when>2014-06-16T15:53:35+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:657c84eb-9400-4bef-89cf-7ec006c89018</stEvt:instanceID>
                  <stEvt:when>2014-06-24T19:25:10+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85e6e636-2458-494c-a9b7-59baf55b1fc0</stEvt:instanceID>
                  <stEvt:when>2014-06-25T21:48:04+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:048626d4-6c2c-49ab-82f8-ebb74448f2fe</stEvt:instanceID>
                  <stEvt:when>2014-07-18T01:31:48+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1cfe95b1-c8af-4ed9-878f-91f804273ac7</stEvt:instanceID>
                  <stEvt:when>2014-07-19T01:17:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fb144eb7-2cf8-4d20-aa3b-dca2d95f063a</stEvt:instanceID>
                  <stEvt:when>2014-07-20T00:59:45+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c45e886c-c077-4959-88a9-20e793837a57</stEvt:instanceID>
                  <stEvt:when>2014-07-20T01:21:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:836c2e9d-1b24-4125-b70a-b6e12a64b174</stEvt:instanceID>
                  <stEvt:when>2014-07-20T13:27:15+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d610af6f-b924-49af-ad3e-1644fba97421</stEvt:instanceID>
                  <stEvt:when>2014-07-21T14:24:32+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d1d8967f-be65-49a0-ae45-ce74dc5824f2</stEvt:instanceID>
                  <stEvt:when>2014-08-25T13:22:29+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bdd1301e-c382-42a9-b096-d0c1d18606a5</stEvt:instanceID>
                  <stEvt:when>2014-08-25T14:58:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5e9357e0-bc9d-4a7f-b252-f0a3b87d5fef</stEvt:instanceID>
                  <stEvt:when>2014-08-25T16:49:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a20d9d79-2977-4ef0-8823-8f9d7a95aa8f</stEvt:instanceID>
                  <stEvt:when>2014-09-14T19:12:28+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ae0ecfdc-de44-4e75-82bb-dde713d9d155</stEvt:instanceID>
                  <stEvt:when>2014-09-25T18:31:10+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:26f43381-891b-4f46-bdd1-d8ce131a6508</stEvt:instanceID>
                  <stEvt:when>2014-10-05T22:50:50+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ca1167f-40a6-40a1-b2ff-08743fccc26d</stEvt:instanceID>
                  <stEvt:when>2014-10-06T13:02:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4a6ad3d4-7bde-4d51-8d06-020bf024429a</stEvt:instanceID>
                  <stEvt:when>2014-10-09T00:55:15+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:985f78fb-5d6b-48cf-9498-02ae08d45581</stEvt:instanceID>
                  <stEvt:when>2014-10-09T17:44:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13446674-be37-4e8c-bd9d-d2734a11c71b</stEvt:instanceID>
                  <stEvt:when>2014-10-17T00:15:31+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a349b67e-671b-48ff-ab1c-2df1bd884abc</stEvt:instanceID>
                  <stEvt:when>2014-11-18T00:12:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:59b99e7a-6e57-4e29-a37b-a22383f926ba</stEvt:instanceID>
                  <stEvt:when>2014-11-18T23:48:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d488e191-eb0a-4655-8837-5ac56e6a0470</stEvt:instanceID>
                  <stEvt:when>2014-11-18T23:54:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8f910d52-1e5a-4289-8851-06b7fb84b51f</stEvt:instanceID>
                  <stEvt:when>2014-12-26T22:45:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:af50a033-24b4-42c0-8cfe-a0e10f2f7dbb</stEvt:instanceID>
                  <stEvt:when>2014-12-28T16:09:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:48c192b2-03aa-4342-91ea-40633e22f649</stEvt:instanceID>
                  <stEvt:when>2015-01-10T01:15:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c42a2b9c-93bc-49cd-b0b1-7bce9f9c767f</stEvt:instanceID>
                  <stEvt:when>2015-01-10T15:28:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08fa0057-51d7-4006-b541-9a9ee004cfbc</stEvt:instanceID>
                  <stEvt:when>2015-01-10T17:52:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:873b051e-fa00-4715-8749-78915916eca0</stEvt:instanceID>
                  <stEvt:when>2015-01-10T21:49:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fda6f3b9-6d70-4849-aac9-ff93ac92eac9</stEvt:instanceID>
                  <stEvt:when>2015-01-13T00:29:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8ad42f1c-82db-4aa3-99b3-3163a033ec95</stEvt:instanceID>
                  <stEvt:when>2015-01-14T15:43:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:86847b96-1702-4f30-a998-aec4afda72d7</stEvt:instanceID>
                  <stEvt:when>2015-01-15T02:50:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:67cf18ac-5b98-4d4a-b5f4-c1b11690f092</stEvt:instanceID>
                  <stEvt:when>2015-01-16T01:14:34+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07b5fff9-bb72-4fb5-8978-2ce02841bf01</stEvt:instanceID>
                  <stEvt:when>2015-02-09T13:26:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b52814e8-c870-4943-b27c-de4db1d6a79b</stEvt:instanceID>
                  <stEvt:when>2015-02-09T14:34:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1af46ca7-5c5b-4c96-a1d4-03ca4b464c14</stEvt:instanceID>
                  <stEvt:when>2015-02-09T15:50:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a8e4545d-5765-4651-b704-266f29536a68</stEvt:instanceID>
                  <stEvt:when>2015-02-10T12:25:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1e96a31b-a507-40ec-8af7-afb9a4efe815</stEvt:instanceID>
                  <stEvt:when>2015-02-10T14:59:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a8e4545d-5765-4651-b704-266f29536a68</stRef:instanceID>
            <stRef:documentID>xmp.did:a8e4545d-5765-4651-b704-266f29536a68</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>530.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -384.878 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 384.878 li
472.207 384.878 li
472.207 0 li
cp
clp
113.643 261.517 mo
113.643 267.959 li
113.643 268.172 113.689 268.382 113.777 268.575 cv
114.74 270.675 li
114.953 271.139 115.064 271.644 115.064 272.155 cv
115.063 324.333 li
118.44 324.333 li
118.44 272.23 li
118.44 271.671 118.572 271.12 118.825 270.622 cv
119.854 268.597 li
119.96 268.39 120.015 268.16 120.015 267.928 cv
120.015 261.517 li
113.643 261.517 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.847059 .854902 .862745 rgb
f
116.829 261.517 mo
116.829 324.333 li
118.44 324.333 li
118.44 272.23 li
118.44 271.671 118.572 271.12 118.825 270.622 cv
119.854 268.597 li
119.96 268.39 120.015 268.16 120.015 267.928 cv
120.015 261.517 li
116.829 261.517 li
cp
.596078 .596078 .611765 rgb
f
113.643 261.517 mo
113.643 268.008 li
113.643 268.186 113.696 268.361 113.795 268.509 cv
115.333 270.8 li
115.587 271.178 115.723 271.623 115.723 272.078 cv
115.723 324.333 li
117.781 324.333 li
117.781 272.12 li
117.781 271.639 117.932 271.169 118.214 270.779 cv
119.845 268.517 li
119.955 268.364 120.015 268.18 120.015 267.991 cv
120.015 261.517 li
113.643 261.517 li
cp
.427451 .427451 .431373 rgb
f
120.015 262.677 mo
120.015 262.677 119.502 265.986 116.752 265.986 cv
114.002 265.986 113.643 262.677 113.643 262.677 cv
113.643 261.517 li
120.015 261.517 li
120.015 262.677 li
cp
.596078 .596078 .611765 rgb
f
110.678 328.035 mo
109.768 333.384 109.767 340.819 109.767 349.044 cv
109.767 378.523 109.767 378.535 116.829 378.535 cv
123.89 378.535 123.89 378.523 123.89 349.044 cv
123.89 340.819 123.889 333.384 122.98 328.035 cv
110.678 328.035 li
cp
.94902 .556863 0 rgb
f
112.21 328.035 mo
111.613 333.384 111.612 340.819 111.612 349.044 cv
111.612 378.523 111.612 378.535 116.245 378.535 cv
120.878 378.535 120.878 378.523 120.878 349.044 cv
120.878 340.819 120.877 333.384 120.28 328.035 cv
112.21 328.035 li
cp
.968627 .686275 .172549 rgb
f
121.563 328.035 mo
122.11 333.384 122.111 340.819 122.111 349.044 cv
122.111 378.523 122.111 378.535 117.858 378.535 cv
113.604 378.535 113.604 378.523 113.604 349.044 cv
113.604 340.819 113.605 333.384 114.153 328.035 cv
121.563 328.035 li
cp
.858824 .458824 .0196078 rgb
f
114.03 328.035 mo
113.605 333.384 113.604 340.819 113.604 349.044 cv
113.604 378.523 113.604 378.535 116.906 378.535 cv
120.207 378.535 120.207 378.523 120.207 349.044 cv
120.207 340.819 120.206 333.384 119.781 328.035 cv
114.03 328.035 li
cp
.94902 .556863 0 rgb
f
123.276 328.035 mo
110.381 328.035 li
109.194 328.035 108.232 327.073 108.232 325.885 cv
108.232 324.152 li
108.232 322.965 109.194 322.003 110.381 322.003 cv
123.276 322.003 li
124.463 322.003 125.425 322.965 125.425 324.152 cv
125.425 325.885 li
125.425 327.073 124.463 328.035 123.276 328.035 cv
cp
.968627 .686275 .172549 rgb
f
121.736 328.035 mo
111.922 328.035 li
111.018 328.035 110.286 327.073 110.286 325.885 cv
110.286 324.152 li
110.286 322.965 111.018 322.003 111.922 322.003 cv
121.736 322.003 li
122.639 322.003 123.371 322.965 123.371 324.152 cv
123.371 325.885 li
123.371 327.073 122.639 328.035 121.736 328.035 cv
cp
.94902 .556863 0 rgb
f
118.6 328.035 mo
115.211 328.035 li
114.899 328.035 114.646 327.073 114.646 325.885 cv
114.646 324.152 li
114.646 322.965 114.899 322.003 115.211 322.003 cv
118.6 322.003 li
118.912 322.003 119.165 322.965 119.165 324.152 cv
119.165 325.885 li
119.165 327.073 118.912 328.035 118.6 328.035 cv
cp
.968627 .686275 .172549 rgb
f
157.22 324.661 mo
153.843 324.661 li
153.843 264.337 li
154.503 261.189 li
156.561 261.189 li
157.22 264.337 li
157.22 324.661 li
cp
.847059 .854902 .862745 rgb
f
157.22 324.661 mo
155.532 324.661 li
155.532 261.189 li
156.561 261.189 li
157.22 264.337 li
157.22 324.661 li
cp
.596078 .596078 .611765 rgb
f
156.561 324.661 mo
154.502 324.661 li
154.502 264.337 li
154.944 261.189 li
156.137 261.189 li
156.561 264.337 li
156.561 324.661 li
cp
.427451 .427451 .431373 rgb
f
155.54 264.437 mo
155.242 261.189 li
155.838 261.189 li
155.54 264.437 li
cp
.596078 .596078 .611765 rgb
f
149.381 328.363 mo
148.471 333.712 148.47 341.147 148.47 349.372 cv
148.47 378.851 148.47 378.864 155.532 378.864 cv
162.593 378.864 162.593 378.851 162.593 349.372 cv
162.593 341.147 162.592 333.712 161.682 328.363 cv
149.381 328.363 li
cp
.94902 .556863 0 rgb
f
150.912 328.363 mo
150.316 333.712 150.315 341.147 150.315 349.372 cv
150.315 378.851 150.315 378.864 154.948 378.864 cv
159.581 378.864 159.581 378.851 159.581 349.372 cv
159.581 341.147 159.58 333.712 158.983 328.363 cv
150.912 328.363 li
cp
.968627 .686275 .172549 rgb
f
160.265 328.363 mo
160.813 333.712 160.814 341.147 160.814 349.372 cv
160.814 378.851 160.814 378.864 156.561 378.864 cv
152.307 378.864 152.307 378.851 152.307 349.372 cv
152.307 341.147 152.308 333.712 152.856 328.363 cv
160.265 328.363 li
cp
.858824 .458824 .0196078 rgb
f
152.733 328.363 mo
152.308 333.712 152.307 341.147 152.307 349.372 cv
152.307 378.851 152.307 378.864 155.608 378.864 cv
158.91 378.864 158.91 378.851 158.91 349.372 cv
158.91 341.147 158.909 333.712 158.484 328.363 cv
152.733 328.363 li
cp
.94902 .556863 0 rgb
f
161.979 328.363 mo
149.084 328.363 li
147.897 328.363 146.935 327.401 146.935 326.214 cv
146.935 324.481 li
146.935 323.294 147.897 322.331 149.084 322.331 cv
161.979 322.331 li
163.166 322.331 164.128 323.294 164.128 324.481 cv
164.128 326.214 li
164.128 327.401 163.166 328.363 161.979 328.363 cv
cp
.968627 .686275 .172549 rgb
f
160.438 328.363 mo
150.625 328.363 li
149.721 328.363 148.989 327.401 148.989 326.214 cv
148.989 324.481 li
148.989 323.294 149.721 322.331 150.625 322.331 cv
160.438 322.331 li
161.342 322.331 162.074 323.294 162.074 324.481 cv
162.074 326.214 li
162.074 327.401 161.342 328.363 160.438 328.363 cv
cp
.94902 .556863 0 rgb
f
157.303 328.363 mo
153.914 328.363 li
153.602 328.363 153.349 327.401 153.349 326.214 cv
153.349 324.481 li
153.349 323.294 153.602 322.331 153.914 322.331 cv
157.303 322.331 li
157.615 322.331 157.868 323.294 157.868 324.481 cv
157.868 326.214 li
157.868 327.401 157.615 328.363 157.303 328.363 cv
cp
.968627 .686275 .172549 rgb
f
450.454 132.103 mo
445.899 136.658 li
445.749 136.808 445.633 136.989 445.559 137.188 cv
444.755 139.354 li
444.577 139.833 444.298 140.268 443.937 140.629 cv
407.041 177.524 li
409.429 179.912 li
446.272 143.07 li
446.667 142.675 447.15 142.379 447.681 142.205 cv
449.84 141.501 li
450.061 141.429 450.262 141.306 450.427 141.141 cv
454.96 136.608 li
450.454 132.103 li
cp
.847059 .854902 .862745 rgb
f
452.707 134.355 mo
408.289 178.773 li
409.429 179.912 li
446.272 143.07 li
446.667 142.675 447.15 142.379 447.681 142.205 cv
449.84 141.501 li
450.061 141.429 450.262 141.306 450.427 141.141 cv
454.96 136.608 li
452.707 134.355 li
cp
.596078 .596078 .611765 rgb
f
450.454 132.103 mo
445.865 136.692 li
445.738 136.818 445.652 136.979 445.618 137.155 cv
445.086 139.862 li
444.998 140.309 444.779 140.719 444.457 141.041 cv
407.507 177.991 li
408.963 179.446 li
445.883 142.526 li
446.223 142.186 446.662 141.961 447.137 141.884 cv
449.89 141.438 li
450.076 141.408 450.248 141.32 450.382 141.186 cv
454.96 136.608 li
450.454 132.103 li
cp
.427451 .427451 .431373 rgb
f
454.139 137.428 mo
454.139 137.428 451.437 139.405 449.493 137.461 cv
447.548 135.516 449.634 132.923 449.634 132.923 cv
450.454 132.103 li
454.96 136.608 li
454.139 137.428 li
cp
.596078 .596078 .611765 rgb
f
401.322 177.041 mo
396.897 180.181 391.639 185.437 385.823 191.253 cv
364.978 212.097 364.969 212.106 369.962 217.1 cv
374.956 222.093 374.965 222.084 395.809 201.24 cv
401.625 195.424 406.882 190.165 410.021 185.74 cv
401.322 177.041 li
cp
.94902 .556863 0 rgb
f
402.405 178.124 mo
398.201 181.485 392.943 186.742 387.127 192.558 cv
366.283 213.402 366.274 213.411 369.55 216.687 cv
372.826 219.963 372.835 219.954 393.679 199.109 cv
399.495 193.294 404.752 188.036 408.112 183.831 cv
402.405 178.124 li
cp
.968627 .686275 .172549 rgb
f
409.019 184.738 mo
405.624 188.908 400.367 194.166 394.551 199.981 cv
373.707 220.826 373.698 220.835 370.69 217.827 cv
367.683 214.82 367.692 214.811 388.536 193.966 cv
394.352 188.151 399.61 182.894 403.78 179.499 cv
409.019 184.738 li
cp
.858824 .458824 .0196078 rgb
f
403.693 179.412 mo
399.61 182.893 394.352 188.151 388.536 193.966 cv
367.692 214.811 367.683 214.82 370.017 217.154 cv
372.351 219.489 372.36 219.48 393.205 198.635 cv
399.021 192.819 404.278 187.561 407.759 183.478 cv
403.693 179.412 li
cp
.94902 .556863 0 rgb
f
410.231 185.95 mo
401.113 176.832 li
400.273 175.992 400.273 174.631 401.113 173.792 cv
402.338 172.566 li
403.178 171.727 404.538 171.727 405.378 172.566 cv
414.496 181.684 li
415.335 182.524 415.335 183.885 414.496 184.724 cv
413.27 185.95 li
412.431 186.789 411.07 186.789 410.231 185.95 cv
cp
.968627 .686275 .172549 rgb
f
409.141 184.86 mo
402.202 177.921 li
401.563 177.282 401.726 176.084 402.565 175.244 cv
403.791 174.019 li
404.63 173.179 405.828 173.017 406.467 173.656 cv
413.407 180.595 li
414.045 181.234 413.883 182.432 413.043 183.272 cv
411.818 184.497 li
410.979 185.337 409.78 185.499 409.141 184.86 cv
cp
.94902 .556863 0 rgb
f
406.924 182.643 mo
404.528 180.247 li
404.307 180.026 404.809 179.167 405.648 178.328 cv
406.874 177.102 li
407.713 176.263 408.573 175.761 408.793 175.982 cv
411.189 178.378 li
411.41 178.599 410.908 179.458 410.069 180.297 cv
408.843 181.523 li
408.004 182.362 407.145 182.864 406.924 182.643 cv
cp
.968627 .686275 .172549 rgb
f
432.334 177.811 mo
429.945 180.199 li
387.29 137.544 li
385.53 134.851 li
386.986 133.395 li
389.678 135.155 li
432.334 177.811 li
cp
.847059 .854902 .862745 rgb
f
432.334 177.811 mo
431.14 179.005 li
386.258 134.123 li
386.986 133.395 li
389.678 135.155 li
432.334 177.811 li
cp
.596078 .596078 .611765 rgb
f
431.867 178.277 mo
430.412 179.733 li
387.756 137.077 li
385.842 134.539 li
386.686 133.695 li
389.212 135.622 li
431.867 178.277 li
cp
.427451 .427451 .431373 rgb
f
389.538 137.406 mo
385.842 134.539 li
386.686 133.695 li
389.538 137.406 li
cp
.847059 .854902 .862745 rgb
f
429.408 185.972 mo
432.547 190.397 437.804 195.656 443.62 201.472 cv
464.464 222.316 464.473 222.325 469.466 217.332 cv
474.46 212.339 474.451 212.33 453.606 191.485 cv
447.79 185.669 442.532 180.413 438.107 177.273 cv
429.408 185.972 li
cp
.94902 .556863 0 rgb
f
430.491 184.889 mo
433.852 189.093 439.108 194.351 444.924 200.167 cv
465.769 221.012 465.778 221.021 469.054 217.745 cv
472.33 214.469 472.321 214.46 451.476 193.615 cv
445.66 187.799 440.402 182.542 436.198 179.182 cv
430.491 184.889 li
cp
.968627 .686275 .172549 rgb
f
437.105 178.275 mo
441.274 181.67 446.532 186.927 452.348 192.743 cv
473.193 213.588 473.202 213.597 470.194 216.604 cv
467.187 219.612 467.178 219.603 446.333 198.758 cv
440.517 192.942 435.26 187.684 431.865 183.515 cv
437.105 178.275 li
cp
.858824 .458824 .0196078 rgb
f
431.778 183.602 mo
435.26 187.684 440.517 192.942 446.333 198.758 cv
467.178 219.603 467.187 219.612 469.521 217.278 cv
471.855 214.943 471.846 214.934 451.002 194.09 cv
445.186 188.274 439.928 183.017 435.845 179.535 cv
431.778 183.602 li
cp
.94902 .556863 0 rgb
f
438.316 177.064 mo
429.198 186.182 li
428.359 187.021 426.998 187.021 426.159 186.182 cv
424.933 184.956 li
424.094 184.117 424.094 182.756 424.933 181.917 cv
434.051 172.799 li
434.891 171.959 436.251 171.959 437.091 172.799 cv
438.316 174.024 li
439.156 174.863 439.156 176.224 438.316 177.064 cv
cp
.968627 .686275 .172549 rgb
f
437.227 178.153 mo
430.288 185.092 li
429.649 185.731 428.45 185.569 427.611 184.729 cv
426.385 183.504 li
425.546 182.664 425.384 181.466 426.022 180.827 cv
432.962 173.888 li
433.601 173.249 434.799 173.412 435.638 174.251 cv
436.864 175.477 li
437.703 176.316 437.866 177.514 437.227 178.153 cv
cp
.94902 .556863 0 rgb
f
435.01 180.37 mo
432.614 182.766 li
432.393 182.987 431.534 182.485 430.694 181.646 cv
429.469 180.42 li
428.63 179.581 428.128 178.722 428.348 178.501 cv
430.745 176.105 li
430.965 175.885 431.824 176.386 432.664 177.226 cv
433.889 178.451 li
434.729 179.29 435.23 180.15 435.01 180.37 cv
cp
.968627 .686275 .172549 rgb
f
15.583 373.034 mo
13.62 373.034 12.0287 371.442 12.0287 369.479 cv
12.0287 367.516 13.62 365.925 15.583 365.925 cv
17.546 365.925 19.1373 367.516 19.1373 369.479 cv
19.1373 371.442 17.546 373.034 15.583 373.034 cv
cp
36.0112 278.924 mo
33.6295 271.382 28.5688 266.949 23.9842 263.02 cv
23.7476 262.817 23.4213 262.758 23.1282 262.863 cv
22.4189 263.119 li
26.6466 275.218 li
27.6542 278.015 26.2031 281.1 23.4057 282.107 cv
1.86591 289.67 li
1.59281 289.766 1.47001 290.078 1.59751 290.338 cv
3.81981 294.869 10.6399 300.01 10.4219 304.941 cv
6.41391 368.165 li
6.22861 373.095 10.2874 377.241 15.4863 377.241 cv
15.6764 377.241 li
20.8753 377.241 24.9341 373.095 24.7488 368.165 cv
24.7488 368.165 22.5056 313.01 22.4588 307.218 cv
22.4119 301.425 23.3826 300.815 27.203 297.601 cv
32.4317 293.203 38.5582 286.989 36.0112 278.924 cv
cp
.847059 .854902 .862745 rgb
f
36.0112 278.924 mo
33.6295 271.382 28.5688 266.949 23.9842 263.02 cv
23.7476 262.817 23.4213 262.758 23.1282 262.863 cv
22.4189 263.119 li
28.42 275.218 li
18.4296 304.941 li
18.4296 304.941 18.6132 335.1 21.4806 356.733 cv
23.6427 373.045 21.3993 376.222 15.4863 377.241 cv
15.6764 377.241 li
20.8753 377.241 24.9341 373.095 24.7488 368.165 cv
24.7488 368.165 22.5056 313.01 22.4588 307.218 cv
22.4119 301.425 23.3826 300.815 27.203 297.601 cv
32.4317 293.203 38.5582 286.989 36.0112 278.924 cv
cp
.694118 .694118 .698039 rgb
f
15.583 373.034 mo
13.62 373.034 12.0287 371.442 12.0287 369.479 cv
12.0287 367.516 13.62 365.925 15.583 365.925 cv
17.546 365.925 19.1373 367.516 19.1373 369.479 cv
19.1373 371.442 17.546 373.034 15.583 373.034 cv
cp
34.3931 278.924 mo
32.0127 271.386 28.4861 266.953 23.9879 263.026 cv
23.7513 262.819 23.4192 262.758 23.1237 262.865 cv
22.4189 263.119 li
26.6466 275.218 li
27.6542 278.015 26.2031 281.1 23.4057 282.107 cv
1.86641 289.669 li
1.59441 289.765 1.46921 290.076 1.59601 290.335 cv
2.69311 292.574 4.91351 294.962 6.85321 297.4 cv
7.53351 298.255 12.1741 302.629 12.04 304.941 cv
8.51741 368.165 li
8.33221 373.095 11.8719 375.137 15.4863 375.137 cv
19.1007 375.137 22.8305 373.095 22.6453 368.165 cv
22.6453 368.165 20.4021 313.01 20.3552 307.218 cv
20.3084 301.425 23.3826 300.815 27.203 297.601 cv
32.4317 293.203 36.94 286.989 34.3931 278.924 cv
cp
.427451 .427451 .431373 rgb
f
20.5417 368.165 mo
20.5417 368.165 18.7221 313.01 18.6753 307.218 cv
18.5967 305.745 17.9209 304.316 15.4309 304.705 cv
13.625 304.988 13.4285 307.124 13.4285 307.124 cv
10.621 368.165 li
10.5534 371.006 11.8719 373.034 15.4863 373.034 cv
15.5043 373.034 15.5205 373.031 15.5383 373.031 cv
13.5962 373.007 12.0287 371.427 12.0287 369.479 cv
12.0287 367.516 13.62 365.925 15.583 365.925 cv
17.546 365.925 19.1373 367.516 19.1373 369.479 cv
19.1373 371.314 17.7462 372.824 15.961 373.013 cv
19.2337 372.804 20.6505 370.453 20.5417 368.165 cv
cp
.607843 .607843 .607843 rgb
f
5.88831 286.857 mo
5.92381 280.151 6.97581 273.792 8.02191 267.783 cv
8.15761 267.004 8.70361 266.363 9.44991 266.1 cv
10.4241 265.885 li
17.2837 284.478 li
7.34661 287.884 li
6.64051 288.134 5.88441 287.606 5.88831 286.857 cv
cp
.694118 .694118 .698039 rgb
f
5.88831 286.857 mo
5.92381 280.151 6.97581 273.792 8.02191 267.783 cv
8.15761 267.004 8.70361 266.363 9.44991 266.1 cv
15.4451 283.954 li
15.5815 284.36 15.3643 284.8 14.959 284.939 cv
7.24061 287.585 li
6.53461 287.835 5.88441 287.606 5.88831 286.857 cv
cp
.427451 .427451 .431373 rgb
f
23.4181 295.582 mo
14.4486 298.741 li
10.5478 287.664 li
19.5173 284.505 li
23.4181 295.582 li
cp
.596078 .596078 .611765 rgb
f
15.0675 298.519 mo
14.4486 298.741 li
10.5478 287.664 li
11.6285 288.754 li
15.0675 298.519 li
cp
.407843 .403922 .423529 rgb
f
23.4181 295.582 mo
14.4486 298.741 li
14.4904 296.969 li
22.0558 294.305 li
23.4181 295.582 li
cp
.929412 .933333 .937255 rgb
f
12.3165 287.608 mo
11.917 287.748 12.387 290.116 13.3662 292.897 cv
14.3454 295.677 15.463 297.817 15.8625 297.677 cv
16.262 297.536 15.7921 295.168 14.8129 292.387 cv
13.8337 289.607 12.716 287.467 12.3165 287.608 cv
cp
.313726 .309804 .32549 rgb
f
13.7632 287.098 mo
13.3637 287.239 13.8337 289.607 14.8129 292.387 cv
15.7921 295.168 16.9097 297.308 17.3092 297.167 cv
17.7087 297.026 17.2388 294.658 16.2596 291.878 cv
15.2804 289.097 14.1627 286.957 13.7632 287.098 cv
cp
f
15.2099 286.589 mo
14.8104 286.729 15.2804 289.097 16.2596 291.878 cv
17.2388 294.658 18.3564 296.798 18.7559 296.658 cv
19.1554 296.517 18.6855 294.149 17.7063 291.368 cv
16.7271 288.588 15.6094 286.448 15.2099 286.589 cv
cp
f
16.6566 286.079 mo
16.2571 286.22 16.7271 288.588 17.7063 291.368 cv
18.6855 294.149 19.8031 296.289 20.2026 296.148 cv
20.6021 296.007 20.1322 293.639 19.153 290.859 cv
18.1738 288.078 17.0561 285.938 16.6566 286.079 cv
cp
f
18.1033 285.57 mo
17.7038 285.71 18.1738 288.078 19.153 290.859 cv
20.1322 293.639 21.2498 295.779 21.6493 295.639 cv
22.0488 295.498 21.5789 293.13 20.5997 290.349 cv
19.6205 287.569 18.5028 285.429 18.1033 285.57 cv
cp
f
204.176 300.737 mo
206.779 300.737 208.89 298.626 208.89 296.023 cv
208.89 293.419 206.779 291.309 204.176 291.309 cv
204.134 291.309 204.096 291.32 204.055 291.321 cv
204.055 267.417 li
206.631 267.417 li
206.815 267.417 206.976 267.54 207.025 267.717 cv
213.71 291.752 li
213.71 303.54 li
213.71 304.249 213.436 304.93 212.944 305.44 cv
210.603 307.872 li
204.055 307.872 li
204.055 300.725 li
204.096 300.726 204.134 300.737 204.176 300.737 cv
cp
.596078 .596078 .611765 rgb
f
204.055 301.414 mo
198.963 301.414 li
198.963 291.057 li
204.055 291.057 li
204.055 301.414 li
cp
.537255 .537255 .537255 rgb
f
209.147 301.414 mo
204.055 301.414 li
204.055 291.057 li
209.147 291.057 li
209.147 301.414 li
cp
.694118 .694118 .698039 rgb
f
204.214 300.737 mo
201.61 300.737 199.5 298.626 199.5 296.023 cv
199.5 293.419 201.61 291.309 204.214 291.309 cv
204.255 291.309 204.293 291.32 204.334 291.321 cv
204.334 267.417 li
201.759 267.417 li
201.575 267.417 201.413 267.54 201.364 267.717 cv
194.679 291.752 li
194.679 303.54 li
194.679 304.249 194.954 304.93 195.445 305.44 cv
197.786 307.872 li
204.334 307.872 li
204.334 300.725 li
204.293 300.726 204.255 300.737 204.214 300.737 cv
cp
.847059 .854902 .862745 rgb
f
203.923 291.332 mo
203.923 267.693 li
203.923 267.541 203.799 267.417 203.646 267.417 cv
203.11 267.417 li
202.982 267.417 202.87 267.506 202.842 267.631 cv
197.327 291.453 li
197.281 291.652 197.258 291.855 197.258 292.059 cv
197.258 304.388 li
197.258 304.559 197.271 304.73 197.299 304.898 cv
197.786 307.872 li
197.812 310.339 li
197.812 311.996 196.55 313.984 194.952 316.501 cv
192.143 320.925 188.296 326.983 187.405 337.085 cv
186.496 347.38 188.665 353.505 190.579 358.909 cv
191.826 362.43 192.903 365.471 192.903 369.23 cv
198.578 369.23 li
198.578 364.495 197.292 360.862 195.928 357.014 cv
194.124 351.918 192.257 346.649 193.058 337.584 cv
193.828 328.858 197.108 323.693 199.743 319.543 cv
201.752 316.378 203.488 313.645 203.488 310.339 cv
203.488 308.302 li
203.488 308.065 203.68 307.872 203.918 307.872 cv
204.334 307.872 li
204.334 300.725 li
204.293 300.726 204.255 300.737 204.214 300.737 cv
201.61 300.737 199.5 298.626 199.5 296.023 cv
199.5 294.496 200.278 293.146 201.358 292.291 cv
202.118 291.688 203.228 291.332 203.923 291.332 cv
cp
.427451 .427451 .431373 rgb
f
220.985 337.085 mo
220.093 326.983 216.246 320.925 213.438 316.501 cv
211.839 313.984 210.577 311.996 210.577 310.339 cv
210.603 307.872 li
211.09 304.899 li
211.118 304.73 211.132 304.559 211.132 304.387 cv
211.132 292.059 li
211.132 291.855 211.109 291.652 211.063 291.453 cv
205.548 267.631 li
205.519 267.506 205.408 267.417 205.279 267.417 cv
204.428 267.417 li
204.276 267.417 204.153 267.54 204.153 267.692 cv
204.148 270.346 204.114 291.332 204.153 291.332 cv
206.756 291.332 208.89 293.419 208.89 296.023 cv
208.89 298.626 206.779 300.737 204.176 300.737 cv
204.134 300.737 204.096 300.726 204.055 300.725 cv
204.055 307.872 li
204.482 307.872 li
204.714 307.872 204.902 308.06 204.902 308.292 cv
204.902 310.339 li
204.902 313.645 206.638 316.378 208.646 319.543 cv
211.282 323.693 214.561 328.858 215.332 337.584 cv
216.132 346.649 214.266 351.919 212.461 357.014 cv
211.099 360.862 209.812 364.496 209.812 369.23 cv
215.487 369.23 li
215.487 365.471 216.564 362.43 217.811 358.909 cv
219.724 353.505 221.893 347.38 220.985 337.085 cv
cp
f
213.141 372.635 mo
215.022 372.635 217.039 371.11 217.039 369.23 cv
217.039 365.568 218.1 362.57 219.331 359.098 cv
221.264 353.639 223.455 347.453 222.535 337.035 cv
221.632 326.796 217.249 320.67 214.409 316.197 cv
212.861 313.757 211.637 311.831 211.637 310.339 cv
204.334 310.339 li
204.334 313.81 206.111 316.607 208.167 319.847 cv
210.77 323.946 214.008 329.046 214.767 337.634 cv
215.556 346.576 213.71 351.786 211.926 356.824 cv
210.607 360.548 209.243 364.398 209.243 369.23 cv
209.243 371.11 211.26 372.635 213.141 372.635 cv
cp
.94902 .556863 0 rgb
f
212.192 369.23 mo
212.192 365.568 213.254 362.57 214.484 359.098 cv
216.417 353.639 218.608 347.453 217.688 337.035 cv
216.785 326.796 212.402 320.67 209.562 316.197 cv
208.014 313.757 206.79 311.831 206.79 310.339 cv
204.334 310.339 li
204.334 313.81 206.111 316.607 208.167 319.847 cv
210.77 323.946 214.008 329.046 214.767 337.634 cv
215.556 346.576 213.71 351.786 211.926 356.824 cv
210.607 360.548 209.243 364.398 209.243 369.23 cv
209.243 370.313 209.913 371.279 210.84 371.902 cv
211.522 372.361 212.192 371.11 212.192 369.23 cv
cp
.968627 .686275 .172549 rgb
f
195.248 372.635 mo
193.367 372.635 191.351 371.11 191.351 369.23 cv
191.351 365.568 190.289 362.57 189.059 359.098 cv
187.126 353.639 184.934 347.453 185.854 337.035 cv
186.758 326.796 191.141 320.67 193.98 316.197 cv
195.529 313.757 196.752 311.831 196.752 310.339 cv
204.055 310.339 li
204.055 313.81 202.278 316.607 200.222 319.847 cv
197.62 323.946 194.381 329.046 193.623 337.634 cv
192.834 346.576 194.679 351.786 196.464 356.824 cv
197.783 360.548 199.146 364.398 199.146 369.23 cv
199.146 371.11 197.129 372.635 195.248 372.635 cv
cp
f
206.79 304.323 mo
206.79 305.833 205.565 307.058 204.055 307.058 cv
202.544 307.058 201.32 305.833 201.32 304.323 cv
201.32 302.812 202.544 301.588 204.055 301.588 cv
205.565 301.588 206.79 302.812 206.79 304.323 cv
cp
.537255 .537255 .537255 rgb
f
205.964 304.323 mo
205.964 305.377 205.109 306.232 204.055 306.232 cv
203 306.232 202.146 305.377 202.146 304.323 cv
202.146 303.268 203 302.413 204.055 302.413 cv
205.109 302.413 205.964 303.268 205.964 304.323 cv
cp
.313726 .309804 .32549 rgb
f
204.902 309.256 mo
204.902 309.256 205.783 308.669 207.768 308.669 cv
209.558 308.669 210.577 309.256 210.577 309.256 cv
210.577 307.872 li
204.482 307.872 li
204.482 307.872 204.902 307.89 204.902 308.292 cv
204.902 308.694 204.902 309.256 204.902 309.256 cv
cp
.223529 .215686 .227451 rgb
f
194.105 369.23 mo
194.105 365.568 193.043 362.57 191.813 359.098 cv
189.88 353.639 187.689 347.453 188.608 337.035 cv
189.512 326.796 193.895 320.67 196.735 316.197 cv
198.283 313.757 199.507 311.831 199.507 310.339 cv
204.043 310.339 li
204.043 313.81 202.266 316.607 200.21 319.847 cv
197.607 323.946 194.369 329.046 193.61 337.634 cv
192.821 346.576 194.667 351.786 196.451 356.824 cv
197.77 360.548 199.134 364.398 199.134 369.23 cv
199.134 370.313 198.464 371.279 197.537 371.902 cv
196.855 372.361 194.105 372.341 194.105 369.23 cv
cp
.94902 .556863 0 rgb
f
442.553 89.5598 mo
448.715 92.7091 454.012 91.7269 455.633 91.3025 cv
455.953 91.2188 456.218 91.0039 456.369 90.7095 cv
456.961 89.55 li
450.389 86.1912 li
446.715 84.3132 445.258 79.8118 447.137 76.1374 cv
447.206 76.0031 li
449.084 72.3285 453.586 70.8722 457.261 72.7504 cv
463.831 76.1082 li
464.482 74.8354 li
464.634 74.5369 464.652 74.1902 464.526 73.8792 cv
463.903 72.3321 461.565 67.5767 455.399 64.4253 cv
450.891 62.1216 447.425 62.6497 444.547 65.0752 cv
443.664 65.82 442.359 65.7718 441.542 64.9546 cv
398.84 22.2528 li
398.285 21.6979 398 20.9142 398.12 20.1387 cv
398.662 16.6463 397.605 12.9143 394.951 10.1154 cv
392.901 12.1651 li
393.004 12.1939 li
395.406 20.7195 li
392.916 23.2093 li
393.704 23.9977 li
389.12 28.5822 li
437.438 76.9005 li
435.758 82.2314 436.737 86.5875 442.553 89.5598 cv
cp
.847059 .854902 .862745 rgb
f
391.037 30.4988 mo
436.157 75.6197 li
436.914 76.3766 437.233 77.4675 437.007 78.5138 cv
436.011 83.1128 437.335 86.8932 442.553 89.5598 cv
448.715 92.7091 454.012 91.7269 455.633 91.3025 cv
455.953 91.2188 456.218 91.0039 456.369 90.7095 cv
456.961 89.55 li
449.328 85.6489 li
445.653 83.7708 445.259 79.8123 447.137 76.1374 cv
439.614 72.3774 li
394.26 27.0234 li
394.367 26.9332 394.479 26.8522 394.583 26.7574 cv
391.975 24.15 li
389.282 26.843 li
380.757 24.4409 li
380.728 24.3386 li
378.678 26.3883 li
381.397 28.9666 384.997 30.0422 388.403 29.605 cv
389.372 29.4803 390.345 29.8073 391.037 30.4988 cv
cp
.694118 .694118 .698039 rgb
f
378.547 15.533 mo
384.096 9.98459 li
384.274 9.80663 384.533 9.73712 384.776 9.80223 cv
392.355 11.8332 li
392.598 11.8983 392.788 12.0882 392.853 12.3312 cv
394.884 19.9104 li
394.949 20.1535 394.88 20.4128 394.702 20.5907 cv
389.153 26.1391 li
388.976 26.3171 388.716 26.3866 388.473 26.3215 cv
380.894 24.2907 li
380.651 24.2255 380.461 24.0356 380.396 23.7926 cv
378.365 16.2133 li
378.3 15.9702 378.369 15.7109 378.547 15.533 cv
cp
392.258 29.7661 mo
436.6 74.1082 li
437.405 74.9125 437.726 76.0843 437.44 77.1854 cv
436.153 82.149 437.691 85.9323 443.248 88.6259 cv
449.543 91.6772 456.493 90.4664 456.493 90.4664 cv
456.961 89.55 li
450.389 86.1912 li
446.715 84.3132 445.258 79.8118 447.137 76.1374 cv
447.206 76.0031 li
449.084 72.3285 453.586 70.8722 457.261 72.7504 cv
463.831 76.1082 li
464.272 75.2446 li
464.272 75.2446 461.232 68.337 454.982 65.4819 cv
450.343 63.3632 447.036 63.4801 444.298 65.5801 cv
442.988 66.5844 441.156 66.5227 439.989 65.3557 cv
398.274 23.6412 li
397.484 22.8506 397.21 21.702 397.486 20.6186 cv
398.548 16.4484 397.247 11.8015 393.568 8.81025 cv
389.416 5.43368 383.352 5.40642 379.174 8.75101 cv
373.716 13.1199 373.389 21.1108 378.192 25.914 cv
381.187 28.9091 385.42 29.9033 389.242 28.9071 cv
390.322 28.6258 391.469 28.9772 392.258 29.7661 cv
cp
.427451 .427451 .431373 rgb
f
395.248 26.793 mo
395.356 26.6853 li
396.208 25.8331 397.59 25.8331 398.442 26.6854 cv
439.568 67.8115 li
440.42 68.6637 440.42 70.0455 439.568 70.8977 cv
439.46 71.0053 li
438.608 71.8575 437.226 71.8575 436.374 71.0053 cv
395.248 29.8793 li
394.396 29.027 394.396 27.6452 395.248 26.793 cv
cp
.694118 .694118 .698039 rgb
f
404.702 63.3653 mo
402.861 61.5244 399.877 61.5245 398.036 63.3654 cv
396.195 65.2062 396.195 68.1909 398.036 70.0318 cv
398.065 70.0611 398.1 70.0803 398.13 70.1086 cv
381.227 87.0111 li
379.406 85.1899 li
379.276 85.0598 379.248 84.8589 379.339 84.6988 cv
391.607 62.9765 li
399.942 54.6413 li
400.443 54.1401 401.119 53.8526 401.828 53.8391 cv
405.203 53.7749 li
409.833 58.4053 li
404.779 63.4593 li
404.751 63.4296 404.731 63.3946 404.702 63.3653 cv
cp
.596078 .596078 .611765 rgb
f
405.266 62.9718 mo
408.867 66.5724 li
401.544 73.8958 li
397.943 70.2952 li
405.266 62.9718 li
cp
.537255 .537255 .537255 rgb
f
401.666 59.3712 mo
405.266 62.9718 li
397.943 70.2952 li
394.342 66.6946 li
401.666 59.3712 li
cp
.694118 .694118 .698039 rgb
f
404.675 63.3385 mo
406.516 65.1795 406.516 68.1642 404.675 70.0051 cv
402.835 71.8459 399.85 71.846 398.009 70.0051 cv
397.98 69.9758 397.96 69.9409 397.932 69.9111 cv
381.03 86.8136 li
382.851 88.6348 li
382.981 88.7649 383.182 88.7923 383.342 88.7019 cv
405.064 76.4338 li
413.399 68.0985 li
413.901 67.5974 414.188 66.9215 414.202 66.2128 cv
414.266 62.8382 li
409.635 58.2078 li
404.581 63.2618 li
404.611 63.2901 404.646 63.3093 404.675 63.3385 cv
cp
.847059 .854902 .862745 rgb
f
398.231 70.1948 mo
381.516 86.9097 li
381.408 87.0175 381.408 87.1922 381.516 87.3 cv
381.895 87.6791 li
381.986 87.77 382.127 87.7861 382.236 87.7181 cv
402.98 74.7732 li
403.153 74.6651 403.314 74.5376 403.458 74.3932 cv
412.176 65.6757 li
412.297 65.5547 412.408 65.4241 412.507 65.2853 cv
414.266 62.8381 li
415.992 61.0748 li
417.163 59.9034 419.461 59.3904 422.372 58.7408 cv
427.486 57.5988 434.49 56.0352 442.263 49.5222 cv
450.185 42.8854 452.983 37.0206 455.45 31.8459 cv
457.058 28.4741 458.447 25.5621 461.105 22.904 cv
457.092 18.8912 li
453.744 22.239 452.085 25.7185 450.328 29.4033 cv
448.001 34.2825 445.595 39.3279 438.619 45.1724 cv
431.904 50.7974 425.933 52.1305 421.134 53.2016 cv
417.476 54.0194 414.316 54.7244 411.979 57.0619 cv
410.538 58.5024 li
410.37 58.6704 410.098 58.6704 409.93 58.5024 cv
409.635 58.2077 li
404.581 63.2618 li
404.611 63.2901 404.646 63.3093 404.675 63.3386 cv
406.516 65.1795 406.516 68.1642 404.675 70.0051 cv
403.595 71.085 402.091 71.4894 400.723 71.3304 cv
399.759 71.2184 398.722 70.6859 398.231 70.1948 cv
cp
.427451 .427451 .431373 rgb
f
418.519 25.7776 mo
412.006 33.5509 410.442 40.5553 409.3 45.6693 cv
408.65 48.5794 408.137 50.8777 406.966 52.049 cv
405.203 53.7749 li
402.756 55.5331 li
402.617 55.6331 402.486 55.7442 402.365 55.8653 cv
393.648 64.5826 li
393.503 64.7269 393.376 64.8873 393.268 65.0604 cv
380.323 85.8044 li
380.255 85.9133 380.271 86.0547 380.362 86.1456 cv
380.963 86.747 li
381.071 86.8547 381.245 86.8553 381.352 86.7479 cv
383.232 84.8742 398.095 70.0592 398.068 70.0318 cv
396.227 68.1909 396.195 65.2062 398.036 63.3654 cv
399.877 61.5245 402.861 61.5245 404.702 63.3654 cv
404.731 63.3946 404.751 63.4296 404.779 63.4593 cv
409.833 58.4053 li
409.531 58.1034 li
409.367 57.9394 409.367 57.6737 409.531 57.5097 cv
410.979 56.0619 li
413.316 53.7243 414.021 50.5646 414.839 46.9064 cv
415.91 42.1079 417.243 36.1365 422.868 29.422 cv
428.713 22.4459 433.759 20.0398 438.638 17.7128 cv
442.322 15.9553 445.801 14.2953 449.149 10.9478 cv
445.136 6.93505 li
442.478 9.59319 439.566 10.9816 436.194 12.5899 cv
431.02 15.0583 425.155 17.8555 418.519 25.7776 cv
cp
f
449.203 6.18617 mo
447.872 4.85613 445.369 4.50823 444.039 5.83788 cv
441.45 8.42706 438.579 9.79624 435.254 11.3814 cv
430.027 13.8745 424.103 16.6995 417.387 24.7165 cv
410.785 32.5956 409.553 40.0267 408.398 45.1975 cv
407.768 48.0174 407.271 50.2449 406.216 51.2994 cv
411.38 56.4631 li
413.834 54.0092 414.556 50.7747 415.393 47.0302 cv
416.451 42.2916 417.767 36.3948 423.303 29.7865 cv
429.069 22.9052 434.058 20.5261 438.882 18.2253 cv
442.448 16.525 446.134 14.7667 449.551 11.3499 cv
450.881 10.0202 450.533 7.51621 449.203 6.18617 cv
cp
.94902 .556863 0 rgb
f
447.466 9.26513 mo
444.877 11.8543 442.006 13.2235 438.681 14.8087 cv
433.454 17.3018 427.53 20.1269 420.814 28.1438 cv
414.213 36.0229 412.98 43.4539 411.825 48.6248 cv
411.195 51.4447 410.698 53.6722 409.644 54.7267 cv
411.38 56.4631 li
413.834 54.0092 414.556 50.7747 415.393 47.0302 cv
416.451 42.2916 417.767 36.3948 423.303 29.7865 cv
429.069 22.9052 434.058 20.5261 438.882 18.2253 cv
442.448 16.525 446.134 14.7667 449.551 11.3499 cv
450.317 10.5838 450.526 9.4278 450.311 8.33117 cv
450.154 7.52447 448.796 7.93548 447.466 9.26513 cv
cp
.968627 .686275 .172549 rgb
f
461.855 18.8382 mo
463.185 20.1683 463.533 22.6722 462.203 24.0019 cv
459.614 26.591 458.245 29.4619 456.659 32.787 cv
454.166 38.0139 451.341 43.9379 443.324 50.6539 cv
435.445 57.2554 428.014 58.4879 422.843 59.6428 cv
420.023 60.2729 417.796 60.7698 416.741 61.8243 cv
411.578 56.6606 li
414.032 54.2067 417.266 53.4849 421.01 52.6482 cv
425.749 51.5902 431.646 50.2735 438.254 44.7374 cv
445.136 38.9721 447.515 33.9832 449.815 29.1587 cv
451.516 25.5931 453.274 21.9067 456.691 18.4899 cv
458.021 17.1602 460.525 17.5082 461.855 18.8382 cv
cp
f
405.389 58.9812 mo
406.457 57.9132 408.189 57.9132 409.257 58.9812 cv
410.325 60.0494 410.325 61.7811 409.257 62.8491 cv
408.189 63.9173 406.457 63.9173 405.389 62.8491 cv
404.321 61.7811 404.321 60.0494 405.389 58.9812 cv
cp
.537255 .537255 .537255 rgb
f
405.973 59.565 mo
406.719 58.8194 407.928 58.8194 408.673 59.565 cv
409.419 60.3107 409.419 61.5196 408.673 62.2653 cv
407.928 63.0109 406.719 63.0109 405.973 62.2653 cv
405.227 61.5196 405.227 60.3107 405.973 59.565 cv
cp
.313726 .309804 .32549 rgb
f
410.213 56.8279 mo
410.213 56.8279 409.174 56.6202 407.77 55.2163 cv
406.505 53.9508 406.2 52.815 406.2 52.815 cv
405.221 53.7938 li
409.531 58.1034 li
409.531 58.1034 409.247 57.7941 409.531 57.5096 cv
409.816 57.2251 410.213 56.8279 410.213 56.8279 cv
cp
.223529 .215686 .227451 rgb
f
460.255 22.0543 mo
457.666 24.6435 456.297 27.5143 454.712 30.8395 cv
452.219 36.0663 449.394 41.9904 441.377 48.7063 cv
433.498 55.3079 426.067 56.5404 420.896 57.6952 cv
418.076 58.3253 415.848 58.8223 414.794 59.8768 cv
411.586 56.6694 li
414.04 54.2155 417.275 53.4936 421.019 52.657 cv
425.758 51.5989 431.655 50.2822 438.263 44.7462 cv
445.144 38.9809 447.523 33.9919 449.824 29.1675 cv
451.525 25.6018 453.283 21.9155 456.7 18.4987 cv
457.466 17.7326 458.622 17.5234 459.718 17.738 cv
460.525 17.896 462.455 19.8548 460.255 22.0543 cv
cp
.94902 .556863 0 rgb
f
444.95 358.299 mo
444.95 348.821 446.64 331.025 446.64 324.795 cv
446.64 274.838 li
457.29 274.838 li
457.29 324.795 li
457.29 331.065 458.98 348.821 458.98 358.299 cv
458.98 384.878 458.98 384.878 451.965 384.878 cv
444.95 384.878 444.95 384.878 444.95 358.299 cv
cp
.968627 .686275 .172549 rgb
f
451.965 274.838 mo
457.29 274.838 li
457.29 324.795 li
457.29 331.065 458.98 348.821 458.98 358.299 cv
458.98 384.878 458.98 384.878 451.965 384.878 cv
451.965 368.588 451.965 274.838 451.965 274.838 cv
cp
.858824 .458824 .0196078 rgb
f
455.472 353.692 mo
455.472 274.838 li
448.5 274.838 li
448.5 353.692 li
455.472 353.692 li
cp
.94902 .556863 0 rgb
f
444.95 358.299 mo
444.95 348.821 446.64 331.025 446.64 324.795 cv
457.29 324.795 li
457.29 331.065 458.98 348.821 458.98 358.299 cv
458.98 384.878 458.98 384.878 451.965 384.878 cv
444.95 384.878 444.95 384.878 444.95 358.299 cv
cp
.427451 .427451 .431373 rgb
f
447.296 356.912 mo
447.296 347.827 448.421 330.767 448.421 324.795 cv
455.509 324.795 li
455.509 330.805 456.634 347.827 456.634 356.912 cv
456.634 382.391 456.634 382.391 451.965 382.391 cv
447.296 382.391 447.296 382.391 447.296 356.912 cv
cp
0 0 0 rgb
f
472.207 274.964 mo
472.207 263.935 li
471.023 263.174 li
442.668 263.174 li
427.962 270.274 li
427.962 275.725 li
471.023 275.725 li
472.207 274.964 li
cp
.847059 .854902 .862745 rgb
f
472.207 274.964 mo
472.207 263.935 li
470.432 264.696 li
446.276 264.696 li
429.23 274.457 li
427.962 275.725 li
471.023 275.725 li
472.207 274.964 li
cp
.596078 .596078 .611765 rgb
f
470.432 274.251 mo
470.432 264.902 li
470.432 264.788 470.34 264.696 470.226 264.696 cv
442.714 264.696 li
442.684 264.696 442.654 264.702 442.626 264.715 cv
429.348 270.978 li
429.276 271.013 429.23 271.085 429.23 271.165 cv
429.23 274.251 li
429.23 274.365 429.322 274.457 429.436 274.457 cv
470.226 274.457 li
470.34 274.457 470.432 274.365 470.432 274.251 cv
cp
.427451 .427451 .431373 rgb
f
16.3477 197.317 mo
22.3125 191.352 34.5767 181.216 38.4975 177.295 cv
69.9385 145.854 li
76.6406 152.556 li
45.1997 183.997 li
41.2534 187.943 31.1423 200.182 25.1775 206.147 cv
8.44939 222.875 8.44939 222.875 4.03447 218.46 cv
-.380396 214.045 -.380396 214.045 16.3477 197.317 cv
cp
.968627 .686275 .172549 rgb
f
73.2895 149.205 mo
76.6406 152.556 li
45.1997 183.997 li
41.2534 187.943 31.1423 200.182 25.1775 206.147 cv
8.44939 222.875 8.44939 222.875 4.03447 218.46 cv
14.2871 208.208 73.2895 149.205 73.2895 149.205 cv
cp
.858824 .458824 .0196078 rgb
f
25.8695 201.04 mo
75.497 151.413 li
71.1087 147.024 li
21.4812 196.652 li
25.8695 201.04 li
cp
.94902 .556863 0 rgb
f
16.3477 197.317 mo
22.3125 191.352 34.5767 181.216 38.4975 177.295 cv
45.1997 183.997 li
41.2534 187.943 31.1423 200.182 25.1775 206.147 cv
8.44939 222.875 8.44939 222.875 4.03447 218.46 cv
-.380396 214.045 -.380396 214.045 16.3477 197.317 cv
cp
.427451 .427451 .431373 rgb
f
18.697 197.921 mo
24.4149 192.203 35.8597 182.174 39.6182 178.416 cv
44.0789 182.876 li
40.296 186.659 30.2917 198.08 24.5738 203.798 cv
8.5381 219.833 8.5381 219.833 5.5997 216.895 cv
2.66135 213.957 2.66135 213.957 18.697 197.921 cv
cp
0 0 0 rgb
f
85.9491 162.024 mo
92.8905 155.083 li
92.6241 153.859 li
74.7789 136.014 li
61.0555 131.226 li
57.6247 134.657 li
84.7252 161.758 li
85.9491 162.024 li
cp
.847059 .854902 .862745 rgb
f
85.9491 162.024 mo
92.8905 155.083 li
91.2948 154.444 li
76.0923 139.242 li
59.2205 134.657 li
57.6247 134.657 li
84.7252 161.758 li
85.9491 162.024 li
cp
.596078 .596078 .611765 rgb
f
85.281 160.458 mo
91.1651 154.574 li
91.2367 154.503 91.2367 154.386 91.1651 154.315 cv
73.8505 137 li
73.8314 136.981 73.8082 136.966 73.7828 136.957 cv
61.4842 132.542 li
61.4173 132.518 61.3426 132.535 61.2924 132.585 cv
59.3502 134.527 li
59.2786 134.599 59.2786 134.715 59.3502 134.787 cv
85.0215 160.458 li
85.0931 160.53 85.2093 160.53 85.281 160.458 cv
cp
.427451 .427451 .431373 rgb
f
78.0892 197.317 mo
72.1243 191.352 59.8601 181.216 55.9393 177.295 cv
24.4984 145.854 li
17.7962 152.556 li
49.2371 183.997 li
53.1834 187.943 63.2945 200.182 69.2594 206.147 cv
85.9874 222.875 85.9874 222.875 90.4024 218.46 cv
94.8172 214.045 94.8172 214.045 78.0892 197.317 cv
cp
.968627 .686275 .172549 rgb
f
21.1473 149.205 mo
17.7962 152.556 li
49.2371 183.997 li
53.1834 187.943 63.2945 200.182 69.2594 206.147 cv
85.9874 222.875 85.9874 222.875 90.4024 218.46 cv
80.1497 208.208 21.1473 149.205 21.1473 149.205 cv
cp
.858824 .458824 .0196078 rgb
f
68.5673 201.04 mo
18.9398 151.413 li
23.3281 147.024 li
72.9556 196.652 li
68.5673 201.04 li
cp
.94902 .556863 0 rgb
f
78.0892 197.317 mo
72.1243 191.352 59.8601 181.216 55.9393 177.295 cv
49.2371 183.997 li
53.1834 187.943 63.2945 200.182 69.2594 206.147 cv
85.9874 222.875 85.9874 222.875 90.4024 218.46 cv
94.8172 214.045 94.8172 214.045 78.0892 197.317 cv
cp
.427451 .427451 .431373 rgb
f
75.7398 197.921 mo
70.0219 192.203 58.5771 182.174 54.8186 178.416 cv
50.3579 182.876 li
54.1408 186.659 64.1452 198.08 69.8631 203.798 cv
85.8987 219.833 85.8987 219.833 88.8371 216.895 cv
91.7755 213.957 91.7755 213.957 75.7398 197.921 cv
cp
0 0 0 rgb
f
8.48775 162.024 mo
1.54633 155.083 li
1.8127 153.859 li
19.6579 136.014 li
33.3813 131.226 li
36.8122 134.657 li
9.71161 161.758 li
8.48775 162.024 li
cp
.847059 .854902 .862745 rgb
f
8.48775 162.024 mo
1.54633 155.083 li
3.14206 154.444 li
18.3445 139.242 li
35.2164 134.657 li
36.8122 134.657 li
9.71161 161.758 li
8.48775 162.024 li
cp
.596078 .596078 .611765 rgb
f
9.15585 160.458 mo
3.27178 154.574 li
3.20012 154.503 3.20016 154.386 3.27178 154.315 cv
20.5863 137 li
20.6055 136.981 20.6286 136.966 20.654 136.957 cv
32.9527 132.542 li
33.0195 132.518 33.0942 132.535 33.1444 132.585 cv
35.0866 134.527 li
35.1583 134.599 35.1583 134.715 35.0866 134.787 cv
9.41533 160.458 li
9.34372 160.53 9.22751 160.53 9.15585 160.458 cv
cp
.427451 .427451 .431373 rgb
f
325.04 371.783 mo
321.616 371.324 li
321.639 371.145 323.998 353.239 322.376 337.84 cv
320.745 322.35 314.623 297.858 314.562 297.612 cv
317.913 296.771 li
317.975 297.019 324.156 321.744 325.813 337.478 cv
327.478 353.297 325.14 371.036 325.04 371.783 cv
cp
.313726 .309804 .32549 rgb
f
323.331 374.268 mo
321.154 373.973 320.438 372.678 320.637 371.193 cv
320.661 371.014 323.003 353.219 321.395 337.944 cv
320.154 326.162 316.295 309.12 314.602 301.974 cv
314.553 301.765 314.651 301.549 314.844 301.455 cv
315.375 301.195 316.096 300.958 317.191 300.695 cv
318.044 300.49 318.736 300.41 319.416 300.384 cv
319.639 300.375 319.838 300.521 319.89 300.738 cv
321.609 307.999 326.509 325.293 327.782 337.375 cv
329.459 353.31 327.107 371.162 327.006 371.915 cv
326.823 373.278 325.125 374.511 323.331 374.268 cv
cp
.94902 .556863 0 rgb
f
321.219 373.324 mo
320.761 372.702 320.528 372.004 320.637 371.193 cv
320.661 371.014 323.003 353.219 321.395 337.944 cv
320.154 326.162 316.295 309.12 314.602 301.974 cv
314.553 301.765 314.651 301.549 314.844 301.455 cv
315.375 301.195 316.096 300.958 317.191 300.695 cv
317.515 301.869 322.977 325.293 324.249 337.375 cv
325.551 349.742 324.299 361.964 323.625 367.17 cv
323.431 368.672 323.317 370.256 323.378 371.154 cv
323.547 373.665 321.795 374.108 321.219 373.324 cv
cp
.968627 .686275 .172549 rgb
f
301.013 371.783 mo
304.438 371.324 li
304.414 371.145 302.056 353.239 303.677 337.84 cv
305.308 322.35 311.43 297.858 311.491 297.612 cv
308.14 296.771 li
308.078 297.019 301.897 321.744 300.241 337.478 cv
298.575 353.297 300.913 371.036 301.013 371.783 cv
cp
.313726 .309804 .32549 rgb
f
302.722 374.268 mo
304.899 373.973 305.615 372.678 305.416 371.193 cv
305.392 371.014 303.05 353.219 304.659 337.944 cv
305.899 326.162 309.758 309.12 311.451 301.974 cv
311.5 301.765 311.402 301.549 311.21 301.455 cv
310.679 301.195 309.957 300.958 308.863 300.695 cv
308.009 300.49 307.317 300.41 306.637 300.384 cv
306.414 300.375 306.215 300.521 306.164 300.738 cv
304.444 307.999 299.544 325.293 298.272 337.375 cv
296.594 353.31 298.947 371.162 299.048 371.915 cv
299.231 373.278 300.929 374.511 302.722 374.268 cv
cp
.968627 .686275 .172549 rgb
f
304.835 373.324 mo
305.292 372.702 305.525 372.004 305.416 371.193 cv
305.392 371.014 303.05 353.219 304.659 337.944 cv
305.899 326.162 309.758 309.12 311.451 301.974 cv
311.5 301.765 311.402 301.549 311.21 301.455 cv
310.679 301.195 309.957 300.958 308.863 300.695 cv
308.538 301.869 303.076 325.293 301.804 337.375 cv
300.502 349.742 301.754 361.964 302.428 367.17 cv
302.622 368.672 302.378 371.538 302.201 372.243 cv
301.589 374.684 304.258 374.108 304.835 373.324 cv
cp
.94902 .556863 0 rgb
f
312.992 275.905 mo
312.992 275.905 li
306.598 275.905 301.415 274.242 301.415 272.189 cv
301.415 270.317 305.731 268.768 311.344 268.511 cv
311.818 268.057 312.992 266.437 312.992 266.437 cv
312.992 266.26 li
312.992 266.26 312.469 265.928 312.204 265.753 cv
303.059 265.925 295.771 269.076 295.771 272.938 cv
295.771 276.911 303.481 280.131 312.992 280.131 cv
312.992 280.131 li
312.992 275.905 li
cp
.764706 .772549 .784314 rgb
f
312.992 275.905 mo
313.918 275.905 li
313.571 275.905 312.303 275.9 311.964 275.891 cv
306.052 275.724 301.415 274.13 301.415 272.189 cv
301.415 270.317 305.731 268.768 311.344 268.511 cv
311.818 268.057 312.992 266.437 312.992 266.437 cv
312.992 266.316 li
312.992 266.316 312.415 266.17 312.204 266.103 cv
306.019 266.103 296.352 268.762 296.352 272.938 cv
296.352 275.616 299.28 277.928 304.47 279.19 cv
306.291 279.633 307.171 280.821 307.171 281.938 cv
307.171 286.056 li
307.171 286.813 307.351 287.559 307.696 288.232 cv
314.272 298.237 li
314.384 298.407 314.574 298.509 314.777 298.509 cv
317.956 298.509 li
318.322 298.509 318.604 298.188 318.556 297.825 cv
315.994 278.553 li
315.718 276.561 315.114 275.905 312.992 275.905 cv
cp
.427451 .427451 .431373 rgb
f
313.796 275.905 mo
312.992 275.905 li
312.871 275.905 li
312.976 275.905 313.171 275.905 313.394 275.904 cv
313.618 275.905 313.812 275.905 313.918 275.905 cv
313.796 275.905 li
cp
.313726 .309804 .32549 rgb
f
313.394 296.902 mo
311.638 294.23 li
317.302 288.392 li
317.585 290.525 li
313.394 296.902 li
cp
.223529 .215686 .227451 rgb
f
313 275.905 mo
313 275.905 li
319.394 275.905 324.577 274.242 324.577 272.189 cv
324.577 270.317 320.261 268.768 314.648 268.511 cv
314.174 268.057 313 266.437 313 266.437 cv
313 266.26 li
313 266.26 313.523 265.928 313.788 265.753 cv
322.933 265.925 330.221 269.076 330.221 272.938 cv
330.221 276.911 322.51 280.131 313 280.131 cv
313 280.131 li
313 275.905 li
cp
.658824 .658824 .658824 rgb
f
313 275.905 mo
312.074 275.905 li
312.421 275.905 313.689 275.9 314.028 275.891 cv
319.94 275.724 324.577 274.13 324.577 272.189 cv
324.577 270.317 320.261 268.768 314.648 268.511 cv
314.174 268.057 313 266.437 313 266.437 cv
313 266.316 li
313 266.316 313.577 266.17 313.788 266.103 cv
319.973 266.103 329.64 268.762 329.64 272.938 cv
329.64 275.616 326.712 277.928 321.522 279.19 cv
319.701 279.633 318.822 280.821 318.822 281.938 cv
318.822 286.056 li
318.822 286.813 318.641 287.559 318.296 288.232 cv
311.72 298.237 li
311.608 298.407 311.418 298.509 311.215 298.509 cv
308.036 298.509 li
307.67 298.509 307.388 298.188 307.436 297.825 cv
309.998 278.553 li
310.274 276.561 310.878 275.905 313 275.905 cv
cp
.427451 .427451 .431373 rgb
f
309.998 278.553 mo
310.274 276.561 310.878 275.905 313 275.905 cv
313.581 275.905 li
311.459 275.905 310.843 276.555 310.352 278.553 cv
309.091 285.376 li
309.998 278.553 li
cp
.764706 .772549 .784314 rgb
f
311.159 279.644 mo
311.159 280.806 312.101 281.748 313.263 281.748 cv
314.425 281.748 315.367 280.806 315.367 279.644 cv
315.367 278.482 314.425 277.541 313.263 277.541 cv
312.101 277.541 311.159 278.482 311.159 279.644 cv
cp
.658824 .658824 .658824 rgb
f
311.795 279.644 mo
311.795 280.455 312.452 281.113 313.263 281.113 cv
314.074 281.113 314.732 280.455 314.732 279.644 cv
314.732 278.833 314.074 278.176 313.263 278.176 cv
312.452 278.176 311.795 278.833 311.795 279.644 cv
cp
.313726 .309804 .32549 rgb
f
323.952 196.765 mo
317.987 190.8 305.723 180.663 301.802 176.742 cv
270.361 145.301 li
263.659 152.004 li
295.1 183.445 li
299.046 187.391 309.157 199.63 315.122 205.594 cv
331.85 222.322 331.85 222.322 336.265 217.908 cv
340.68 213.493 340.68 213.493 323.952 196.765 cv
cp
.968627 .686275 .172549 rgb
f
267.01 148.653 mo
263.659 152.004 li
295.1 183.445 li
299.046 187.391 309.157 199.63 315.122 205.594 cv
331.85 222.322 331.85 222.322 336.265 217.908 cv
326.013 207.655 267.01 148.653 267.01 148.653 cv
cp
.858824 .458824 .0196078 rgb
f
314.43 200.487 mo
264.803 150.86 li
269.191 146.472 li
318.818 196.099 li
314.43 200.487 li
cp
.94902 .556863 0 rgb
f
323.952 196.765 mo
317.987 190.8 305.723 180.663 301.802 176.742 cv
295.1 183.445 li
299.046 187.391 309.157 199.63 315.122 205.594 cv
331.85 222.322 331.85 222.322 336.265 217.908 cv
340.68 213.493 340.68 213.493 323.952 196.765 cv
cp
.427451 .427451 .431373 rgb
f
321.603 197.368 mo
315.885 191.65 304.44 181.622 300.681 177.863 cv
296.221 182.324 li
300.004 186.107 310.008 197.527 315.726 203.245 cv
331.762 219.281 331.762 219.281 334.7 216.342 cv
337.638 213.404 337.638 213.404 321.603 197.368 cv
cp
0 0 0 rgb
f
254.351 161.472 mo
247.409 154.53 li
247.676 153.306 li
265.521 135.461 li
279.244 130.674 li
282.675 134.105 li
255.574 161.205 li
254.351 161.472 li
cp
.847059 .854902 .862745 rgb
f
254.351 161.472 mo
247.409 154.53 li
249.005 153.892 li
264.207 138.689 li
281.079 134.105 li
282.675 134.105 li
255.574 161.205 li
254.351 161.472 li
cp
.596078 .596078 .611765 rgb
f
255.019 159.906 mo
249.135 154.022 li
249.063 153.95 249.063 153.834 249.135 153.762 cv
266.449 136.448 li
266.468 136.428 266.491 136.414 266.517 136.405 cv
278.815 131.99 li
278.882 131.966 278.957 131.983 279.007 132.033 cv
280.949 133.975 li
281.021 134.047 281.021 134.163 280.949 134.234 cv
255.278 159.906 li
255.207 159.977 255.09 159.977 255.019 159.906 cv
cp
.427451 .427451 .431373 rgb
f
275.18 219.724 mo
273.254 217.201 li
273.386 217.1 286.548 207.001 295.497 195.946 cv
304.5 184.825 316.432 164.94 316.551 164.741 cv
319.275 166.371 li
319.154 166.572 307.109 186.647 297.965 197.943 cv
288.771 209.3 275.731 219.304 275.18 219.724 cv
cp
.313726 .309804 .32549 rgb
f
272.456 220.228 mo
271.233 218.622 271.61 217.316 272.704 216.48 cv
272.835 216.38 285.915 206.342 294.793 195.376 cv
301.64 186.917 310.202 173.341 313.745 167.6 cv
313.848 167.432 314.052 167.356 314.238 167.42 cv
314.752 167.596 315.375 167.91 316.257 168.45 cv
316.944 168.872 317.446 169.269 317.905 169.694 cv
318.055 169.833 318.09 170.057 317.982 170.231 cv
314.382 176.065 306.332 190.481 299.311 199.155 cv
290.05 210.596 276.926 220.663 276.372 221.086 cv
275.367 221.853 273.463 221.551 272.456 220.228 cv
cp
.94902 .556863 0 rgb
f
271.697 218.243 mo
271.804 217.541 272.106 216.937 272.704 216.48 cv
272.835 216.38 285.915 206.342 294.793 195.376 cv
301.64 186.917 310.202 173.341 313.745 167.6 cv
313.848 167.432 314.052 167.356 314.238 167.42 cv
314.752 167.596 315.375 167.91 316.257 168.45 cv
315.705 169.423 304.038 188.187 297.016 196.861 cv
289.829 205.739 281.077 212.865 277.258 215.808 cv
276.156 216.658 275.053 217.613 274.509 218.235 cv
272.988 219.976 271.563 219.126 271.697 218.243 cv
cp
.968627 .686275 .172549 rgb
f
259.574 204.118 mo
262.096 206.043 li
262.197 205.911 272.296 192.749 283.351 183.8 cv
294.473 174.798 314.358 162.866 314.557 162.746 cv
312.927 160.023 li
312.725 160.144 292.651 172.189 281.354 181.333 cv
269.997 190.526 259.994 203.567 259.574 204.118 cv
cp
.313726 .309804 .32549 rgb
f
259.069 206.841 mo
260.675 208.064 261.981 207.688 262.817 206.594 cv
262.917 206.463 272.955 193.382 283.922 184.505 cv
292.381 177.658 305.956 169.095 311.698 165.553 cv
311.866 165.449 311.942 165.245 311.878 165.059 cv
311.702 164.546 311.387 163.923 310.847 163.041 cv
310.426 162.353 310.028 161.852 309.604 161.393 cv
309.464 161.242 309.241 161.208 309.066 161.316 cv
303.233 164.915 288.817 172.966 280.143 179.987 cv
268.702 189.248 258.635 202.372 258.212 202.926 cv
257.445 203.93 257.747 205.835 259.069 206.841 cv
cp
.968627 .686275 .172549 rgb
f
261.055 207.601 mo
261.756 207.494 262.361 207.191 262.817 206.594 cv
262.917 206.463 272.955 193.382 283.922 184.505 cv
292.381 177.658 305.956 169.095 311.698 165.553 cv
311.866 165.449 311.942 165.245 311.878 165.059 cv
311.702 164.546 311.387 163.923 310.847 163.041 cv
309.874 163.592 291.111 175.26 282.437 182.281 cv
273.558 189.468 266.433 198.221 263.489 202.04 cv
262.64 203.141 260.62 204.845 260.047 205.188 cv
258.064 206.376 260.171 207.735 261.055 207.601 cv
cp
.94902 .556863 0 rgb
f
329.632 149.621 mo
329.632 149.621 li
325.479 145.468 323.192 141.021 324.525 139.688 cv
325.742 138.471 329.551 140.268 333.364 143.748 cv
333.967 143.761 335.782 143.472 335.782 143.472 cv
335.897 143.356 li
335.897 143.356 335.772 142.801 335.714 142.515 cv
329.662 136.687 322.882 134 320.373 136.508 cv
317.793 139.089 320.709 146.188 326.887 152.366 cv
326.887 152.366 li
329.632 149.621 li
cp
.764706 .772549 .784314 rgb
f
329.632 149.621 mo
330.233 150.222 li
330.008 149.997 329.187 149.17 328.973 148.944 cv
325.241 144.995 323.265 140.948 324.525 139.688 cv
325.742 138.471 329.551 140.268 333.364 143.748 cv
333.967 143.761 335.782 143.472 335.782 143.472 cv
335.861 143.393 li
335.861 143.393 335.58 142.923 335.487 142.742 cv
331.469 138.725 323.464 134.173 320.751 136.886 cv
319.011 138.625 319.411 142.028 321.963 146.219 cv
322.858 147.689 322.657 149.033 321.932 149.758 cv
319.257 152.433 li
318.766 152.925 318.398 153.526 318.185 154.188 cv
315.958 164.958 li
315.92 165.141 315.977 165.331 316.109 165.463 cv
318.174 167.528 li
318.411 167.766 318.803 167.74 319.008 167.473 cv
329.861 153.291 li
330.976 151.818 331.01 150.999 329.632 149.621 cv
cp
.427451 .427451 .431373 rgb
f
330.154 150.143 mo
329.632 149.621 li
329.553 149.542 li
329.621 149.611 329.748 149.737 329.894 149.881 cv
330.039 150.027 330.165 150.154 330.233 150.222 cv
330.154 150.143 li
cp
.313726 .309804 .32549 rgb
f
316.255 163.52 mo
316.85 160.644 li
324.32 160.531 li
323.119 162.101 li
316.255 163.52 li
cp
.223529 .215686 .227451 rgb
f
329.637 149.626 mo
329.637 149.626 li
333.79 153.779 338.237 156.066 339.57 154.733 cv
340.787 153.516 338.989 149.707 335.51 145.894 cv
335.497 145.291 335.786 143.476 335.786 143.476 cv
335.902 143.361 li
335.902 143.361 336.457 143.486 336.743 143.544 cv
342.571 149.596 345.258 156.376 342.749 158.885 cv
340.169 161.465 333.069 158.549 326.892 152.371 cv
326.892 152.371 li
329.637 149.626 li
cp
.658824 .658824 .658824 rgb
f
329.637 149.626 mo
329.035 149.025 li
329.261 149.25 330.088 150.071 330.314 150.285 cv
334.263 154.016 338.31 155.993 339.57 154.733 cv
340.787 153.516 338.989 149.707 335.51 145.894 cv
335.497 145.291 335.786 143.476 335.786 143.476 cv
335.865 143.397 li
335.865 143.397 336.335 143.677 336.515 143.771 cv
340.533 147.789 345.085 155.794 342.372 158.507 cv
340.633 160.246 337.23 159.847 333.039 157.295 cv
331.569 156.4 330.225 156.6 329.5 157.326 cv
326.825 160.001 li
326.333 160.492 325.732 160.86 325.07 161.073 cv
314.3 163.3 li
314.117 163.338 313.927 163.281 313.795 163.149 cv
311.73 161.084 li
311.492 160.847 311.518 160.454 311.785 160.25 cv
325.967 149.397 li
327.44 148.282 328.259 148.248 329.637 149.626 cv
cp
.427451 .427451 .431373 rgb
f
325.967 149.397 mo
327.44 148.282 328.259 148.248 329.637 149.626 cv
330.014 150.004 li
328.636 148.626 327.814 148.647 326.197 149.626 cv
320.946 153.239 li
325.967 149.397 li
cp
.764706 .772549 .784314 rgb
f
326.013 150.859 mo
325.258 151.614 325.258 152.838 326.013 153.592 cv
326.767 154.347 327.991 154.347 328.746 153.592 cv
329.5 152.838 329.5 151.614 328.746 150.859 cv
327.991 150.105 326.767 150.105 326.013 150.859 cv
cp
.658824 .658824 .658824 rgb
f
326.425 151.272 mo
325.898 151.799 325.898 152.653 326.425 153.18 cv
326.952 153.707 327.806 153.707 328.333 153.18 cv
328.86 152.653 328.86 151.799 328.333 151.272 cv
327.806 150.745 326.952 150.745 326.425 151.272 cv
cp
.313726 .309804 .32549 rgb
f
401.187 287.44 mo
388.941 287.44 li
388.941 264.972 li
401.187 271.263 li
401.187 287.44 li
cp
.929412 .933333 .937255 rgb
f
401.187 287.44 mo
389.59 287.44 li
389.59 265.306 li
401.187 271.263 li
401.187 287.44 li
cp
.847059 .854902 .862745 rgb
f
384.743 286.36 mo
384.743 286.366 li
381.938 286.425 379.681 288.713 379.681 291.532 cv
379.681 295.625 384.743 297.669 384.743 302.421 cv
384.743 306.993 383.036 317.755 383.049 327.568 cv
383.064 339.405 384.021 348.683 384.021 348.683 cv
383.84 353.712 378.83 354.608 378.83 362.166 cv
378.83 369.419 384.809 375.275 392.107 375.075 cv
399.142 374.882 404.659 368.934 404.659 361.897 cv
404.659 288.597 li
404.659 287.362 403.657 286.36 402.422 286.36 cv
384.743 286.36 li
cp
.968627 .686275 .172549 rgb
f
389.59 286.366 mo
386.785 286.425 385.408 288.713 385.408 291.532 cv
385.408 295.625 388.676 297.669 388.676 302.421 cv
388.676 306.993 388.676 347.469 388.676 347.469 cv
388.676 354.586 384.204 355.048 384.204 362.166 cv
387.47 362.166 397.937 362.166 404.542 362.166 cv
404.542 288.597 li
404.542 287.362 403.541 286.36 402.305 286.36 cv
389.59 286.366 li
cp
.94902 .556863 0 rgb
f
384.351 300.201 mo
384.24 300.171 384.484 301.609 384.484 302.421 cv
384.484 306.993 382.776 317.755 382.789 327.568 cv
382.805 339.405 383.762 348.683 383.762 348.683 cv
383.789 349.078 383.856 349.579 383.945 349.579 cv
386.199 349.579 388.027 338.521 388.027 324.879 cv
388.027 311.531 386.539 300.663 384.351 300.201 cv
cp
0 0 0 rgb
f
403.767 326.458 mo
403.767 343.396 403.668 357.127 404.659 357.127 cv
405.65 357.127 406.453 343.396 406.453 326.458 cv
406.453 309.519 405.65 295.788 404.659 295.788 cv
403.668 295.788 403.767 309.519 403.767 326.458 cv
cp
f
378.841 361.654 mo
378.836 361.822 378.83 361.99 378.83 362.166 cv
378.83 369.419 384.809 375.275 392.107 375.075 cv
399.142 374.882 404.659 368.934 404.659 361.897 cv
404.659 361.654 li
378.841 361.654 li
cp
f
389.749 334.823 mo
390.317 334.823 390.778 335.284 390.778 335.852 cv
390.778 336.33 390.45 336.728 390.009 336.843 cv
400.234 336.843 li
399.792 336.728 399.465 336.33 399.465 335.852 cv
399.465 335.284 399.925 334.823 400.494 334.823 cv
399.925 334.823 399.465 334.363 399.465 333.795 cv
399.465 333.227 399.925 332.766 400.494 332.766 cv
399.925 332.766 399.465 332.306 399.465 331.738 cv
399.465 331.17 399.925 330.709 400.494 330.709 cv
399.925 330.709 399.465 330.249 399.465 329.68 cv
399.465 329.112 399.925 328.652 400.494 328.652 cv
399.925 328.652 399.465 328.191 399.465 327.623 cv
399.465 327.055 399.925 326.595 400.494 326.595 cv
399.925 326.595 399.465 326.134 399.465 325.566 cv
399.465 324.998 399.925 324.538 400.494 324.538 cv
399.925 324.538 399.465 324.077 399.465 323.509 cv
399.465 322.941 399.925 322.481 400.494 322.481 cv
399.925 322.481 399.465 322.02 399.465 321.452 cv
399.465 320.884 399.925 320.424 400.494 320.424 cv
399.925 320.424 399.465 319.963 399.465 319.395 cv
399.465 318.827 399.925 318.366 400.494 318.366 cv
399.925 318.366 399.465 317.906 399.465 317.338 cv
399.465 316.77 399.925 316.309 400.494 316.309 cv
399.925 316.309 399.465 315.849 399.465 315.281 cv
399.465 314.713 399.925 314.252 400.494 314.252 cv
399.925 314.252 399.465 313.792 399.465 313.224 cv
399.465 312.656 399.925 312.195 400.494 312.195 cv
399.925 312.195 399.465 311.735 399.465 311.167 cv
399.465 310.599 399.925 310.138 400.494 310.138 cv
399.925 310.138 399.465 309.677 399.465 309.109 cv
399.465 308.541 399.925 308.081 400.494 308.081 cv
399.925 308.081 399.465 307.62 399.465 307.052 cv
399.465 306.484 399.925 306.024 400.494 306.024 cv
399.925 306.024 399.465 305.563 399.465 304.995 cv
399.465 304.427 399.925 303.967 400.494 303.967 cv
399.925 303.967 399.465 303.506 399.465 302.938 cv
399.465 302.37 399.925 301.91 400.494 301.91 cv
399.925 301.91 399.465 301.449 399.465 300.881 cv
399.465 300.313 399.925 299.853 400.494 299.853 cv
399.925 299.853 399.465 299.392 399.465 298.824 cv
399.465 298.256 399.925 297.795 400.494 297.795 cv
399.925 297.795 399.465 297.335 399.465 296.767 cv
399.465 296.199 399.925 295.738 400.494 295.738 cv
399.925 295.738 399.465 295.278 399.465 294.71 cv
399.465 294.142 399.925 293.681 400.494 293.681 cv
399.925 293.681 399.465 293.221 399.465 292.653 cv
399.465 292.097 399.906 291.647 400.457 291.628 cv
400.339 291.162 399.921 290.816 399.418 290.816 cv
390.824 290.816 li
390.322 290.816 389.904 291.162 389.786 291.628 cv
390.336 291.647 390.778 292.097 390.778 292.653 cv
390.778 293.221 390.317 293.681 389.749 293.681 cv
390.317 293.681 390.778 294.142 390.778 294.71 cv
390.778 295.278 390.317 295.738 389.749 295.738 cv
390.317 295.738 390.778 296.199 390.778 296.767 cv
390.778 297.335 390.317 297.795 389.749 297.795 cv
390.317 297.795 390.778 298.256 390.778 298.824 cv
390.778 299.392 390.317 299.853 389.749 299.853 cv
390.317 299.853 390.778 300.313 390.778 300.881 cv
390.778 301.449 390.317 301.91 389.749 301.91 cv
390.317 301.91 390.778 302.37 390.778 302.938 cv
390.778 303.506 390.317 303.967 389.749 303.967 cv
390.317 303.967 390.778 304.427 390.778 304.995 cv
390.778 305.563 390.317 306.024 389.749 306.024 cv
390.317 306.024 390.778 306.484 390.778 307.052 cv
390.778 307.62 390.317 308.081 389.749 308.081 cv
390.317 308.081 390.778 308.541 390.778 309.109 cv
390.778 309.677 390.317 310.138 389.749 310.138 cv
390.317 310.138 390.778 310.599 390.778 311.167 cv
390.778 311.735 390.317 312.195 389.749 312.195 cv
390.317 312.195 390.778 312.656 390.778 313.224 cv
390.778 313.792 390.317 314.252 389.749 314.252 cv
390.317 314.252 390.778 314.713 390.778 315.281 cv
390.778 315.849 390.317 316.309 389.749 316.309 cv
390.317 316.309 390.778 316.77 390.778 317.338 cv
390.778 317.906 390.317 318.366 389.749 318.366 cv
390.317 318.366 390.778 318.827 390.778 319.395 cv
390.778 319.963 390.317 320.424 389.749 320.424 cv
390.317 320.424 390.778 320.884 390.778 321.452 cv
390.778 322.02 390.317 322.481 389.749 322.481 cv
390.317 322.481 390.778 322.941 390.778 323.509 cv
390.778 324.077 390.317 324.538 389.749 324.538 cv
390.317 324.538 390.778 324.998 390.778 325.566 cv
390.778 326.134 390.317 326.595 389.749 326.595 cv
390.317 326.595 390.778 327.055 390.778 327.623 cv
390.778 328.191 390.317 328.652 389.749 328.652 cv
390.317 328.652 390.778 329.112 390.778 329.68 cv
390.778 330.249 390.317 330.709 389.749 330.709 cv
390.317 330.709 390.778 331.17 390.778 331.738 cv
390.778 332.306 390.317 332.766 389.749 332.766 cv
390.317 332.766 390.778 333.227 390.778 333.795 cv
390.778 334.363 390.317 334.823 389.749 334.823 cv
cp
.847059 .854902 .862745 rgb
f
400.494 338.937 mo
399.925 338.937 399.465 338.477 399.465 337.909 cv
399.465 337.883 399.471 337.859 399.473 337.834 cv
390.77 337.834 li
390.772 337.859 390.778 337.883 390.778 337.909 cv
390.778 338.477 390.317 338.937 389.749 338.937 cv
390.317 338.937 390.778 339.398 390.778 339.966 cv
390.778 340.534 390.317 340.995 389.749 340.995 cv
390.317 340.995 390.778 341.455 390.778 342.023 cv
390.778 342.591 390.317 343.052 389.749 343.052 cv
390.317 343.052 390.778 343.512 390.778 344.08 cv
390.778 344.648 390.317 345.109 389.749 345.109 cv
390.317 345.109 390.778 345.569 390.778 346.137 cv
390.778 346.705 390.317 347.166 389.749 347.166 cv
390.317 347.166 390.778 347.626 390.778 348.195 cv
390.778 348.762 390.317 349.223 389.749 349.223 cv
390.317 349.223 390.778 349.684 390.778 350.252 cv
390.778 350.82 390.317 351.28 389.749 351.28 cv
390.317 351.28 390.778 351.741 390.778 352.309 cv
390.778 352.877 390.317 353.337 389.749 353.337 cv
390.317 353.337 390.778 353.798 390.778 354.366 cv
390.778 354.922 390.336 355.372 389.785 355.391 cv
389.902 355.858 390.321 356.206 390.824 356.206 cv
399.418 356.206 li
399.922 356.206 400.341 355.858 400.458 355.391 cv
399.907 355.372 399.465 354.922 399.465 354.366 cv
399.465 353.798 399.925 353.337 400.494 353.337 cv
399.925 353.337 399.465 352.877 399.465 352.309 cv
399.465 351.741 399.925 351.28 400.494 351.28 cv
399.925 351.28 399.465 350.82 399.465 350.252 cv
399.465 349.684 399.925 349.223 400.494 349.223 cv
399.925 349.223 399.465 348.762 399.465 348.195 cv
399.465 347.626 399.925 347.166 400.494 347.166 cv
399.925 347.166 399.465 346.705 399.465 346.137 cv
399.465 345.569 399.925 345.109 400.494 345.109 cv
399.925 345.109 399.465 344.648 399.465 344.08 cv
399.465 343.512 399.925 343.052 400.494 343.052 cv
399.925 343.052 399.465 342.591 399.465 342.023 cv
399.465 341.455 399.925 340.995 400.494 340.995 cv
399.925 340.995 399.465 340.534 399.465 339.966 cv
399.465 339.398 399.925 338.937 400.494 338.937 cv
cp
.858824 .458824 .0196078 rgb
f
401.187 336.843 mo
401.187 340.225 398.445 342.966 395.064 342.966 cv
391.682 342.966 388.941 340.225 388.941 336.843 cv
388.941 333.462 391.682 330.72 395.064 330.72 cv
398.445 330.72 401.187 333.462 401.187 336.843 cv
cp
0 0 0 rgb
f
398.055 336.843 mo
398.055 338.495 396.716 339.835 395.064 339.835 cv
393.411 339.835 392.072 338.495 392.072 336.843 cv
392.072 335.191 393.411 333.852 395.064 333.852 cv
396.716 333.852 398.055 335.191 398.055 336.843 cv
cp
.847059 .854902 .862745 rgb
f
86.0096 274.331 mo
83.8791 267.747 79.4392 264.696 77.9929 263.85 cv
77.7076 263.683 77.368 263.647 77.0534 263.749 cv
75.8146 264.15 li
78.0867 271.172 li
79.357 275.098 77.2038 279.311 73.2773 280.581 cv
73.1336 280.627 li
69.2069 281.897 64.994 279.744 63.7235 275.817 cv
61.4521 268.797 li
60.092 269.237 li
59.7731 269.34 59.5156 269.573 59.3843 269.881 cv
58.7311 271.416 57.0219 276.432 59.1537 283.021 cv
60.7122 287.837 63.536 289.914 67.2862 290.234 cv
68.4377 290.332 69.3259 291.289 69.3259 292.444 cv
69.3259 352.834 li
69.3259 353.619 68.9739 354.375 68.3404 354.838 cv
65.4875 356.924 63.5961 360.311 63.4937 364.167 cv
66.3924 364.167 li
66.3403 364.074 li
70.6703 356.347 li
74.1914 356.347 li
74.1914 355.232 li
80.6748 355.232 li
80.6748 286.899 li
85.6322 284.318 88.0202 280.545 86.0096 274.331 cv
cp
f
80.6748 352.521 mo
80.6748 288.711 li
80.6748 287.64 81.2207 286.643 82.1207 286.064 cv
86.077 283.516 87.8134 279.906 86.0096 274.331 cv
83.8791 267.747 79.4392 264.696 77.9929 263.85 cv
77.7076 263.683 77.368 263.647 77.0534 263.749 cv
75.8146 264.15 li
78.4535 272.306 li
79.724 276.232 77.2038 279.31 73.2773 280.581 cv
75.938 288.559 li
75.938 352.699 li
75.7988 352.688 75.6625 352.666 75.5218 352.659 cv
75.5218 356.347 li
79.3303 356.347 li
83.6602 364.074 li
83.6083 364.167 li
86.5071 364.167 li
86.4075 360.421 84.6222 357.114 81.9053 355.016 cv
81.1314 354.418 80.6748 353.499 80.6748 352.521 cv
cp
.694118 .694118 .698039 rgb
f
78.9236 371.935 mo
71.077 371.935 li
70.8253 371.935 70.5929 371.801 70.4671 371.583 cv
66.5438 364.787 li
66.4179 364.569 66.4179 364.301 66.5438 364.083 cv
70.4671 357.288 li
70.5929 357.07 70.8253 356.935 71.077 356.935 cv
78.9236 356.935 li
79.1753 356.935 79.4079 357.07 79.5337 357.288 cv
83.457 364.083 li
83.5827 364.301 83.5827 364.569 83.457 364.787 cv
79.5337 371.583 li
79.4079 371.801 79.1753 371.935 78.9236 371.935 cv
cp
79.2928 352.175 mo
79.2928 289.466 li
79.2928 288.329 79.8943 287.273 80.8747 286.696 cv
85.2946 284.096 86.8827 280.334 84.8579 274.5 cv
82.5642 267.891 76.7937 263.833 76.7937 263.833 cv
75.8146 264.15 li
78.0867 271.172 li
79.357 275.098 77.2038 279.311 73.2773 280.581 cv
73.1336 280.627 li
69.2069 281.897 64.994 279.744 63.7235 275.817 cv
61.4521 268.797 li
60.5293 269.096 li
60.5293 269.096 57.7951 276.13 60.1957 282.568 cv
61.9776 287.347 64.3988 289.602 67.8197 290.054 cv
69.4559 290.269 70.7079 291.609 70.7079 293.259 cv
70.7079 352.252 li
70.7079 353.37 70.0895 354.376 69.1282 354.947 cv
65.4282 357.145 63.0626 361.351 63.5486 366.067 cv
64.0972 371.391 68.3656 375.698 73.6849 376.287 cv
80.6334 377.057 86.5152 371.638 86.5152 364.845 cv
86.5152 360.61 84.2252 356.914 80.818 354.915 cv
79.8556 354.351 79.2928 353.291 79.2928 352.175 cv
cp
.427451 .427451 .431373 rgb
f
75.0764 352.164 mo
74.9241 352.164 li
73.719 352.164 72.7419 351.186 72.7419 349.981 cv
72.7419 291.82 li
72.7419 290.615 73.719 289.638 74.9241 289.638 cv
75.0764 289.638 li
76.2816 289.638 77.2587 290.615 77.2587 291.82 cv
77.2587 349.981 li
77.2587 351.186 76.2816 352.164 75.0764 352.164 cv
cp
.694118 .694118 .698039 rgb
f
10.3986 83.5882 mo
9.0105 82.2001 9.01057 79.9496 10.3986 78.5616 cv
11.7866 77.1736 14.037 77.1736 15.4251 78.5616 cv
16.8131 79.9497 16.8131 82.2001 15.4251 83.5882 cv
14.0371 84.9761 11.7866 84.9762 10.3986 83.5882 cv
cp
91.3891 31.4874 mo
95.0381 24.4702 94.5942 17.7571 94.1307 11.7371 cv
94.1068 11.4264 93.9178 11.1539 93.6359 11.0213 cv
92.9538 10.7004 li
87.3879 22.2451 li
86.1223 24.9357 82.915 26.0908 80.2246 24.8251 cv
59.6463 14.9415 li
59.3853 14.8162 59.0776 14.9503 58.984 15.2242 cv
57.3511 19.9999 58.5384 28.4577 54.8977 31.7901 cv
7.35778 73.6619 li
3.74043 77.0172 3.67913 82.8185 7.3553 86.4946 cv
7.48972 86.6291 li
11.1659 90.3052 16.9672 90.2439 20.3225 86.6266 cv
20.3225 86.6266 57.7364 46.0404 61.7993 41.9112 cv
65.8622 37.7821 66.9801 38.0369 71.9538 38.466 cv
78.7609 39.0534 87.4871 38.9914 91.3891 31.4874 cv
cp
.847059 .854902 .862745 rgb
f
91.3891 31.4874 mo
95.0381 24.4702 94.5942 17.7571 94.1307 11.7371 cv
94.1068 11.4264 93.9178 11.1539 93.6359 11.0213 cv
92.9538 10.7004 li
88.6419 23.4991 li
60.56 37.4524 li
60.56 37.4524 39.3639 58.9081 26.0948 76.2324 cv
16.0895 89.2953 12.257 89.9552 7.3553 86.4946 cv
7.48972 86.6291 li
11.1659 90.3052 16.9672 90.2439 20.3225 86.6266 cv
20.3225 86.6266 57.7364 46.0404 61.7993 41.9112 cv
65.8622 37.7821 66.98 38.037 71.9538 38.4661 cv
78.7608 39.0535 87.4871 38.9914 91.3891 31.4874 cv
cp
.694118 .694118 .698039 rgb
f
10.3986 83.5882 mo
9.0105 82.2001 9.01057 79.9496 10.3986 78.5616 cv
11.7866 77.1736 14.037 77.1736 15.4251 78.5616 cv
16.8131 79.9497 16.8131 82.2001 15.4251 83.5882 cv
14.0371 84.9761 11.7866 84.9762 10.3986 83.5882 cv
cp
90.245 30.3432 mo
93.8919 23.3299 94.5324 17.702 94.1289 11.7441 cv
94.1077 11.4307 93.9159 11.1529 93.6316 11.0193 cv
92.9538 10.7004 li
87.3879 22.2451 li
86.1223 24.9357 82.915 26.0908 80.2246 24.8251 cv
59.6468 14.9417 li
59.3869 14.8169 59.0785 14.9483 58.9851 15.221 cv
58.1776 17.58 58.0592 20.8386 57.7069 23.934 cv
57.5834 25.0196 57.7719 31.3939 56.0419 32.9343 cv
8.84518 75.1493 li
5.2279 78.5046 6.28701 82.4514 8.84277 85.0072 cv
11.3985 87.5629 15.4797 88.7565 18.8351 85.1392 cv
18.8351 85.1392 56.249 44.553 60.3119 40.4237 cv
64.3748 36.2947 66.9801 38.0369 71.9538 38.466 cv
78.7609 39.0534 86.3429 37.8472 90.245 30.3432 cv
cp
.427451 .427451 .431373 rgb
f
17.3476 83.6517 mo
17.3476 83.6517 55.061 43.365 59.124 39.2359 cv
60.1094 38.1393 60.6424 36.6506 58.6063 35.1653 cv
57.1297 34.088 55.4801 35.4596 55.4801 35.4596 cv
10.3326 76.6367 li
8.27567 78.5981 7.77441 80.964 10.3302 83.5198 cv
10.3429 83.5325 10.3558 83.5425 10.3686 83.5549 cv
9.01241 82.1645 9.02118 79.939 10.3986 78.5616 cv
11.7866 77.1736 14.037 77.1736 15.4251 78.5616 cv
16.8131 79.9497 16.8131 82.2001 15.4251 83.5882 cv
14.1274 84.8858 12.0762 84.9697 10.6804 83.8409 cv
13.1425 86.0071 15.8067 85.3465 17.3476 83.6517 cv
cp
.607843 .607843 .607843 rgb
f
64.4793 15.797 mo
69.2465 11.08 74.4865 7.32782 79.4753 3.81838 cv
80.1224 3.36321 80.9618 3.29597 81.6751 3.63806 cv
82.5163 4.17462 li
74.2197 22.1722 li
64.7843 17.5544 li
64.108 17.2321 63.9469 16.3239 64.4793 15.797 cv
cp
.694118 .694118 .698039 rgb
f
64.4793 15.797 mo
69.2465 11.08 74.4865 7.32782 79.4753 3.81838 cv
80.1224 3.36321 80.9618 3.29597 81.6751 3.63806 cv
73.29 20.5016 li
73.0993 20.8853 72.6345 21.0429 72.2497 20.8546 cv
64.921 17.2678 li
64.2447 16.9456 63.9469 16.3239 64.4793 15.797 cv
cp
.427451 .427451 .431373 rgb
f
70.7054 34.3619 mo
62.1293 30.2531 li
67.2033 19.6625 li
75.7793 23.7713 li
70.7054 34.3619 li
cp
.596078 .596078 .611765 rgb
f
62.7235 30.5342 mo
62.1293 30.2531 li
67.2033 19.6625 li
67.1969 21.1973 li
62.7235 30.5342 li
cp
.407843 .403922 .423529 rgb
f
70.7054 34.3619 mo
62.1293 30.2531 li
63.4118 29.0297 li
70.6453 32.4953 li
70.7054 34.3619 li
cp
.929412 .933333 .937255 rgb
f
68.4941 20.8731 mo
68.1121 20.6901 66.77 22.6969 65.4963 25.3554 cv
64.2226 28.0139 63.4997 30.3173 63.8816 30.5003 cv
64.2636 30.6833 65.6058 28.6766 66.8795 26.0181 cv
68.1532 23.3596 68.8761 21.0561 68.4941 20.8731 cv
cp
.313726 .309804 .32549 rgb
f
69.8773 21.5358 mo
69.4954 21.3528 68.1532 23.3596 66.8795 26.0181 cv
65.6058 28.6766 64.8829 30.98 65.2649 31.163 cv
65.6468 31.3461 66.989 29.3393 68.2627 26.6808 cv
69.5364 24.0223 70.2593 21.7188 69.8773 21.5358 cv
cp
f
71.2606 22.1985 mo
70.8786 22.0155 69.5364 24.0223 68.2627 26.6808 cv
66.989 29.3393 66.2661 31.6428 66.648 31.8258 cv
67.03 32.0088 68.3723 30.002 69.646 27.3435 cv
70.9197 24.685 71.6425 22.3816 71.2606 22.1985 cv
cp
f
72.6437 22.8613 mo
72.2618 22.6783 70.9197 24.685 69.646 27.3435 cv
68.3723 30.002 67.6493 32.3055 68.0313 32.4885 cv
68.4133 32.6715 69.7555 30.6647 71.0292 28.0062 cv
72.3029 25.3477 73.0257 23.0442 72.6437 22.8613 cv
cp
f
74.027 23.524 mo
73.645 23.341 72.3029 25.3477 71.0292 28.0062 cv
69.7555 30.6647 69.0325 32.9682 69.4145 33.1512 cv
69.7965 33.3342 71.1387 31.3274 72.4124 28.6689 cv
73.6861 26.0105 74.409 23.707 74.027 23.524 cv
cp
f
22.0564 5.85637 mo
15.8942 2.70709 10.5974 3.68926 8.97635 4.11368 cv
8.65657 4.19736 8.39122 4.41228 8.24074 4.7067 cv
7.64828 5.86617 li
14.2203 9.22494 li
17.8949 11.103 19.351 15.6044 17.4725 19.2787 cv
17.4037 19.4131 li
15.5252 23.0877 11.0235 24.544 7.34855 22.6658 cv
.778446 19.308 li
.127867 20.5808 li
-.0246407 20.8793 -.0422118 21.226 .0831509 21.537 cv
.706473 23.0841 3.04466 27.8394 9.21085 30.9908 cv
13.7186 33.2946 17.1841 32.7664 20.0621 30.3409 cv
20.9458 29.5962 22.2502 29.6444 23.0673 30.4616 cv
65.7691 73.1634 li
66.324 73.7182 66.6098 74.5019 66.4894 75.2774 cv
65.9473 78.7699 67.0044 82.5018 69.6585 85.3008 cv
71.7083 83.2511 li
71.6058 83.2222 li
69.2037 74.6967 li
71.6935 72.2069 li
70.9051 71.4184 li
75.4895 66.834 li
27.1712 18.5156 li
28.8511 13.1847 27.8721 8.82869 22.0564 5.85637 cv
cp
.847059 .854902 .862745 rgb
f
73.5729 64.9174 mo
28.4521 19.7965 li
27.6952 19.0396 27.3762 17.9486 27.6027 16.9024 cv
28.5987 12.3034 27.274 8.523 22.0564 5.85637 cv
15.8942 2.70709 10.5974 3.68926 8.97635 4.11368 cv
8.65657 4.19736 8.39122 4.41228 8.24074 4.7067 cv
7.64828 5.86617 li
15.2814 9.76728 li
18.9563 11.6454 19.3506 15.6039 17.4725 19.2787 cv
24.9955 23.0388 li
70.3494 68.3927 li
70.2428 68.483 70.1309 68.5639 70.0268 68.6588 cv
72.6342 71.2662 li
75.3272 68.5732 li
83.8528 70.9752 li
83.8817 71.0776 li
85.9315 69.0279 li
83.2123 66.4496 79.612 65.374 76.2069 65.8111 cv
75.237 65.9358 74.2644 65.6089 73.5729 64.9174 cv
cp
.694118 .694118 .698039 rgb
f
86.0621 79.8832 mo
80.5137 85.4316 li
80.3358 85.6095 80.0766 85.679 79.8335 85.6139 cv
72.2542 83.583 li
72.0111 83.5179 71.8212 83.328 71.7561 83.085 cv
69.7253 75.5057 li
69.6602 75.2627 69.7296 75.0034 69.9076 74.8254 cv
75.456 69.277 li
75.6339 69.0991 75.8933 69.0296 76.1364 69.0947 cv
83.7156 71.1255 li
83.9585 71.1907 84.1484 71.3806 84.2137 71.6235 cv
86.2446 79.2029 li
86.3097 79.4459 86.2401 79.7052 86.0621 79.8832 cv
cp
72.3512 65.6501 mo
28.0091 21.308 li
27.2047 20.5036 26.8836 19.3319 27.169 18.2308 cv
28.456 13.2672 26.9186 9.48389 21.3616 6.79022 cv
15.0664 3.73894 8.11661 4.94977 8.11661 4.94977 cv
7.64828 5.86617 li
14.2203 9.22494 li
17.8949 11.103 19.351 15.6044 17.4725 19.2787 cv
17.4037 19.4131 li
15.5252 23.0877 11.0235 24.544 7.34855 22.6658 cv
.778446 19.308 li
.337021 20.1716 li
.337021 20.1716 3.37784 27.0792 9.62795 29.9342 cv
14.2666 32.053 17.5738 31.9361 20.3117 29.8361 cv
21.6213 28.8318 23.4537 28.8935 24.6207 30.0605 cv
66.3351 71.7749 li
67.1257 72.5655 67.3999 73.7142 67.1238 74.7976 cv
66.0614 78.9678 67.3628 83.6147 71.0414 86.6059 cv
75.1937 89.9825 81.2573 90.0097 85.4354 86.6652 cv
90.8932 82.2963 91.2205 74.3054 86.4173 69.5022 cv
83.4222 66.5071 79.1895 65.5129 75.3671 66.509 cv
74.2874 66.7904 73.1401 66.439 72.3512 65.6501 cv
cp
.427451 .427451 .431373 rgb
f
69.3614 68.6232 mo
69.2537 68.7309 li
68.4015 69.5831 67.0197 69.5831 66.1674 68.7308 cv
25.0414 27.6047 li
24.1892 26.7525 24.1892 25.3707 25.0414 24.5185 cv
25.149 24.4108 li
26.0012 23.5586 27.383 23.5586 28.2352 24.4108 cv
69.3613 65.5369 li
70.2136 66.3892 70.2136 67.771 69.3614 68.6232 cv
cp
.694118 .694118 .698039 rgb
f
267.919 285.545 mo
267.919 351.157 li
273.119 353.864 275.623 357.821 273.514 364.338 cv
271.39 370.902 267.078 374.117 265.354 375.181 cv
264.911 375.455 264.373 375.517 263.878 375.357 cv
262.822 375.015 li
265.205 367.652 li
266.537 363.534 264.279 359.116 260.161 357.783 cv
258.82 357.349 li
255.36 356.23 251.647 358.127 250.527 361.588 cv
247.76 370.142 li
246.581 369.76 li
246.079 369.598 245.674 369.224 245.48 368.734 cv
244.736 366.861 243.226 361.786 245.349 355.224 cv
247.042 349.993 250.158 347.843 254.303 347.63 cv
255.258 347.581 256.017 346.812 256.017 345.855 cv
256.017 283.817 li
256.017 283.208 255.699 282.649 255.19 282.315 cv
252.126 280.304 250.793 277.463 252.205 273.097 cv
254.234 266.826 258.913 264.609 258.913 264.609 cv
260.267 265.046 li
258.471 270.599 li
257.466 273.703 259.169 277.035 262.273 278.039 cv
262.387 278.076 li
265.492 279.081 268.823 277.378 269.828 274.273 cv
271.624 268.721 li
273.08 269.192 li
273.08 269.192 275.479 273.672 273.442 279.969 cv
272.339 283.378 270.433 285.05 267.919 285.545 cv
cp
.847059 .854902 .862745 rgb
f
267.919 286.881 mo
267.919 350.11 li
267.919 350.744 268.261 351.327 268.808 351.648 cv
273.397 354.338 275.499 358.204 273.514 364.338 cv
271.39 370.902 267.078 374.117 265.354 375.181 cv
264.911 375.455 264.373 375.517 263.878 375.357 cv
262.822 375.015 li
265.59 366.462 li
266.922 362.344 264.279 359.116 260.161 357.783 cv
262.952 349.416 li
262.952 285.323 li
262.114 285.141 261.242 284.9 260.338 284.608 cv
262.387 278.076 li
265.492 279.081 268.533 278.276 269.537 275.171 cv
271.624 268.721 li
273.08 269.192 li
273.08 269.192 275.479 273.672 273.442 279.969 cv
272.519 282.821 271.034 284.457 269.102 285.206 cv
268.4 285.478 267.919 286.129 267.919 286.881 cv
cp
.694118 .694118 .698039 rgb
f
272.734 279.929 mo
271.747 282.979 270.285 284.65 268.323 285.33 cv
267.216 285.714 266.47 286.752 266.47 287.923 cv
266.47 349.308 li
266.47 350.027 266.873 350.681 267.507 351.02 cv
272.612 353.757 274.523 357.775 272.306 364.16 cv
269.901 371.092 263.849 375.348 263.849 375.348 cv
262.822 375.015 li
265.205 367.651 li
266.537 363.534 264.279 359.115 260.161 357.783 cv
260.011 357.735 li
255.893 356.402 251.474 358.661 250.142 362.779 cv
247.76 370.142 li
246.792 369.828 li
246.792 369.828 243.924 362.451 246.442 355.699 cv
248.502 350.174 251.377 347.865 255.574 347.762 cv
256.626 347.736 257.467 346.88 257.467 345.829 cv
257.467 285.152 li
257.467 284.187 256.953 283.299 256.128 282.798 cv
252.803 280.776 251.712 277.865 253.335 273.176 cv
255.265 267.603 259.797 264.895 259.797 264.895 cv
260.267 265.046 li
258.471 270.599 li
257.466 273.703 259.169 277.035 262.273 278.039 cv
262.387 278.076 li
265.492 279.081 268.823 277.378 269.828 274.273 cv
271.624 268.721 li
272.024 268.851 li
272.024 268.851 274.772 273.632 272.734 279.929 cv
cp
.427451 .427451 .431373 rgb
f
262.048 285.464 mo
261.888 285.464 li
260.624 285.464 259.6 286.488 259.6 287.752 cv
259.6 345.996 li
259.6 347.26 260.624 348.285 261.888 348.285 cv
262.048 348.285 li
263.312 348.285 264.337 347.26 264.337 345.996 cv
264.337 287.752 li
264.337 286.488 263.312 285.464 262.048 285.464 cv
cp
.694118 .694118 .698039 rgb
f
159.192 161.056 mo
161.033 159.215 161.032 156.23 159.192 154.389 cv
157.351 152.548 154.366 152.548 152.525 154.389 cv
152.496 154.418 152.477 154.453 152.448 154.483 cv
135.546 137.581 li
137.367 135.759 li
137.497 135.629 137.698 135.602 137.858 135.692 cv
159.58 147.96 li
167.916 156.296 li
168.417 156.797 168.704 157.473 168.718 158.181 cv
168.782 161.556 li
164.152 166.186 li
159.098 161.132 li
159.127 161.104 159.162 161.085 159.192 161.056 cv
cp
.596078 .596078 .611765 rgb
f
159.585 161.62 mo
155.985 165.22 li
148.661 157.897 li
152.262 154.296 li
159.585 161.62 li
cp
.537255 .537255 .537255 rgb
f
163.186 158.019 mo
159.585 161.62 li
152.262 154.296 li
155.862 150.696 li
163.186 158.019 li
cp
.694118 .694118 .698039 rgb
f
159.218 161.029 mo
157.377 162.87 154.393 162.87 152.552 161.029 cv
150.711 159.188 150.711 156.203 152.552 154.362 cv
152.581 154.333 152.616 154.314 152.646 154.286 cv
135.743 137.383 li
133.922 139.204 li
133.792 139.334 133.765 139.535 133.855 139.695 cv
146.123 161.418 li
154.458 169.753 li
154.96 170.254 155.635 170.542 156.344 170.555 cv
159.719 170.619 li
164.349 165.989 li
159.295 160.935 li
159.267 160.965 159.248 161 159.218 161.029 cv
cp
.847059 .854902 .862745 rgb
f
152.362 154.584 mo
135.647 137.869 li
135.539 137.762 135.365 137.762 135.257 137.87 cv
134.878 138.249 li
134.787 138.339 134.771 138.481 134.839 138.59 cv
147.784 159.334 li
147.892 159.507 148.019 159.667 148.164 159.812 cv
156.881 168.529 li
157.002 168.65 157.133 168.761 157.272 168.861 cv
159.719 170.619 li
161.482 172.345 li
162.653 173.517 163.166 175.815 163.816 178.725 cv
164.958 183.839 166.522 190.843 173.035 198.617 cv
179.672 206.539 185.536 209.336 190.711 211.804 cv
194.083 213.412 196.995 214.8 199.653 217.458 cv
203.666 213.446 li
200.318 210.098 196.838 208.438 193.154 206.681 cv
188.274 204.354 183.229 201.948 177.385 194.972 cv
171.76 188.258 170.426 182.286 169.355 177.488 cv
168.538 173.83 167.833 170.67 165.495 168.332 cv
164.055 166.892 li
163.886 166.724 163.887 166.452 164.055 166.284 cv
164.349 165.989 li
159.295 160.935 li
159.267 160.965 159.248 161 159.218 161.029 cv
157.377 162.87 154.393 162.87 152.552 161.029 cv
151.472 159.949 151.068 158.444 151.227 157.076 cv
151.339 156.112 151.871 155.075 152.362 154.584 cv
cp
.427451 .427451 .431373 rgb
f
196.779 174.872 mo
189.006 168.359 182.002 166.795 176.888 165.653 cv
173.978 165.004 171.679 164.491 170.508 163.319 cv
168.782 161.556 li
167.024 159.109 li
166.924 158.97 166.813 158.839 166.692 158.718 cv
157.974 150.001 li
157.83 149.857 157.67 149.729 157.496 149.621 cv
136.752 136.676 li
136.644 136.608 136.502 136.624 136.411 136.715 cv
135.81 137.317 li
135.702 137.424 135.702 137.598 135.809 137.706 cv
137.683 139.586 152.498 154.449 152.525 154.421 cv
154.366 152.58 157.351 152.548 159.192 154.389 cv
161.032 156.23 161.032 159.215 159.192 161.056 cv
159.162 161.085 159.127 161.104 159.098 161.132 cv
164.152 166.186 li
164.454 165.885 li
164.618 165.721 164.883 165.721 165.047 165.885 cv
166.495 167.332 li
168.833 169.67 171.992 170.375 175.65 171.193 cv
180.449 172.264 186.42 173.597 193.135 179.222 cv
200.111 185.066 202.517 190.112 204.844 194.991 cv
206.602 198.675 208.262 202.155 211.609 205.502 cv
215.622 201.489 li
212.964 198.831 211.575 195.919 209.967 192.548 cv
207.499 187.374 204.701 181.509 196.779 174.872 cv
cp
f
216.371 205.556 mo
217.701 204.226 218.049 201.722 216.719 200.392 cv
214.13 197.803 212.761 194.932 211.176 191.607 cv
208.682 186.38 205.857 180.456 197.84 173.74 cv
189.961 167.139 182.53 165.906 177.359 164.751 cv
174.539 164.121 172.312 163.624 171.258 162.57 cv
166.094 167.734 li
168.548 170.187 171.782 170.909 175.527 171.746 cv
180.265 172.804 186.162 174.121 192.77 179.657 cv
199.652 185.422 202.031 190.411 204.332 195.235 cv
206.032 198.801 207.79 202.487 211.207 205.904 cv
212.537 207.234 215.041 206.886 216.371 205.556 cv
cp
.94902 .556863 0 rgb
f
213.292 203.82 mo
210.703 201.23 209.333 198.36 207.748 195.034 cv
205.255 189.808 202.43 183.884 194.413 177.168 cv
186.534 170.566 179.103 169.334 173.932 168.179 cv
171.112 167.549 168.885 167.052 167.83 165.997 cv
166.094 167.734 li
168.548 170.187 171.782 170.909 175.527 171.746 cv
180.265 172.804 186.162 174.121 192.77 179.657 cv
199.652 185.422 202.031 190.411 204.332 195.235 cv
206.032 198.801 207.79 202.487 211.207 205.904 cv
211.973 206.67 213.129 206.88 214.226 206.665 cv
215.032 206.507 214.621 205.149 213.292 203.82 cv
cp
.968627 .686275 .172549 rgb
f
203.719 218.208 mo
202.389 219.538 199.885 219.886 198.555 218.556 cv
195.966 215.967 193.095 214.598 189.77 213.013 cv
184.543 210.52 178.619 207.695 171.903 199.678 cv
165.301 191.799 164.069 184.367 162.914 179.197 cv
162.284 176.377 161.787 174.149 160.733 173.095 cv
165.896 167.931 li
168.35 170.385 169.072 173.62 169.909 177.364 cv
170.967 182.103 172.283 187.999 177.82 194.608 cv
183.585 201.489 188.574 203.868 193.398 206.169 cv
196.964 207.869 200.65 209.627 204.067 213.044 cv
205.397 214.374 205.049 216.878 203.719 218.208 cv
cp
f
163.576 161.743 mo
164.644 162.811 164.644 164.542 163.576 165.61 cv
162.508 166.679 160.776 166.679 159.708 165.611 cv
158.64 164.542 158.64 162.811 159.708 161.743 cv
160.776 160.675 162.508 160.675 163.576 161.743 cv
cp
.537255 .537255 .537255 rgb
f
162.992 162.326 mo
163.738 163.072 163.738 164.281 162.992 165.027 cv
162.246 165.772 161.037 165.772 160.292 165.027 cv
159.546 164.281 159.546 163.072 160.292 162.326 cv
161.037 161.581 162.246 161.581 162.992 162.326 cv
cp
.313726 .309804 .32549 rgb
f
165.729 166.566 mo
165.729 166.566 165.937 165.528 167.341 164.124 cv
168.606 162.858 169.742 162.553 169.742 162.553 cv
168.763 161.575 li
164.453 165.884 li
164.453 165.884 164.763 165.6 165.047 165.885 cv
165.332 166.169 165.729 166.566 165.729 166.566 cv
cp
.223529 .215686 .227451 rgb
f
200.503 216.609 mo
197.913 214.02 195.043 212.65 191.717 211.065 cv
186.491 208.572 180.567 205.747 173.851 197.73 cv
167.249 189.851 166.017 182.42 164.862 177.249 cv
164.232 174.429 163.735 172.202 162.68 171.147 cv
165.887 167.94 li
168.341 170.394 169.063 173.628 169.9 177.373 cv
170.958 182.111 172.275 188.008 177.811 194.616 cv
183.576 201.498 188.565 203.877 193.389 206.178 cv
196.955 207.878 200.641 209.636 204.058 213.053 cv
204.824 213.819 205.034 214.975 204.819 216.072 cv
204.661 216.878 202.702 218.808 200.503 216.609 cv
cp
.94902 .556863 0 rgb
f
200.042 154.453 mo
153.648 200.848 li
155.41 206.439 154.383 211.007 148.283 214.124 cv
142.14 217.264 136.817 216.488 134.845 216.022 cv
134.339 215.902 133.914 215.565 133.678 215.102 cv
133.173 214.114 li
140.064 210.592 li
143.918 208.622 145.446 203.901 143.476 200.047 cv
142.835 198.793 li
141.179 195.554 137.212 194.27 133.973 195.925 cv
125.968 200.017 li
125.405 198.914 li
125.164 198.444 125.143 197.894 125.351 197.409 cv
126.15 195.559 128.67 190.903 134.812 187.764 cv
139.708 185.262 143.431 185.945 146.513 188.726 cv
147.223 189.367 148.304 189.359 148.981 188.682 cv
192.848 144.815 li
193.279 144.384 193.449 143.765 193.325 143.168 cv
192.581 139.58 193.647 136.628 197.732 134.54 cv
203.602 131.54 208.478 133.28 208.478 133.28 cv
209.126 134.547 li
203.93 137.203 li
201.024 138.688 199.872 142.248 201.357 145.153 cv
201.411 145.26 li
202.896 148.165 206.456 149.317 209.362 147.832 cv
214.558 145.177 li
215.254 146.539 li
215.254 146.539 213.783 151.403 207.89 154.415 cv
204.699 156.045 202.17 155.88 200.042 154.453 cv
cp
.847059 .854902 .862745 rgb
f
199.097 155.398 mo
154.388 200.107 li
153.939 200.556 153.769 201.209 153.929 201.823 cv
155.271 206.971 154.024 211.19 148.283 214.124 cv
142.14 217.264 136.817 216.488 134.845 216.022 cv
134.339 215.902 133.914 215.565 133.678 215.102 cv
133.173 214.114 li
141.178 210.023 li
145.032 208.053 145.446 203.901 143.476 200.047 cv
151.366 196.104 li
196.686 150.784 li
196.223 150.062 195.776 149.276 195.344 148.43 cv
201.411 145.26 li
202.896 148.165 205.616 149.746 208.522 148.261 cv
214.558 145.177 li
215.254 146.539 li
215.254 146.539 213.783 151.403 207.89 154.415 cv
205.221 155.779 203.014 155.886 201.118 155.05 cv
200.43 154.746 199.629 154.866 199.097 155.398 cv
cp
.694118 .694118 .698039 rgb
f
207.418 153.886 mo
204.563 155.346 202.347 155.493 200.479 154.587 cv
199.425 154.075 198.164 154.281 197.335 155.11 cv
153.93 198.515 li
153.422 199.024 153.244 199.771 153.452 200.459 cv
155.127 206.004 153.637 210.197 147.555 213.145 cv
140.953 216.345 133.664 215.075 133.664 215.075 cv
133.173 214.114 li
140.065 210.592 li
143.919 208.622 145.446 203.901 143.476 200.047 cv
143.404 199.906 li
141.434 196.053 136.713 194.525 132.859 196.495 cv
125.968 200.017 li
125.505 199.111 li
125.505 199.111 128.694 191.867 135.249 188.872 cv
140.612 186.423 144.279 186.823 147.319 189.718 cv
148.08 190.443 149.28 190.432 150.024 189.689 cv
192.929 146.784 li
193.611 146.101 193.876 145.111 193.647 144.173 cv
192.725 140.392 194.012 137.562 198.476 135.394 cv
203.78 132.818 208.901 134.108 208.901 134.108 cv
209.126 134.547 li
203.93 137.203 li
201.024 138.688 199.872 142.248 201.357 145.153 cv
201.411 145.26 li
202.896 148.165 206.456 149.317 209.362 147.832 cv
214.558 145.177 li
214.749 145.551 li
214.749 145.551 213.311 150.875 207.418 153.886 cv
cp
.427451 .427451 .431373 rgb
f
195.948 150.244 mo
195.835 150.131 li
194.941 149.237 193.492 149.237 192.598 150.131 cv
151.414 191.315 li
150.52 192.209 150.52 193.658 151.414 194.552 cv
151.527 194.665 li
152.421 195.559 153.87 195.559 154.763 194.665 cv
195.948 153.481 li
196.842 152.587 196.842 151.138 195.948 150.244 cv
cp
.694118 .694118 .698039 rgb
f
355.203 269.811 mo
355.203 270.93 li
355.203 271.302 354.902 271.602 354.531 271.602 cv
354.517 271.602 li
354.146 271.602 353.845 271.302 353.845 270.93 cv
353.845 269.811 li
353.845 269.44 354.146 269.139 354.517 269.139 cv
354.531 269.139 li
354.902 269.139 355.203 269.44 355.203 269.811 cv
cp
.427451 .427451 .431373 rgb
f
355.242 270.608 mo
357.321 277.767 li
357.321 279.125 li
351.73 279.125 li
351.73 278.013 li
353.809 270.608 li
355.242 270.608 li
cp
.886275 .866667 .686275 rgb
f
357.321 277.767 mo
357.321 370.155 li
357.321 370.9 356.717 370.913 355.972 370.913 cv
353.079 370.913 li
352.334 370.913 351.73 370.9 351.73 370.155 cv
351.73 278.014 li
352.804 278.569 li
354.1 277.432 li
355.789 278.379 li
357.321 277.767 li
cp
.94902 .556863 0 rgb
f
351.73 278.014 mo
351.73 370.155 li
351.73 370.9 352.334 370.913 353.079 370.913 cv
354.867 370.913 li
354.867 277.862 li
354.1 277.432 li
352.804 278.569 li
351.73 278.014 li
cp
.968627 .686275 .172549 rgb
f
203.355 29.1112 mo
194.696 20.4519 li
210.583 4.56494 li
214.794 17.6721 li
203.355 29.1112 li
cp
.929412 .933333 .937255 rgb
f
203.355 29.1112 mo
195.155 20.9113 li
210.806 5.26036 li
214.794 17.6721 li
203.355 29.1112 li
cp
.847059 .854902 .862745 rgb
f
192.491 16.7204 mo
192.487 16.7243 li
190.462 14.7827 187.248 14.8047 185.255 16.7982 cv
182.361 19.6924 184.495 24.717 181.135 28.0767 cv
177.902 31.3099 169.085 37.7121 162.155 44.6602 cv
153.795 53.0418 147.912 60.2785 147.912 60.2785 cv
144.228 63.7069 140.052 60.7976 134.708 66.1419 cv
129.579 71.2705 129.666 79.6396 134.968 84.6586 cv
140.078 89.4962 148.185 89.1915 153.161 84.2156 cv
204.992 32.3848 li
205.866 31.5113 205.866 30.0949 204.992 29.2214 cv
192.491 16.7204 li
cp
.968627 .686275 .172549 rgb
f
195.915 20.1518 mo
193.889 18.2102 191.298 18.8541 189.304 20.8475 cv
186.41 23.7417 187.276 27.4983 183.916 30.8579 cv
180.683 34.0912 152.062 62.7123 152.062 62.7123 cv
147.03 67.7442 143.541 64.9084 138.507 69.9416 cv
140.817 72.2512 148.218 79.6524 152.889 84.3229 cv
204.909 32.3021 li
205.783 31.4285 205.783 30.0122 204.909 29.1386 cv
195.915 20.1518 li
cp
.94902 .556863 0 rgb
f
182.427 26.2304 mo
182.37 26.1304 181.525 27.3197 180.951 27.8933 cv
177.718 31.1265 168.901 37.5288 161.972 44.4768 cv
153.612 52.8584 147.729 60.0951 147.729 60.0951 cv
147.469 60.3939 147.161 60.7957 147.224 60.8583 cv
148.818 62.4525 157.93 55.9252 167.576 46.2792 cv
177.015 36.8405 183.648 28.1032 182.427 26.2304 cv
cp
0 0 0 rgb
f
177.59 58.5253 mo
165.613 70.5025 155.834 80.1422 156.534 80.8428 cv
157.235 81.5434 167.512 72.4019 179.489 60.4247 cv
191.466 48.4475 200.608 38.1701 199.907 37.4695 cv
199.207 36.7689 189.567 46.5481 177.59 58.5253 cv
cp
f
135.077 65.7873 mo
134.954 65.9027 134.832 66.0178 134.708 66.1419 cv
129.579 71.2704 129.666 79.6396 134.968 84.6586 cv
140.078 89.4962 148.185 89.1915 153.161 84.2156 cv
153.333 84.0435 li
135.077 65.7873 li
cp
f
161.763 54.5288 mo
162.164 54.9304 162.164 55.5817 161.763 55.9833 cv
161.425 56.3212 160.912 56.3712 160.518 56.1407 cv
167.748 63.3709 li
167.518 62.9769 167.568 62.464 167.905 62.1261 cv
168.307 61.7245 168.958 61.7244 169.36 62.1261 cv
168.958 61.7244 168.958 61.0732 169.36 60.6716 cv
169.762 60.2699 170.413 60.2699 170.815 60.6716 cv
170.413 60.2699 170.413 59.6187 170.815 59.217 cv
171.216 58.8153 171.867 58.8153 172.269 59.217 cv
171.867 58.8153 171.868 58.164 172.269 57.7623 cv
172.671 57.3607 173.322 57.3606 173.724 57.7623 cv
173.322 57.3606 173.322 56.7095 173.724 56.3078 cv
174.125 55.9061 174.777 55.9061 175.178 56.3078 cv
174.777 55.9061 174.777 55.2549 175.178 54.8532 cv
175.58 54.4515 176.231 54.4515 176.633 54.8532 cv
176.231 54.4515 176.231 53.8002 176.633 53.3986 cv
177.035 52.997 177.686 52.9969 178.088 53.3986 cv
177.686 52.9969 177.686 52.3457 178.088 51.944 cv
178.489 51.5423 179.14 51.5423 179.542 51.944 cv
179.14 51.5423 179.14 50.8911 179.542 50.4894 cv
179.944 50.0877 180.595 50.0877 180.997 50.4894 cv
180.595 50.0877 180.595 49.4365 180.997 49.0349 cv
181.398 48.6332 182.05 48.6331 182.451 49.0348 cv
182.05 48.6331 182.05 47.9819 182.451 47.5802 cv
182.853 47.1785 183.504 47.1785 183.906 47.5802 cv
183.504 47.1785 183.504 46.5273 183.906 46.1256 cv
184.308 45.724 184.959 45.724 185.36 46.1256 cv
184.959 45.724 184.959 45.0727 185.36 44.6711 cv
185.762 44.2694 186.413 44.2693 186.815 44.671 cv
186.413 44.2693 186.413 43.6181 186.815 43.2164 cv
187.217 42.8147 187.868 42.8147 188.27 43.2164 cv
187.868 42.8147 187.868 42.1635 188.27 41.7619 cv
188.671 41.3602 189.323 41.3602 189.724 41.7619 cv
189.323 41.3602 189.323 40.7089 189.724 40.3073 cv
190.126 39.9056 190.777 39.9055 191.179 40.3072 cv
190.777 39.9055 190.777 39.2543 191.179 38.8527 cv
191.581 38.451 192.232 38.451 192.633 38.8527 cv
192.232 38.451 192.232 37.7998 192.633 37.3981 cv
193.035 36.9964 193.686 36.9964 194.088 37.3981 cv
193.686 36.9964 193.686 36.3451 194.088 35.9434 cv
194.49 35.5418 195.141 35.5418 195.543 35.9434 cv
195.141 35.5418 195.141 34.8906 195.543 34.4889 cv
195.944 34.0872 196.596 34.0872 196.997 34.4889 cv
196.596 34.0872 196.596 33.436 196.997 33.0343 cv
197.399 32.6326 198.05 32.6326 198.452 33.0343 cv
198.05 32.6326 198.05 31.9813 198.452 31.5797 cv
198.845 31.1868 199.475 31.1809 199.878 31.5566 cv
200.124 31.1437 200.073 30.6032 199.718 30.248 cv
193.641 24.1712 li
193.286 23.8159 192.745 23.7647 192.332 24.0106 cv
192.708 24.414 192.702 25.044 192.309 25.4369 cv
191.907 25.8386 191.256 25.8386 190.854 25.437 cv
191.256 25.8386 191.256 26.4898 190.854 26.8915 cv
190.453 27.2932 189.802 27.2932 189.4 26.8915 cv
189.802 27.2932 189.802 27.9444 189.4 28.3461 cv
188.998 28.7478 188.347 28.7478 187.945 28.3461 cv
188.347 28.7478 188.347 29.399 187.945 29.8006 cv
187.544 30.2023 186.892 30.2024 186.491 29.8007 cv
186.892 30.2024 186.892 30.8536 186.491 31.2553 cv
186.089 31.657 185.438 31.657 185.036 31.2553 cv
185.438 31.657 185.438 32.3082 185.036 32.7099 cv
184.634 33.1115 183.983 33.1115 183.582 32.7099 cv
183.983 33.1115 183.983 33.7628 183.581 34.1645 cv
183.18 34.5661 182.529 34.5662 182.127 34.1645 cv
182.529 34.5662 182.529 35.2174 182.127 35.6191 cv
181.725 36.0207 181.074 36.0208 180.672 35.6191 cv
181.074 36.0208 181.074 36.672 180.672 37.0736 cv
180.271 37.4753 179.619 37.4753 179.218 37.0736 cv
179.619 37.4753 179.619 38.1266 179.218 38.5283 cv
178.816 38.9299 178.165 38.93 177.763 38.5283 cv
178.165 38.93 178.165 39.5812 177.763 39.9829 cv
177.361 40.3845 176.71 40.3845 176.309 39.9829 cv
176.71 40.3845 176.71 41.0357 176.309 41.4374 cv
175.907 41.8391 175.256 41.8391 174.854 41.4374 cv
175.256 41.8391 175.256 42.4904 174.854 42.8921 cv
174.452 43.2937 173.801 43.2938 173.399 42.8921 cv
173.801 43.2938 173.801 43.9449 173.399 44.3466 cv
172.998 44.7483 172.346 44.7483 171.945 44.3466 cv
172.346 44.7483 172.346 45.3995 171.945 45.8012 cv
171.543 46.2029 170.892 46.2029 170.49 45.8012 cv
170.892 46.2029 170.892 46.8542 170.49 47.2558 cv
170.089 47.6575 169.437 47.6575 169.036 47.2559 cv
169.437 47.6575 169.437 48.3087 169.036 48.7104 cv
168.634 49.1121 167.983 49.1121 167.581 48.7104 cv
167.983 49.1121 167.983 49.7633 167.581 50.165 cv
167.179 50.5667 166.528 50.5667 166.126 50.165 cv
166.528 50.5667 166.528 51.2179 166.126 51.6195 cv
165.725 52.0212 165.073 52.0213 164.672 51.6196 cv
165.073 52.0213 165.073 52.6725 164.672 53.0742 cv
164.27 53.4759 163.619 53.4759 163.217 53.0742 cv
163.619 53.4759 163.619 54.1271 163.217 54.5288 cv
162.816 54.9304 162.164 54.9304 161.763 54.5288 cv
cp
.847059 .854902 .862745 rgb
f
166.451 65.0353 mo
166.049 64.6336 166.049 63.9825 166.451 63.5808 cv
166.469 63.5625 166.49 63.5495 166.509 63.5329 cv
160.356 57.3795 li
160.339 57.3987 160.326 57.4197 160.308 57.438 cv
159.906 57.8397 159.255 57.8397 158.853 57.438 cv
159.255 57.8397 159.255 58.4908 158.853 58.8925 cv
158.452 59.2942 157.801 59.2942 157.399 58.8925 cv
157.801 59.2942 157.8 59.9455 157.399 60.3471 cv
156.997 60.7488 156.346 60.7489 155.944 60.3472 cv
156.346 60.7489 156.346 61.4001 155.944 61.8018 cv
155.543 62.2034 154.891 62.2034 154.49 61.8018 cv
154.891 62.2034 154.891 62.8546 154.49 63.2563 cv
154.088 63.658 153.437 63.658 153.035 63.2563 cv
153.437 63.658 153.437 64.3093 153.035 64.711 cv
152.633 65.1126 151.982 65.1127 151.58 64.711 cv
151.982 65.1127 151.982 65.7638 151.58 66.1655 cv
151.179 66.5672 150.528 66.5672 150.126 66.1655 cv
150.528 66.5672 150.528 67.2184 150.126 67.6201 cv
149.724 68.0218 149.073 68.0218 148.671 67.6201 cv
149.073 68.0218 149.073 68.6731 148.671 69.0747 cv
148.278 69.4678 147.648 69.4736 147.244 69.0973 cv
146.996 69.5103 147.047 70.0526 147.403 70.4087 cv
153.48 76.4854 li
153.836 76.8414 154.378 76.8923 154.791 76.6445 cv
154.415 76.2412 154.421 75.6106 154.814 75.2175 cv
155.216 74.8158 155.867 74.8158 156.269 75.2175 cv
155.867 74.8158 155.867 74.1646 156.269 73.7629 cv
156.67 73.3612 157.322 73.3612 157.723 73.7629 cv
157.322 73.3612 157.322 72.71 157.723 72.3083 cv
158.125 71.9066 158.776 71.9066 159.178 72.3083 cv
158.776 71.9066 158.776 71.2554 159.178 70.8538 cv
159.579 70.4521 160.231 70.452 160.632 70.8537 cv
160.231 70.452 160.231 69.8008 160.632 69.3991 cv
161.034 68.9974 161.685 68.9974 162.087 69.3991 cv
161.685 68.9974 161.685 68.3462 162.087 67.9445 cv
162.489 67.5429 163.14 67.5429 163.542 67.9445 cv
163.14 67.5429 163.14 66.8916 163.542 66.4899 cv
163.943 66.0883 164.595 66.0882 164.996 66.4899 cv
164.595 66.0882 164.595 65.437 164.996 65.0353 cv
165.398 64.6336 166.049 64.6336 166.451 65.0353 cv
cp
.858824 .458824 .0196078 rgb
f
168.422 64.0446 mo
166.031 66.4358 162.154 66.4358 159.762 64.0446 cv
157.371 61.6534 157.371 57.7765 159.762 55.3853 cv
162.154 52.9941 166.03 52.9941 168.422 55.3853 cv
170.813 57.7765 170.813 61.6534 168.422 64.0446 cv
cp
0 0 0 rgb
f
166.207 61.8302 mo
165.039 62.9984 163.145 62.9985 161.977 61.8302 cv
160.809 60.662 160.809 58.7679 161.977 57.5997 cv
163.145 56.4315 165.039 56.4315 166.207 57.5997 cv
167.376 58.768 167.376 60.662 166.207 61.8302 cv
cp
.847059 .854902 .862745 rgb
f
129.282 4.88506 mo
130.177 5.78026 li
130.474 6.07724 130.474 6.55856 130.177 6.85555 cv
130.166 6.86643 li
129.87 7.16334 129.388 7.16342 129.091 6.86643 cv
128.196 5.97123 li
127.899 5.67433 127.899 5.19284 128.196 4.89594 cv
128.207 4.88506 li
128.504 4.58807 128.985 4.58815 129.282 4.88506 cv
cp
.427451 .427451 .431373 rgb
f
129.951 5.49063 mo
137.342 9.55523 li
138.428 10.6415 li
133.955 15.1145 li
133.066 14.2256 li
128.804 6.63729 li
129.951 5.49063 li
cp
.886275 .866667 .686275 rgb
f
137.341 9.55515 mo
211.258 83.4721 li
211.854 84.068 211.382 84.5617 210.786 85.1576 cv
208.471 87.4727 li
207.875 88.0686 207.381 88.541 206.785 87.9452 cv
133.066 14.2257 li
134.369 13.811 li
134.497 11.8648 li
136.606 11.2708 li
137.341 9.55515 li
cp
.94902 .556863 0 rgb
f
133.066 14.2257 mo
206.785 87.9452 li
207.381 88.541 207.875 88.0686 208.471 87.4727 cv
209.902 86.0419 li
135.455 11.5951 li
134.497 11.8648 li
134.369 13.811 li
133.066 14.2257 li
cp
.968627 .686275 .172549 rgb
f
332.583 83.7963 mo
331.133 82.3454 331.133 79.9931 332.583 78.5422 cv
334.034 77.0912 336.387 77.0912 337.838 78.5422 cv
339.288 79.993 339.288 82.3454 337.838 83.7963 cv
336.387 85.2472 334.034 85.2471 332.583 83.7963 cv
cp
273.495 36.6309 mo
278.694 36.1823 279.862 35.916 284.109 40.2321 cv
288.356 44.5482 327.464 86.9723 327.464 86.9723 cv
330.971 90.7535 337.035 90.8176 340.878 86.9749 cv
341.019 86.8344 li
344.861 82.9918 344.797 76.9277 341.016 73.4205 cv
291.323 29.6527 li
287.518 26.1693 288.759 17.3286 287.052 12.3366 cv
286.954 12.0503 286.632 11.9101 286.36 12.0411 cv
264.85 22.3723 li
262.037 23.6952 258.685 22.4879 257.362 19.6754 cv
251.544 7.6079 li
250.831 7.94339 li
250.536 8.08198 250.339 8.36684 250.314 8.69153 cv
249.829 14.9842 249.365 22.0013 253.179 29.3362 cv
257.258 37.1801 266.38 37.2449 273.495 36.6309 cv
cp
.847059 .854902 .862745 rgb
f
253.179 29.3362 mo
249.365 22.0013 249.829 14.9842 250.314 8.69153 cv
250.339 8.36684 250.536 8.08198 250.831 7.94339 cv
251.544 7.6079 li
256.051 20.9862 li
285.405 35.5714 li
285.405 35.5714 307.561 57.9987 321.431 76.1075 cv
331.889 89.762 335.895 90.4517 341.019 86.8344 cv
340.878 86.9749 li
337.035 90.8176 330.971 90.7535 327.464 86.9723 cv
327.464 86.9723 288.356 44.5482 284.109 40.2321 cv
279.862 35.916 278.694 36.1824 273.495 36.631 cv
266.38 37.245 257.258 37.1801 253.179 29.3362 cv
cp
.694118 .694118 .698039 rgb
f
332.583 83.7963 mo
331.133 82.3454 331.133 79.9931 332.583 78.5422 cv
334.034 77.0912 336.387 77.0912 337.838 78.5422 cv
339.288 79.993 339.288 82.3454 337.838 83.7963 cv
336.387 85.2472 334.034 85.2471 332.583 83.7963 cv
cp
273.495 36.6309 mo
278.694 36.1823 281.417 34.3612 285.664 38.6773 cv
289.911 42.9935 329.019 85.4176 329.019 85.4176 cv
332.526 89.1987 336.792 87.9511 339.464 85.2796 cv
342.135 82.6081 343.242 78.4826 339.461 74.9753 cv
290.127 30.8486 li
288.319 29.2385 288.516 22.5756 288.387 21.4408 cv
288.019 18.2052 287.895 14.7991 287.051 12.3332 cv
286.953 12.0482 286.631 11.9109 286.359 12.0413 cv
264.85 22.3723 li
262.037 23.6952 258.685 22.4879 257.362 19.6754 cv
251.544 7.6079 li
250.835 7.94125 li
250.538 8.08094 250.338 8.37134 250.316 8.69893 cv
249.894 14.9266 250.563 20.8093 254.375 28.1403 cv
258.454 35.984 266.38 37.2449 273.495 36.6309 cv
cp
.427451 .427451 .431373 rgb
f
330.574 83.8628 mo
330.574 83.8628 291.153 41.7517 286.906 37.4356 cv
285.876 36.2894 285.319 34.7333 287.447 33.1807 cv
288.99 32.0546 290.715 33.4884 290.715 33.4884 cv
337.906 76.5301 li
340.057 78.5803 340.581 81.0533 337.909 83.7248 cv
337.896 83.7381 337.882 83.7486 337.869 83.7616 cv
339.286 82.3082 339.277 79.9819 337.838 78.5422 cv
336.387 77.0912 334.034 77.0912 332.583 78.5422 cv
331.133 79.9931 331.133 82.3454 332.583 83.7963 cv
333.94 85.1528 336.084 85.2404 337.543 84.0605 cv
334.969 86.3248 332.185 85.6343 330.574 83.8628 cv
cp
.607843 .607843 .607843 rgb
f
281.308 12.9353 mo
276.325 8.00474 270.848 4.08263 265.633 .414273 cv
264.956 -.0615029 264.079 -.131794 263.333 .225796 cv
262.454 .786646 li
271.126 19.5992 li
280.989 14.7723 li
281.696 14.4354 281.864 13.4861 281.308 12.9353 cv
cp
.694118 .694118 .698039 rgb
f
281.308 12.9353 mo
276.325 8.00474 270.848 4.08263 265.633 .414273 cv
264.956 -.0615029 264.079 -.131794 263.333 .225796 cv
272.098 17.853 li
272.298 18.2541 272.783 18.4188 273.186 18.2219 cv
280.846 14.4727 li
281.553 14.1359 281.864 13.4861 281.308 12.9353 cv
cp
.427451 .427451 .431373 rgb
f
274.8 32.3409 mo
283.764 28.046 li
278.46 16.9759 li
269.496 21.2707 li
274.8 32.3409 li
cp
.596078 .596078 .611765 rgb
f
283.143 28.3399 mo
283.764 28.046 li
278.46 16.9759 li
278.467 18.5802 li
283.143 28.3399 li
cp
.407843 .403922 .423529 rgb
f
274.8 32.3409 mo
283.764 28.046 li
282.424 26.7673 li
274.863 30.3898 li
274.8 32.3409 li
cp
.929412 .933333 .937255 rgb
f
277.111 18.2413 mo
277.511 18.05 278.913 20.1477 280.245 22.9265 cv
281.576 25.7054 282.332 28.1132 281.933 28.3045 cv
281.533 28.4958 280.13 26.3982 278.799 23.6193 cv
277.468 20.8404 276.712 18.4326 277.111 18.2413 cv
cp
.313726 .309804 .32549 rgb
f
275.665 18.934 mo
276.065 18.7427 277.468 20.8404 278.799 23.6193 cv
280.13 26.3982 280.886 28.8059 280.487 28.9972 cv
280.087 29.1886 278.685 27.0909 277.353 24.312 cv
276.022 21.5331 275.266 19.1253 275.665 18.934 cv
cp
f
274.22 19.6267 mo
274.619 19.4354 276.022 21.5331 277.353 24.312 cv
278.685 27.0909 279.44 29.4987 279.041 29.69 cv
278.642 29.8813 277.239 27.7836 275.907 25.0047 cv
274.576 22.2258 273.82 19.8181 274.22 19.6267 cv
cp
f
272.774 20.3195 mo
273.173 20.1282 274.576 22.2258 275.907 25.0047 cv
277.239 27.7836 277.994 30.1914 277.595 30.3827 cv
277.196 30.574 275.793 28.4763 274.461 25.6974 cv
273.13 22.9185 272.374 20.5108 272.774 20.3195 cv
cp
f
271.328 21.0122 mo
271.727 20.8209 273.13 22.9185 274.461 25.6974 cv
275.793 28.4763 276.548 30.8841 276.149 31.0754 cv
275.75 31.2667 274.347 29.1691 273.015 26.3902 cv
271.684 23.6113 270.929 21.2035 271.328 21.0122 cv
cp
f
330.454 5.04762 mo
325.899 9.60273 li
325.748 9.75299 325.632 9.93394 325.558 10.1331 cv
324.754 12.2994 li
324.577 12.7782 324.298 13.213 323.937 13.5742 cv
287.041 50.4693 li
289.429 52.8574 li
326.271 16.0149 li
326.666 15.6198 327.149 15.3236 327.681 15.1503 cv
329.84 14.4461 li
330.061 14.374 330.262 14.2508 330.426 14.0863 cv
334.959 9.55323 li
330.454 5.04762 li
cp
.847059 .854902 .862745 rgb
f
332.707 7.30039 mo
288.289 51.7178 li
289.429 52.8574 li
326.271 16.0149 li
326.666 15.6198 327.149 15.3236 327.681 15.1503 cv
329.84 14.4461 li
330.061 14.374 330.262 14.2508 330.426 14.0863 cv
334.959 9.55323 li
332.707 7.30039 li
cp
.596078 .596078 .611765 rgb
f
330.454 5.04762 mo
325.864 9.63709 li
325.738 9.76338 325.652 9.92432 325.618 10.0996 cv
325.085 12.8068 li
324.998 13.2536 324.779 13.6641 324.457 13.9859 cv
287.507 50.9357 li
288.962 52.391 li
325.882 15.4711 li
326.223 15.1306 326.662 14.906 327.137 14.829 cv
329.889 14.3828 li
330.076 14.3526 330.248 14.2645 330.382 14.131 cv
334.959 9.55323 li
330.454 5.04762 li
cp
.427451 .427451 .431373 rgb
f
334.139 10.3735 mo
334.139 10.3735 331.437 12.3501 329.493 10.4056 cv
327.548 8.46125 329.634 5.86786 329.634 5.86786 cv
330.454 5.04762 li
334.959 9.55323 li
334.139 10.3735 li
cp
.596078 .596078 .611765 rgb
f
281.322 49.9862 mo
276.897 53.1256 271.638 58.3821 265.822 64.1979 cv
244.978 85.0425 244.969 85.0514 249.962 90.0447 cv
254.956 95.0381 254.965 95.0291 275.809 74.1846 cv
281.625 68.3687 286.881 63.1102 290.021 58.6849 cv
281.322 49.9862 li
cp
.94902 .556863 0 rgb
f
282.405 51.0694 mo
278.201 54.4298 272.943 59.6867 267.127 65.5025 cv
246.282 86.3471 246.273 86.3561 249.549 89.632 cv
252.825 92.908 252.834 92.8991 273.679 72.0545 cv
279.495 66.2387 284.752 60.9805 288.112 56.7764 cv
282.405 51.0694 li
cp
.968627 .686275 .172549 rgb
f
289.019 57.6829 mo
285.624 61.8525 280.367 67.1106 274.551 72.9264 cv
253.706 93.771 253.697 93.78 250.69 90.7724 cv
247.682 87.7649 247.691 87.7559 268.536 66.9113 cv
274.352 61.0955 279.61 55.8387 283.779 52.4436 cv
289.019 57.6829 li
cp
.858824 .458824 .0196078 rgb
f
283.693 52.3567 mo
279.61 55.8385 274.352 61.0955 268.536 66.9113 cv
247.691 87.7559 247.682 87.7649 250.017 90.0992 cv
252.351 92.4335 252.36 92.4245 273.204 71.5799 cv
279.02 65.7641 284.277 60.5061 287.759 56.4232 cv
283.693 52.3567 li
cp
.94902 .556863 0 rgb
f
290.23 58.8946 mo
281.112 49.7766 li
280.273 48.9372 280.273 47.5763 281.112 46.7369 cv
282.338 45.5114 li
283.177 44.672 284.538 44.672 285.378 45.5114 cv
294.496 54.6294 li
295.335 55.4688 295.335 56.8297 294.496 57.6691 cv
293.27 58.8946 li
292.431 59.734 291.07 59.734 290.23 58.8946 cv
cp
.968627 .686275 .172549 rgb
f
289.141 57.8053 mo
282.202 50.8659 li
281.563 50.2271 281.725 49.0287 282.565 48.1893 cv
283.79 46.9638 li
284.63 46.1244 285.828 45.9619 286.467 46.6007 cv
293.406 53.5401 li
294.045 54.179 293.883 55.3773 293.043 56.2167 cv
291.818 57.4422 li
290.978 58.2816 289.78 58.4441 289.141 57.8053 cv
cp
.94902 .556863 0 rgb
f
286.924 55.5881 mo
284.528 53.1919 li
284.307 52.9714 284.809 52.1121 285.648 51.2727 cv
286.874 50.0472 li
287.713 49.2078 288.572 48.7062 288.793 48.9267 cv
291.189 51.3229 li
291.41 51.5435 290.908 52.4028 290.069 53.2422 cv
288.843 54.4677 li
288.004 55.3071 287.144 55.8087 286.924 55.5881 cv
cp
.968627 .686275 .172549 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (1.eps)
%%CreationDate: 2/28/2015 12:25 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+]fC8\5^97DF:*G/g7_JdnOGaAr&0SXt@1.$nMbC@d5<Q^Z4m1%J1ia<MZF7<gDSR;h3PE[N]WdK5FR/$\rA*""HTe,a
%)9pHoMO#trrNH5P/A.o$L[CZc=i[p$ka+.Y`J)TP<`O5D7VGplG?#V`BU$*9YhhBT2+h;hSSqIHXnI&fs!t$\%Y@@K,fmV/X4>59
%9Wf:uY$m9uA"NL]C?RT[[@i_gZ3iJSB/KC+)b.XHpmTq(Z^i!kSV3OD5R):>pP%YpS@g,SdXR/sO2K.5]@.*JPt(`D&pEqk/2m/m
%fF6C;0\LbAL&VqI_b;5d#eJOr>;HreJsW%)$r4't3G`.tRmpPbO@oO%r'0mMFeT*1hl;S6a5-T!iG1$?B+25od89qrcr^NGaVZ@P
%XRQ=+hZDH983e@&:W$AB)K\<c5Kh9f@*QLEnS?Me3'c;#FY.A0PcgEs5U%c;Xd64#1[DWbCWti.7j\)DSp:nPjfl^,l*WQ"Q2^p/
%9HBg,Gk5pa)R`u(.ik:N7;X[;_Ejq:<WU6c\6f]$Y7c`bS+elO>*iY&UpEqc+qrN`NZpZ6fraWH^HrVpPqR11%-sgN2[&?ETr8jP
%EKE2lTk%Ccif\#d)3qs;'C4T[3*]-n,A3$%":n_%b=[1goX)rQ>Es4[QaW3"fIr[FlU_%\nW*bY.!I^\>sPN,BDDX$_NjK($")`b
%W`qQg#8JL%.'9Kd)$^2bJXk="5pq2+?#`kPb28WBY>3`):DNZPFo6)ZptKr]G<RZ`FWLMI3e"*ppo1F&:OSjiZXK/Rh(/rk=Vc1e
%/F6tO^+UgU?0pU_fZ/,+B(,tIF'\-eYOFJobNH-75*&)&H2Jq[a$.4uTDH95d;\!`%_g6n0q]E*$mN,,q\4gCcZQU*p]nDS?MGJO
%+^P4Sp),'.^Te:nKtdq<5n5din\X2Y%["Wc3#*YRRi7F+hh4)*^h1Lm=(O4"&7@Fb%=_k0ho@Xk,m'Z8RaI:\$@fCU%"!^/".qm"
%egKAZX$dctKA@)/r/FW07P`3@B:Nu:!kTV9K%#Z8CbXk)^[W<gaQ*>NF5X;0Iq(FU&UuTK13$a@AJ!dg65BiO+\@9.$q*R3m)Fi/
%BZ%&e#S?J61q#0/>Hj*0&O4nQ&JR!X#h![H3VsY5`8B4,aZAG&ke[PaDsW)^_Jg[[6B`8^fG[H3KfBI6&TUCW1Qc*4+d>CaQ;O9j
%a(We"B#GqP"_.[a%".Cgen<I<$/"G-LBGj:Pt<mo4X1N-_P\J&b-CZH0ecjGDldT'=Kro$8JaE!9-Oh+V+G?Lb\]Z3Ql?<p+=@VZ
%8Ktqb+H)N<`,)BP.eJ@C\Z&R(O/B1CikOj#0\H9t0Dg=ZVTG:d^[0"Lg&(Otqf*VLhJo:?*WG)Em%a>/qoRsPqtMiAJ`2:aCPr.t
%T43qrO8lL--2QSD*dNRV)1U=dnW*Q:*&SsZR!ulUIGZ[0"i$_Bpr_)[bq==&?Vh+%?DlC8htJ*u5X@8@3&MJV;0-suH:P10prY3W
%X\.H(="^r@oIuebQt%Y`lL[G\e1L.K&64A7DVPT&)"7T'Yo:?7_8HXo;L4u0o4hUR/+Cj%:C26iFpurPe'MKp!R4eR5Hf;I]Z0)c
%@aa=41gGQh'B)P'*Cm2+mlX&[2Dp91@C#:_<S,>CDNP3g@o,u,RmDW*$)duVE'i(?,%<nATcrk)G(OrO!Fqk0WUN-eJE#PIC,+[\
%Acpf?lAShj47@-2o>P(K_"d=f@T)]W30rJQa..T84/0LU,/asqh8/ok+m7s<1nHAQ-FeR;BhlU3BR6C8'2!X&3'aO;4^h<0nt#iM
%8F-[I&b#imNjXSA+ngMAZ:IPt7]MP57ts%68k_F=L.OZ>/q5/a8*eXhe8.N0/tul"$NX(.:mjVc-FA[t[#fBaTY"gB<LJ$LoYnp[
%J,uD1TF/NB*)=pA'Fc[+L7g!ZR)6omBHs;_21WlJ77)n69.FAhWeeH1&:G_`9]!^@!dHq-7+'Q8/6IO_/[VRqiWtR#J!&58+]Tb<
%^i_r."=YqN"u[(I!MB#seg?RQLq3c9AbZ@<$A/a&E.EH[+R",0;Lh?008LnQiC$@MLkp3_PO"uWF*Kej2QjiU#ml4ia[j;Y:*&(I
%@!si.$4JjU2EtCXej,m6Yo_mtPFI]YF4h6'DR)-":P]@"M=At.!Ic(L_N7,7@;cBV+TMW&H`@Vq>!Wnoc$1@a<6_+l0g%97*Z-86
%>[Gqp['d7F%2HhA0Te[.&OOYh:uYqo(PUl<<D]S6,*PYd$G$c:M?45RZ05VJLDY#(MF;NQ<82\3ZTMJ]+jKT]1;XOZ58"pLU5elj
%G;K[18'cN9d'APVMG+'XCnSAb+@Y(*9p=^^Oc2OdB(q[dnqG7$<9GSi)XaigRVd;XJbBfWjdG/MF$5<rb![dIJUlpXWCJkCBNqR=
%lN>RMbX0-6iA.pc7/3f.>=D=2H3<P+Go[G;&6TJPMD3-q$#OKg,[X"S$27-5_+%#:n3QPNQj\uP15f,_7(N^<E>:fOZ:NRVKF''&
%ORa*QLF$0bqCI@$$d5V3P0.DNp;*U[+2n!#c%@,(F_i73[hM,A$U6-Nk@R6g_,6rWkq?aVjJJ<d,!4k+dNOh8GX@k)(jk-GQH5T&
%iMQMR!lo+AG>*I%qcWiLb+qmb6s^)n9#2*B'W,<odl8U::<qm1FHc2?i]=MsP$B^BjT%`2OTFnW(D-Di#Y<H1,%FKV.Is]S![@,Z
%/qeh,H!.1FK]8A_3@C7"I7'-P#D+]#?]6ir$l4I#&Q)B]5YAUVgZ60gOcP1F9.I!hI6e;X<V![+3*c_gaFZ+9&Rr^-[ZLV(<.d;o
%@MjAQ`iPO_bj,Xd+&P42='i\YU/k\LA?b*<"?a.A-mlZ@F,X*3(11`=e+8r?/3tD4'uGMr#3.4Z10oss,XnGU^Bo/Y<okcd*/ZJ(
%1n?(/m'rG=jg_A%#b4:$+LGHK-V$%qVhhF%.>En8L"H`#K_;)WTST_Tb$a_49=$]CWtf-)`2OEF4C8aBV7\.mO#+qFUOG3W_f]6'
%kR,=cM8Zt,Q'a$pGrap_..'@+V+q2f-Cg<L6CCsu<[D-(R?2bb)3&Co[A(;t1MQL,N[9DV3<"IJP7-1J9bo+2INK:E^:H"X!_:k'
%i^lWCl3TYmnU.(!Gn`E(#Y?Hul3ECH$-c$')1[Z>bQYtk-=DaSK49-\+W+4jX;c6&W8im]dQG?&8UUKhA49BDX!/?"bgkBgDX;k+
%[pbK$.OUeV0TrW'i]-AlMLLf[\3*dQ\0k:1c`\]ZY,%*e!JR8+LlMeFi^^S65$q\LZOL@%#rn\)b7B;0((ln#&u6(j9gLUnpK/mj
%Lud5//-piD'7qEtVJt1fN%QY8imaVP;W[GC0Cf=a+2l&qa\B;eM(]C,=m4d!6dCG(qIj;;:XG\gJh.=@FS8+ci2IR-P@S-2c-B69
%V"1o.hOUQ/[%>;coEG$n.<0Kk7?i(aa0?$^.^O*`;,"Y/E1]q'j]0,VLW@W!=@Z*d9M.tKS;DNIIU.gl%$+Ur2(,D%E<Hl!<aMEh
%/FI-k$CPc'GVGYi`Y)LBVqZKX%ujIQN:_Ok#rlqK1(&u%'TdD03,uOK$;3c!RjA&[f?!atR1Z'J'D<*LX$ASOXr<"IY-@=F`\Fm6
%r#,mEEKq,-2lAHi/-H7o:Z8!.MgTs0QNcHY@>ZJh(SN7[c0?T;P@BafrneJFd-?Ql]IAsC``3ac!I:!W+=deQj[iMF@0?n+;".]-
%o6FYFMFf0\@f[di@H=0PQNPDf:`*p7-8\4FD6PEHb*bC(%lSEiQi.WtM2Fob\FZ,BJ4*8),E/G&_0dFSL(NtN>SI/cJJ@3)M25#4
%^spEbnU-R3qE1daj+7fbT.q4@iFGe&O67`Q]nFm(?7#]:,Ia>igJKdLH'#Oj`/."88<Adn"WYASY&`^(0_O@(*54b2G@k#,kl]h[
%:a<PdCdeY84"1QM`>9[d9KGWq7FXo>ipsr:]M^%Bo%.]&9M[;bRTs87`:T7Ta8rg[*\44*]K/Y",*na^'m@-J`-dWo0/1tM,Vn'>
%IT])7`"BNN`Pk\V&h\l,QB2G8PK5`)_^Wg\j]Q#[qcU4C4O%>\Ur(V^e;PD.]1,GoalHke?k?/oTgj^[M&IS5%8qfZ+.""4=JhJD
%LkIkYF!Nn\fU*G;fT9_,RI+P[iG2_-,+FWO2a!*3/>Fq\8<FYH4?2#M1(Bi61'c),.6#ru0lp3ZT9!G%Oj-Ca]dSHN]-a':1p]u/
%YKM<`.!S6$*Hk=.),6p*;I2_DkAdFQ8j.Q5PI9ps6E16HFa+bG?e_j-@[0pdQY4[m>$T\>qM5Cn@hdo.=!XJfTF/p'31H7AbpX0t
%f1>_3+."%Er/'t`=,LF5p.*L'Z.1F5:@E<C:bcZX;RsrfdfI''YpbJT7=Bgok7k!p-/B<Q_cCD=?Jn!_g,t(([,gg]671p3=1,tE
%4:*#t=/"YO9reh*f1]4J80fE";`caoNl63B;2&qc&UKu9Ecio;NATE%eVcU(H;Q"(JY&gbpkcqJ_h9)OmjDD4'cVCf@E?&eaU'/m
%>t--S,8LqBJOlRfa\N'a/3'n_Z1hYt3\YX#3Jgj-4L%9hQ3-rXW8e@7;S;B>6R72ClurSs*I0K&5m6udY[-URYR5gn*m!S/f.>T'
%]7YbCV\_e"Yp>LrK4=4p/r&\.opj)3L$l2k:bJh<QDfR"d?^)g62$Lu+Nd4CLd#9jMgJ9U1ek4a+`i#U7I_"078C`4\.9i[U0<_U
%NlrF]V1FZRY*_VK&(*H*Gs`A+H/(OrKo/4%'BQsejG@h/@P(#iAD>EFQ362GHKk"adM;u&=.5;M)Q<u+(R9X[!V3IWY45,<nDHl_
%qQ(7@7K;efDB)e+a90luQm+%kF(d+k-)$hk,,S@"H*!AS8P^.J_e9E^-B_#Z_KLOjc,0Zm5t4gS-m6P*,'%1jM!Y=)A?^niK(f.B
%&jfe>WF81"gdL4sCLj`G,a8[s0=Ffa>Cp*"-JOK4.Ge0`N7)Bk;2"%6J/1Y+=&/=Rgq$@3`cg3%`\_sJ+JEkZW*/pI:(p%S`el-6
%G.sT%,4D5-9];lFLe'h1:BA$[U4,/C!"]lTi2-BbZ#LK\)j-D^LH`mfV&f&m[M[E3[#L*/W1!n3rrBo*,qk[pET&(@itXRc9So9'
%YF+j.Ia=AGnI^0mLCg9nT#"Tm,4h7gb!jgBktBd"[N#GD',N+D>]8u``*RedGsj.:(O<^=c&!*6:*f\9+q`l;bS0rB\=*JpZkZ-H
%WU(k2#MXlj2t0:p/gIQqY]6MhNtOW:foJdtnO/?,*Y3t'O;VJC7ofl(pahY&9p!q;_%C7@4S=UtN]i4%Y02YP!^nM9TW'ILI*!YD
%1$D2JUS(>Ce;,mDBEFU=QJiF0%;$NG'kE/pO9Y,"P"3;#5^QDVUQ<2Y3mr-lXh+WkVf*b+[(OBm4(qK`M6&7G;d)WEE#kT-cW325
%;gd;WQAPN@FP\A%@jZLND9MWL'ILfa6B:Fm5Yb/0oqV)$,Z[1m.%B`$c9G?&\]]$R;P0Vh:[qE$5t`B)0@f/8&MWkp$;kE5^:[4a
%3?<mE0r8#c7hRF9XsNXj)qJ;Wc;FGYX&gM(,,qo4JNM`mp0ni;o[DM/"B:&Fj`FR6@ms[tCahqieaG40Gu[P^9:`q,%\^0Unk*W"
%ODT0)Iiff\&OML+p.0<n/$U>=njY&3[,YmPM^oJ'K/$26jY*l"h_5hR,=-<63Wm:nC.40-(!2Do<PjnEBMN]gaS*Wi8Ppu/Z@#!5
%]eb?8VQbK;U*8Rd%lqE+e7Y2G]SS$LE$jj:j*ILa@8l01_rl]4_I=9`1%>-$%HXHKVS4b@Wh@'B8Y%)Li-X_6p*Sdp,i2K7C_i_l
%!#mOUA@i!OYNL][c<oR!Wu%gklltHu.S<6ZG1aTrijrHR7k+J2baO["G;Cu-r=c/\(O:*U2Po2gH_(rW-Q[+NnGR259X7X8;.FW]
%.]63Ei+L"u*`j3S,T9j;_-dtE58DJncL^\#=^">YJ1ME#AUJl[^W\WOpkTSI4Mr5B3GLFOND'7br.[Bs#s6u*?gMJMC,gRnJ,tor
%5/6^@IpTG,S?nu*(I$Vl27h&'qF0GJs"&KX`d*qs':(\=<oq))3HKHE%GiXI(?m!Ob\8RU_&Vr.lB;Z,c)!-.qUM5RB%X"8QJRM6
%BuUt+Maj`_:V^.locIVMd?GtirR/o7<"8+Y.mkCH'CJqN^aB00.@q/6L7NOfjpYJ]-BNpnTftX2O6@^7P\-on9"f-MC("49T8hDZ
%19;H"nRIMl-9\mL4/K"7BmK%59RIOrXtmP&=>.-.>-PIjSWWWI/^97MTN\I&[Y!XAV3K*0]'ZQBBqnObAfpMf[$(>)I=rhDU<s9O
%otri.Vgh_'Tm&f+eR;sbGdV57TU"HQ=^"6*VHC!OM&N+G,Q"#/$p`tL/*Embn`3d=]MYf<CXMKhb7SD_V,Rn"I^M7G.bf&C,2`[Q
%./?_.-f04q.fJU3ODPf!H5Yj*kuKiRXIG2Q';+=1S6Q6BO=2B#T#=QrBAhBP^U:X6et]2Oqs`[k2AiA&4p&A4^!<^s]6=MW0,s#7
%?5G(;HsAUDr>P:T7V;2Z>."h^Xo\W-Q1Jl@"@KU!*PGK(kj;<[W`70DYYI?gbh<Q:PNYC3ebOo4_hX/MU+@j,ekTW$qIQt]O.b4g
%]ma#)SZ<pil9UF&!W[J[Q)R78.]cl]F])Tl3_g$Q1s#Tc!ft*o)hhWJ;"un.'YKtmYM-VrcIDB_<6?Y/_+p1\VEr&*FG[t]S1_m+
%d6.X^OA#4P8VbHqfu-XpFl%g;YS<+q%N@9k/CEOBdDDtoN^r1nBSV$er8%V$e*(=<s%+B3NQ8-WXW<]g_2g:0"O!>`Ki>[)d]#M0
%2]f@bou!h&dbpGT4XoGg]uD;J$JXBO)D<['VDL3K?rfe64PiV`VrN_j"S6<L:P:/6?B7IZd0s4[j=2UG&pKma.BCsRR?*$A`a4iq
%jJ:1?Q,7B=/P(Lk.YK.O09h*s.4\&b/q4-6$<G.KYZ;#_1)ogaDX*=OVfL7?_Q9PR`]TO`hali]=olS4eX)7fqsG_N.1-YCR`hPS
%bBY^!cfO<"gcUpmkAp0!mLJE#`a-aK;B[hP\_O3.#I:m^85+LsQOA:reW[&,h"Z0L)g&ERmk=u68abuWQYB/!g7<7-r)'0BkYhZ0
%Eq`/aF^FGFo2ILc2/``UG.SC:F2P8Pm^P92\<YNF`:A"_d,d*eWB<K(PYOB=hKh%30%s`HKJq&YXre9o1TBJ9N#qLG?\uK4jlb1`
%]HuNLIT=kH#'msTa]s^5*pmk2+t/-mV'$dFM=,GKn69Sa!W0e&0YR9VHSClC/qq(AdbSZbauAVQ:/F`=<WA/;iMWJAYkWFK;%ISu
%?p%sh'96)j<eoASL?TX1Aj.;Ce^C/]h\9c%GN(?s;57%Xm&)?@Xo(15::R=lo=/3UK:Y06-#gaga40PdUlGl_[ptr]g#\SZ$]lQ/
%]@Kn7"$94sY^)d/e#t-tkUG<YoroW8!XE5HE>Z]r":j_XE!TX4c;cI_UtLNo.F35@:GVTLnIP&S:T4!:TniO.cLJB"5Ae.--C*Fj
%3R_sZ[OsqCj@i$)knWT'o&Gct0gFc@>OedU5NO[0Ru*d.0iMI9m:FOA/=H('VRLW4D`"K)<Z(fp`CA\]\W+5jgkM7lnQ9uc-s*uo
%-mC]IMWNql2+Y'q4B$Ofh)];:!f*2sP>/rU><W;fa5Y?5X*KCX$`7l@;j`<`c.LO8Z+FDVrm2lldu)?(Gl::g_]:]IS*IPhBija;
%qd-V(h\16,j%h-!%%i-bK+Gu"P,rBLFX9c#329:DV`:2/J%D942AK$^T;Te;B#aA:5\=%:c\u4-0^P<lX=\-.:RLWm$#,'-qTi="
%$.jHo6EFe>>,=JrlF/g7;s^1=YC_'`XIb)FqDsZo)esdg-AA(Y@WUr!q"5/cYdZ&\g<FA/$M!Fh%YEh:\suq(e"t]3Ru'g/ab]sP
%I4s-hbOGkeb;9g1kW%*.EU%sOMON8cpo%E27WFSL/rpMF+,hrfdr!u?nRC4[,L+-%1O7kJMTX!+BRL4umeSe&(F]k>>u[iSF=273
%P@J8VV!)\Y2F4lY_68VeJPk3F;HVHgoe\(^9&3Zp`3sgj.B2p7cjHd;K3uO5[A5hI"Kdp^K_:iL8nJEPb%\!m@_F+B7LIHe$_CJu
%-,DfPp6,A%Q?f:aeTlD-.am8R-A>(";@eBo%r@J^C?_CRk1mZ"Fc%EBMcQU=`[=WmM:mOrR<g)PT&,iRAeENC[8c!oj\J0]#;0Um
%Flk&KVBS;Vh5-;`BonaJo#:MPau%X];b>QIlh[1Od_I]kHHjd1E87>M/5#.ZSOH,&bcJ=G)*a%B,.*l&ZRDf+CAQ8Ng^3.H\k?[5
%dNC>1M_[MTno&cBq,rq2bB:fE5e3@s;,UQ8WV986kq#FFA7d-^T(TE<WH^/bg2U3?U6P)o=d1bab_k!/jt=n0SuG<#b8XQC8b-o1
%0@*:6_J@GRft3b`Fr9a>TpR).GO#/oDs+2eGJ]m+EeS0BrE#GFhu'@DM-jA.kIu?>L:>CNmFk;$RPhQi.7c/%CNI*G[qdd.f8;.n
%R>5R%.pNIEWH5*u[qbrt<c&nZh5Oe!DUmlMm=3iiaZDh%'A2362NjjY_=)9`cI<'V>`EX(7eU)H;NP:h7WUFZaGd*/bS1<W(t-I(
%cL=DR-P_VlEB'ur*EJ6$_6:1LIN!/L#gL+g-j>`:@BD9V&sHJ1]VSLZLDQ6Pn1WWl*:%?o6)Th0.LiBGUemQ<9/F>LAs2o:W+dkG
%R=U91`]</VXY`su.o!X4pX5!jB=;]Saf$/IP#4sKX^pAI#/#]*)t6/UcTDsu\I@OG2nhsiBQU_te*gX7F=2,n2q8_(ccdR3FQiWU
%*oikh7e+7-k;)^kaJ[OTBt)Eb7]k?W6gB!M*G23ue"0:^&EF"<1MI"j<5Yko*MJU`JXn,'G,E%uNNQVa:t8JY?*B%NM^<<rVAk;!
%]Lq+T:9_I[WcYCY@4.$>R6g;/3oloZhfprT1/gC-%pcno-_06KDFE9A[ki(BB`=gbI/eEap4%#V9"t-#n$JP>q>Ti1s*&Kcc1c_N
%qnMb$htd9?&6/)Y[usS[Lc`D@ZB6o*SF?8KB`VnilQu-cht`l4I*_Pam._;rX,Wb3),dSA??MpYC'h)B9Ym7U!>CCQ;FGPjMi2I7
%bW"euGLk4k;;[0Y`f;MG8]mOh'>5b/25Dqfh:;b*LhY7/G+Wg02sm3&9E-#Q8uXPVlVE>].qJ5Yg#TB+=3,!N6?Yl5\i3Vk4"lfB
%b@LWB(:J59$H)]E7#Bk,po_bNA)g(U;%5T+Xg#IcBEe(&qqCZ<fd)NLPG4Qbr3oSiG(tE$?c#j"Ss,=(.g7tB(#GdgT1OGY>c&rL
%-r8_jCHp4Q.0Z#NluTWlP@>'BkUtJFk/E+T/j?Y3@0trhefT6Z?pZs#.AVu6IY0[ms,a3\.h6Fdmj9<32aT2>1,$;a$SV+gb71_F
%(LH6XQ[.QO&"kp9]M*P.KpPqEiIt?AW;\P*]M*;L3\S/$V!p-"qgNb7q+OK`l%CEH1L3;XUDHY[SO[C4<+MD`N$`8,B)Alj1`$9g
%qdgFTE0suj0bn=EkEen:$F04Nm&&Z%rkYf/Qr'm@3=76'lg8cV35l)=g7@:%-Dp$HNq8a-VV!oc0\r1D#FXGBb`$J1hnX?CDIC$V
%?g"mOc#6sXPaHbYB.$bH\aab?,rP]QQPA8XVt*dAXYkSXIqh<%R=C_i`>:t/;g_LmFdeP.V86T-j\4V%pU%!Ae6B,r`C2lTTJj0o
%E_;NXCH?r93;tSn!<7_aG;C,(2U:+.0?]r"BQl'r;[m;H]S-9cPZ&Skj8C=dmo2FZ107nq@o-%C8YNJjROQTT'2)%RPY-^!R\4hU
%0l:19Qs[9aY@Gda-=G*a(c.E*b^:GK\H?u51cW_F(fQpgcC3&)lPT4S`jB_t?H8Gb0kR5AJJhW=89M@UStFhmr9U-mPWD,'AYYFN
%=>h*WQ8$_Y'1&U>bGTV4F&Ff`ii877TH3m2n9[*qQdXpq4oHa^>FK>FlJ:/;#j.1IO&F/l-\YO5ERLh.9#Jf`M$a:W40;I\iKi[j
%0pP@.YFCqaQI6m3^Yq1nM"?OZjqeKO0,j[/]kHVigbY0A:n%>uL@4-Y4K/D@McQU=`_B=>a^L@lbGdO^2#1,rFl;e&MB4^e2X!pO
%ISRMWo559WH8^\5o@m'h,iB>`HnA?e0I*FJRm#gi09i?5@GI[]?`B-TR0-f1OI>\"?>36'rki'IM`r)'6c".;iJqb'FN0#GZaQEt
%A<jc2MGJ4QB3pGX\4oC<*nBTES_BLpEq<ORnldiqk2t@P4IbZUAtI8lZanq//k&#fcfXX^2KoCeLFLmj="DL.3gToSGrdl[kN;$a
%4Iqt>F7XMAcDG[F>tX9X+Ytq=go>Z*'"W0U9Rf\/[a?L1[Xp=GDk>;2Km`<kI;)!)KP,`W_rMoM8GN8aN-l)ibhjp*^E7NGYJ^k+
%.ks?NmZ-hKSI72";iIkG\B;N8HMtJpPccr#XJsSU8sR]*oi.dDG3;pa9pM1AS!;^)r'p%@dA)s$b_d>7.!RPI7<boGq9L\-RJJ+?
%>(rA7#8=IZD7\"JJ%'7KCk#gKc`:"UJlhbLB<R?D1RTu2""#=7.;h*'?aH/=eEQkQdptbX,Gl;>VXl13+B98FkWLAr;Oj(fG?YkL
%.85Y#ZMQb8r@Kj(IkC'3pndUi[!ThH3`5Pa\ek:R;X:46$]KC,MQp3>]9C)]]LuDqQMO>`-$$(#\<H)OKhmC0q9](^)mUuD&eHf"
%q`Jhc7rqTGc-7JcWK%C)oUWWN'-3kSZ3B5Ha<CD89FSZM:/X>]r4CX\LGqOR*\n7`k!@B:%#X1%dB*Lk_KC+#K;(G/_S9jkP]%6o
%b_)R6Z2:0!-ACKl*d746bREhp.Ig#_6Q1s!StNru_-u!LKEMe)<+cBd_tkWt:a_#cd&M2jC14+q0UO:"RD,=UrSI(I*C?o03_)JI
%BF6bDN`0c@VVO80_-uaOVZV^bF.@peAHj,bHA=9MNO/'mB<d%Ns0BIT%=8#4m?eoCr)"kS;BkPe*Bn]5>K-(%"gdghHCM;mM8ilY
%1W(s%N*f7X$XgO[pDV8/%9G=ms)68bW+A*"oJ2DPM2np8=]=dr[UF9)`0%DE[M&3lcbV#8Rr1$%\"]Y0HH!psIj/cn3]-GPA?;Ya
%af#-$N7GOZ9?*U)1/.nB_ggorfL]iX$stc0kK_ZW'7$'u4d$c&T2TY@E%:r,FF#<Q".nmI"?5Ace;Kcak3I,%17jdLQ/ZMp=js+5
%&#erc_1$S?[era5K(Y1=j)?A*:W)"VW(q)q'H7jAn=-fHa$fA&>8+bU0-/B7)7`C,QF/M@k,sWqp0>fg/S=;(2eKUW*Y+kX#9O79
%D$BV+7@J-mQpR4UF/=p:5A2bD<KEUQShgsK1F>gSP+J"(#'#EY]Qr&m4N$umniB!Eq.G^irZMPbpa&H=hN"V+($juFbE/[I`29l-
%NVX726?`j?o(H=5=fKT:r:Q\K:&<(BT,gqDnGA<]aTMV7b)Q!HPA><q=.+]6*aFH%b[IO\0TQ#a_`l<MeS=3/q*3a/[*bhT_=):+
%C;@l*9:7=9#`qT/o*8)2!Ztl*%)O<>F@\2CWhRj)r(ghcKl.u[Q[S#(3[].qGT5.PYMT%WVg#)'M]Y5)!jHF36#p:`P`X%Z<,0Zm
%(j/_3L\ON4El.k5"k[i(^Tt#B)7GZ)ZF47IRL(VueTGuT%^W<T=>h8qcGL7RN7>IHphgmSI=nu#5`*]Nk2U)#;uR.g4@Wn47EPT<
%SHhZ9NPE3.(PPYnBk9K]Q4>PVHisE,[:Oin%0^(-n.5NPedN]nbQESmX;`ep7mT$!F@(`&dJ44O?i5-W'=9hQWe1DE&;tc47Hu3a
%q!1.7-2<gb_2/r@R4RdDU^?k/+Xd.Y`+Jq&RKBpZ5!8X@4)\)<WrFI$aI^sk.rZI9NDd4i#ur/4J-[`sXbd5r1jke^ps:.;!s:_.
%mTcH,jBhkgBl7XM@:!p3Ch+6dE45P?hELfK[+ZI/6Q#$G+,hcX7*r<)DeGY@Fi`mt:oW.s?&)p.@j4H3f9N=#n@VZ>02*=7ckcJ0
%baa?WQ\8'?7-3jG.29NmP`^OV_HAot<3QRm8i+n7HK'NqF/,u=,J@6q^=+7pLhE^AmPJZW@/g/(Lp"2h%+*@VJf^eUe:0i(:<&n:
%qmYOp>H6Jmpc/NK4Th"_?*0@ZNYscl/ZU=^Q)l!]6$3=aWP8A!!/\GjH1L1`NfeI#7iR@m\h?Gu8>NFWSihUnPBC-R)N3M*;qh_8
%Bu.s;R[2rn`G4ajH@k,-P[F['-eE$j_WSSZJN..(]]^?D.[T2=_$!I3TW&5HaB#SR3.99HXdRGGOtQ/D't=-2WtpZ/J,st'<3"ou
%hFYPF]2++^-j)Y.+P7!(QXL,./$/6IG7(=rllU>9.LO=#UX<m8/mDbr?29U8btdo'(:b8lkjeNN]Gd0!FHS;$T*c"IS,Pm`;lNdr
%S$F@dopuNg`_1#J3tKLrq>=*jJT`IWQ@38?!nZtTX>^Vsl#>/Hr$;qL%[[_WQ*Jp:HT.m(3pC+XW:*\.\+mb:T/9<PFu*1MH5S^P
%ES/ntj52G_,X(j#JA_mHmC>q+@-rlE;ZTB?licFC1[JhkRfMLJ2D>ZaI![N38kQd\iC9sgL1O&KhFNj"R\;_]6>soh"Kfsp,A<>u
%o[Q_T/TW!-eYIX74NlCd>'PTrk-@u9BA2::Hi52_C^/.g"eXAWebC;dQq.+5nd^t"lK3',<*2#:Lci+e.gd?;@N9S446u\O#UtD,
%>.UJ!S]1#65,eJeg*\TqeX2AsRQ5sR2Ji<t1T03hSP6:nklg/aaj%c@6/A;!@8QH21ZMQa<7c[91f#JDm6!f]Jq+qrmAnHNd-cQ=
%DBUdU@CoD(9$Bp:3:(gWh9NMRWY+4E&);V1^[)/k@HON9lo##9`?O'e`d(BD%\)9hHN4I"f>h!iOp*rCnS+aIJ(Wq:ouR0"S!>Pn
%,p3C%$DGtEg/BdUQ[?]b(::8lgE7&@pTh-]Cij-?ol`)s\'p-=3'`CP@R@+O'd.>>#sn8Og7')<qmtW4>rR9sQ`W_Ffd(ET<)FN)
%SfZ4+&lr?B*T/*&-Z&/ag@XoC0-BlCDj5i'$=0C8guB*X)K9C6!)<[\;:ra4Ccd`tD1f)R6Shd@]+\DZ&Ud5-&tKh=-`^k@:#0T'
%a7!'067h$0'^-GsXWC>)H0:WLj'JuM0=)c"#ce%ETk#c"[0%aT/+kUF!UWV7[G>OSY+tJXmVPP/K6jGY!B>Zp3U<*A.1Ac-8(_S9
%ac\qgb9KX08eVUMmZ[SYG4?2Y+q5.L/<=J,&?l'5qLd<#[12=hVd?l.r3r(V:4Cp<Ghc3j_h,SkqnuYYm$Bps)(M8l%C(,n3F83s
%lt:?)ko,h[?HuB_RQ9U8SH6;;%=$\=1HRJ$8mY^?4i#b]>(_es$DPcGeZs$r;pFioaeiKCV`8-)9F[hJ#r*]HdL8_jgr3I'o.(n`
%X-1[8*HPD/Mjk\>jIH9\r#24rSI4TY@.#Ctm*n\YDAeLgU\Y:iZk83-I1LoVRMErhUk%c"",q&kh?aC"D#^0q`]b4P4PL:fS6*Tl
%nK/7pBn%^R+BWab/m5b*/^K,gZO2p#-fA(++aNWP0"_O?<8rSBG6TWjR1lZ%9>dN[F>=,Ek*)MV"$n"b:@QuNiF8hF\9#Q=RM^9J
%oLokWV&KYUMEUQj(Xm_2HMBNgq3P'8'4<^8T:q0(!`\8N_ZV(:PbXCP\^=<m3&bH:p!8@%@J?-d`XmD:1JAm(<6'trrY]<kT54u"
%emMDr41^XDq*h'9a5dJPlpgSJ^F*9fi)mO=^j>`KfopBro5a/hH$=3a_>q_',.rM&k&nB.pY^>Y?3`c1I&FH=HF`RPh+LVE9-o^@
%76QIZSFA]0H),Wbd`5e@`kXdO+3LQ]Z3/%[V+.L*Q3YbjZhC]P8UbO_>ItD#Rg?m*%Ae'>@rAKhKtas5NUs6mHs;]^KftmOgR"Y]
%TNW(?">[l-DrS)Cd`fjqR9L5c\(Y8cQ&t-j5`FsY^90<=+eH@gZSJ>7eMskiLpD4eK"p&"hl0s>1/aDoNmP\03NmO>!J^56;KKBu
%o<NP14i_*:EH.+P>Ni=X*7DS;['&/3r<H1I3IS@WJrETB.G1&5$tKo^O_,c!6*_,UQ>1WDfeT%TfG62cn@[DEpQMUf,Pj=A[730X
%f$d"6m*>r`]<VO(ER-p%D)PV2h^CfY-bcb)HX/G.%:gW(Q-Ud;L737U@6G:%Hj5K?oHHYpX[;HHY%OZ[Pe^7Q_T@,5,S1MjB<Z&=
%r=`YN#Qb2ZF#e=@.oU+I`82CVBfNgjT_+M2`a7X6mkp\UCpF8[oP`N,^&@dqJ@\VNFc71^Z'TYI[8@sjq14h$;[.)NH,a%QYuGV+
%Z]3OIp1b;MeQ*G#E_MftUCJ:4?sRU`%bNY=I=Nb"NABT(]F&o;@%;KWR#"\r[$s%b)dW"KTfblds)(<i;#+`,LiHLqW2,kL\mG++
%MR_s)e$[`XeM[[,m&TUad+ELWlU1?L4c22F$O"5BUHY',f_6iq`u^8/Z)X*<C)bt:B\9!`=[mV82<c*;/.."jf#,\(';%0#dd+Pt
%%UYkh"SuY/Z*2>>]p!;WceG5A_`m0sZZXYdK`=F98ZJ(#/s$NcMXI`.8C;^aP=^EIXg-_5d63407HYpAK4?"Wj#IWR,K16V[\S[!
%a7[DB[fXD*fYq&M3[954d4),a6d^YP!_^kFo,H[ZYrA'G:8Ll0*EOs<.C>5Md83Zo=:Q;%.BMQ96$X.\aXDdYX9Qqj0TYT\dMG3a
%%V1(:QHLC6@Q(r"+/tL+;mTX?#%4OMpb?5LoE*RcBR^HD=?@JOl]%$7eZrYBT[C<-,3qO7"0C2D2T[*@]W-(j8-0$B!*W[p&[Y&r
%+UNg"mFNc\$kP7ajmIpGCt3F:1]e1i&!MW<I2#t#WV.a.Uns50\bJ44P0LWKcSPA$A:s!fVo=k/LI[u&1-`-S8J!*'(o&;Y9W9b<
%gPKHMn`)o;Y&nI-^?i('$l0\Dr;`@NUDP2<\1:";;Md!JJRN+MCf`7Tj(onh"5'L5<MT4oO];hS7b>f$ZR&Oh:\9p9E-VQ0N(Y]l
%Q+t6%;:rGc98W.1CjrEg`nSUO[t6BTM4(#Ck1f'I]AHKu./4Aq5QY#$<^T`,Bm\Cq8Ve7',X52j,M(Pg4[BoOld-f*rcJk#WL;bn
%8K.)]Mm6])<kImn^.`1Vl&]h+T#Lft(g.Ru`uJcS[Rq,N%l[(nUcb[J0pR&0hA4@8lEom!D^S-]^_).MIf7t>[agcb[ageao-CT;
%4!%D1<*EO0mf>81TdP)&"?c)$k4pq)EUPfi6tnd+0UU4D`=I=iT@H+F7P*6MGqa6g?AA,)]9]LRZC?'$hq<"n6<M*WReWlPr:&+S
%jit81+)_;N<d+.+LT@tfeopFqrN^ljf>"f#pc)UeZL*FulPE"U_>;aKm:Q[DoC`&XNt8[&h3..A[0(&-22hctdOont>coIc[l1s2
%T58AI1tu7%4`(Xog"P)nf+Pc?41WNNYP,F`NUS3#H2=UAaCZN$p8t`0ILch?"b0t:rik3-I/BEi5-1o3[DmY7$r#i!q3goKlPGM8
%Dfag9O5If0KaVJdI,JfOD>1nroBP?`mkgYb1ON35htlN<c"m@Nep9D^>;!!.FT'2Gnc^R3o^]bg*Hhf,TASA5l;mT6qF0hPPJ=Cf
%W!S?/I8hVoqqnk@T0IeJ-3Bjpq(J(A)Y!%>pVK[Nk?`&Vq=`/s=aa+Z5eIKI?!,,F[^]QlQHWEgq((KAA(+Z/+"cY^Y'aO3b!1@B
%kJQ_OB5_r8>]#]t_)8s,//Ku5YLq:'Z52)pb/:FKPqTc2>]o$$j42`OVlmLYo&r.ZYdCgCH_nV8f#F3*>@,#8\@2>-?t7HaI<o)%
%mBuYAm^5YKlLOVZ)GO?am'bdOjm:$]rDm"Bl]qBO!)-E(Sh@1KKXn+2<+@o#hd>$Ymqb14>?l/B]Q^3Vo?hmRbg&/]/8r6OIpCUN
%++0r2T@F_XV.\AC#KW3lem%H?*D,oTGJ.OhEWLSehH/4Q%h8q^_<*!BhXZF;/n<iF?YC5?!m<"TpNI$lZi&&)jKCK!(ACr2r(?K0
%Rn\75m=5>S;jO%=/$<Q>kEf!?6uS]8DNqoLr'K1t+GT\%F/E%DHKB;p&3e,WW/FH4YubU8Rs?Yg3$WG[_Y/&gqI"_%H)H@7bCtk^
%^$io_Gl07.S\KW]q4_j%bWEKfFhFK)V$$0cdnp61qt'[i0W=oCq!RJ>DF>ct]Er<NEZNKg<3r\CJnaZmKo;.(R7I\V##!.c*c/K#
%>f)n;RGsXGr$H'hg\&$ZXfL'nqSCqL`$NI*Zn1.nPEk67_u8"Vbp;R0kln%'F)`[3An1XNGL8'CeXWp\Y/@G[V8=R*At:lh2GQ@.
%^!ke4\"B*Pglt>_\Gr^S&)0k,VL?ck]O"KYO58/iI+2ED?WkDkMW`.EP=!o:XXN/Udu=VG7ZiKHqqKu\Y"CIY\baiHQ/0V!G.uW1
%[fVMhcH5h7Sp0rUGMqX;Fra$-4"pL,EpZ"mdK+aJc;h!EDr\sAcMl9'\JM.ST(W-bb5`O@@:B%Z+b[70D5+;_Q&G=ENIH,!qj$*i
%8nYb]s4ha`2iO(d1tgMq2_OZdG/YZS\bbhe>C*OF,0"CC>^o]TSN^@H+ZieT]),o;XEs[KCmkj+0'kgUm[TPXhT=C*_HQ'cU<b0r
%Gl5GL:(J80>Am8\!l*s3H3_W0/h=n:&Oi/-Q,ZJAIq5[r"3,Q@@d3ad,I%;!8i:!gqU*@(qd:qH55(#;bpRPH=2>7uKoZ]?q!(H%
%gO"EJLLh`h/ioM>S_B,7oD@E@eV"<Unu-Nd4oUU`$-0c0[WLtq&-2l<%mdVIo:Aa3#[iGRK]eJP5687)h'fFrQC\.$?bHUXJ+mpX
%fi(PA:VDsWXa7]ZGu[>pmU;I2_VX.-<I_>g0%$SMc/k-Ml[O5b[?.HW.Ttiaa&l1t?<HYSNNG.5@[jf3;G4'ukA"_iM6EL0K;Zl[
%p&6;NI<D9MZB#Ckdta:9T^Chqr485MA],N),`d<nF^<gX?S@Gl>Q/?IT^48@8,S_M/J#V=*rNUn_676>firjuN5&Z@SY1\6k2#c-
%>p.hGVS!<<a<9Ae`E->^HN[`8#YZ+\1`O+(p`+aJF*t^Ii?h9QbNrPboY`L,F"gI4$RRntji\2ZfiO"!j!).I#@4WR:\fUl3W%bm
%?a]OeV#U`b?sRNn):<+UU.t/SVHc\Q@\7\^O.UF)V"Igf"<W`t#fQQ5]jhQLdGYimP6-+5U5*(<LX-S`i32Lj=)o+.>eH$2D_Q4h
%MarB%a3Oos#Yp=>ns,O*Q+i%237/:98I>Kc(iiB"5Y`@qi6r[RXb6uJD"(jDgGpuqnW70H;atOKLU0dQAbm]9`^XF:1f`"7bJ]2J
%J+jTJ]r@$2"o3+U58ITqZm:d;he`[bM:#";58(dL-AfY1#XJUA)r`??-4B8j&e)c%,uP?[[WIMNMo;(c;AC]$M0idTA/q7:)Smj"
%r0V`MliC"ON6Ph\LL8q,#DoJVF[=*dVm5$mYD7gb"q;5d-C1R-Yn^Z[\=C_LOMV"jaJNJY\.rI2D59$9aq91A]l7;HZBt*u$BUh3
%CG]CLGPS,"?cHYVf;j8=(RKI[!q/!n4IUKjB!:W@WTs0M_Y+kc:?J8s"]4#V$_.,ukOcmIL2qBS\bP=C$fPi%+3#H7-6?(Od[Sn2
%>q(bA0bslub>Ksl\r^:djfHK6U+Uj6Pl8ER"I?ak@GghOl\E*:[j4gSVM)s'lmd0uFlgIglokAdaNNYi6LVF5o%H1im*pp9qeM,3
%:TL^Y^Z@()72C!X'ISiUKq4:&hn?pTmO/DDCC/][er7FS&m$M)Z8YCZO!u=K[!Q'1D*@\UBF`@9nTi10Hi*(1L[FcOolg3dD"/'Z
%ho\5qnL5Dg3nZfe%Rr?R"J7U$_:`Z%p#g:tE:KrVZ;s!^#[Y(:4jS-N?+^-A-[DHe.ZqKB9&>5o1?;PCi15)U(V[RGb?)D\CE"(t
%KhI6?T;Y#=B4#'bgHI5K&AZgUOQ/(i8bI0)D#YakJn<B-6GJ]h&T?*o66ZrGSj[^[B8+OZV<;ZK=8K8,&5O?2c<i0<c`^??4^I7K
%!]jaf(m?G34C*R@AGnK;:JgKC"gJ&.eK82HA"O&k(JkDNQ3+lXrE7LBB2%;p<B,;%I1p6Da](]<WI#ZRjT24KZN'UaR9S<mDdVS.
%Q\l^81i:u,kahIu]qnMWZ7<-Ef2mZaf?;o@GjZBTV/h]t,%]Bkb$s4=(@96,UMCd!lIi@M[f>I\P6ZQAhYjH+\2B%0?utGgg.019
%mI01D*Gkg8mqXS%?)%4F_0bkGjGdMK.Z4gHR;Y2c:nY#(k=<\ohK^p&m<d#&g5"u!q5[<cesE"GT:H;aqO@^1B(p>t#Kr3a**pM*
%]8f=S0=blckrnl.#]s%_:tEgtWWLVK^-nE>(ga2PajN;2l<Si!dR&SUfiQAChZViU$E*UK`npUiORZZ59B(ZaTQd\IrW^#\g=!E9
%hfE9k4C.;g+U['0qr%9M]1\Z;?\*WZA\J:$a(`/1el9u)2I8Vn8i8fWXPVjEkT50D:1"7pd1L11f;jf/BhJ\e?E?W)]!qIo<rL%W
%0Y=DUr?=+bVo"*MSL3[-<ue!TRcQ[^S/^EYXN"de#&:FH$u5@p7t9d%]&=IL&)-T\pRe)M:H>./J[J6ZT9/3kQS^_3Is*,/]%\fI
%O3=S.lS$"Y7m?7g]'n8B]XS7l\D$l;W"dh>D/9NA5/td2f<2tD?]h@*%cDNh.6"/CT:5!A[9W+gR@/k"?5gAlY5SH8IG?G-5Hui:
%qI;()-r&:1#N$OQGH\d[?J2i5EIPI+rm"l4An*HE'cl(NEoEK<n#[B_\`Ct[5@q*%1-6f?iJ3CZfK@re!5j,e:O7Z<>%-mli-l)d
%rMI/U$I8,9_r@(^s'3&n/R/uk)@'Qoh"!WE91RO/Sg]I4="bAm_7I5PmIo8W2r<fu(+Q(P2_t,Y^U^l)>'7I6dIGrRou\*6!Z:t2
%M&c(?kO`j*KP(5j`%7Neqe$jLCV?c`cbA"]c'S0dB]#GK_Y>ot=k@`?S!R:N`L@V!#+Tj3++@Si(E;d?cNib2rf.ai&G]O`puQ7n
%>#R&02_V@!=O5P/hf!?g?*tb7hNdrjcE"sKd9Y>Hjn%q(?'sJr==krhLW=j-['%*k6D3J@c3$Sa<k_YDedl+f\HHn^djIeqg%)NB
%mNX,UiP7N=h>5tQ+DdGNm<n$[6$mD'?O3arf":>IbP[jm;<5g;@^Au/=P,&C+6AHj>,RGY?QRu):SPMm(O)M?].ZAD*?H4kjmK$L
%&@Xf<A+-+8;7M#Cfs'(tff[2EPp_!d?%`Y$]T8OT%i<Mfa>]%?CEK"ebn^MNF8G+ZM1>6W&XJ.OalQ=;0Aef:.\ubOI_/N@cTPE9
%5?QK$HDd[%mNprUq+`d85-M52g"9rW,JrS;q9om@H1A\rH_2I/gtI&:(KO;UW9VL_Fg&L<WFri`Q`fj9<s(:#b+L@$W^AF]%0>Th
%9<7`NdjT$ZW^@]tr-E/M=n?L5>#uaSQm9g\5ORn#N;*'R^NfUsGWZ75N_KR\*rdN5>0MH<<NgUQ6>f\;a9lTt2:+SU@_Hpce6%2#
%l,*`bSmYiHm_)#t[e0Qtj6aN]b7]r0m_(.fau+Ah!S\e8rPRsEfGZQ0h"Z2,8h(cs`A$&Yr3GjPCmqt?/Y#&)/@bRa>FW?.Xl$%V
%DNET"roEq!r7\'chVRB5$fJBn-`_\n]iapY^#T!AV/I0d&Y-",:OV\7c<=nMZl9`Z(](41ok4X;o_B=5CUUIVF$JQW7[kpaU\FbR
%dQ%ELf?aDB:KCH9F'mr5<s&o[^Oe4)GN-\uEh=_;9.U+O:[KfE6Z-[JJAL%1(O'VcHhHXb"2AesE8iN-%BqX,_ojVppVDZNP(uM#
%T]=CW[O+07j?_XTIkS5g=0kO%QGG27[^"un$+^iDISG0.m2:hmf>Y`&q.DN4C18!GiMEn_4qJf$M-&RF=ls6ZV_)2EdN![iipgn(
%'C.fbEHV&0;QE?]P?Q_9Z6PSs+oTeH_FN>,5^mF$i+2]u-6<QLT,j#_l`SaPZgWAJ&_MD#+U[+S[C-PPfu'jb8U-k1.h2O#dY\4%
%Og+nS``AA5:cC_MoS.97>.^u%8R\>unQbZE<pgJhp&"]4Z[C^bmVTQkRn6pnI<pDc<%5=?DdKZ<;R>duk%aX]Dc-SCoqKQ.1%mQ5
%bZfKOYW#l/*dK-hf33Y,@^ZV*[7VC.=K[BM@Hk@<q-OXJgu2,HiVM\Vrh-q(?nfnqT]*D?[8QP-nRAo(?_fW#f@*6.58SsU483g(
%j[TE#Fqg$#J,'T,?'1-noLp!8+"l#t/ioAX1Z7AQ-f6'khg$YRdVl8.n,,]3AsbBc3ClU^+dZ)Nl;Ci.^mo"pe_IWP7pC\<ngjVn
%NPb,CU5qCK4)?RoWs1G=R#7G)486\A"68,66,>.6E*Ejq."*W&X!_O+[*\VH9pL_0DRZD-I,*QuU_s`PPYTh;IQ?ln?b^83PVbNa
%.e#`iVPdiT*X9fL`\V'T.+]QW?+aAm>WcabYW@-%VuBgV]-]+.q6G#I*,.XBf=rl/i!.eR05pKZ\dh#X&U;=U`sl*u]8)5ukA7Uh
%GVT>0]q+*;<dX)erPIFZkO4+Do?7(8e%QaYZS.bT8Ns7ZlfX%adZ.l>e5mG!YSStjZd.`6J*V*!RbVD36Sso^*.bTU>.nra_3OET
%&'jF;iq]SJ[W#qEWl12S[U;6A7qB2ue`(Bo&k?VJ21P:=o=OH3D)KoUg>,6(P\=4W<VO""ap6OP-^D*&]r;gcieNG_,)Un!Bi;,J
%d/=V"h,WAnX4dAP38%n5m$W"g_*7ho@a-QJ4kab$"_#L4eUh0&%`"j20'05p2HP1JP*h;FSX3aQ::d@bpioD?hH0Gmk*!J[/?]jB
%-.Bt#4ak,fbfTV54)XD7[@VeR\rL?SC,SWIguHZXil^H>4W(?PigjAL(HCJO'c?aW[rD=!49i3?p1!pt=n=-]bXd_JOIdO3+YU`k
%Mbh0`YPJd2euKV5+XVLF#(,fc:<rT@/Tssj2QbS$jY]lff.6iP\d7!^X5fJ^m_'")^N1(%VtK3LKh"nT?eDj>LJ?Xu++:Z#(G6Vu
%Q`8=gYjfmhJ'Plno'(<Vg\g'uI9:M&,(PFg*Z%K*qd5l2(](,3YO$0%B.IoO'+78CSJE/mIU&K+C]<nIIuIV.[*6<GRb"q!ptf>p
%6S+"Hc^"58,^r1Z@!stYEtIB(8@Dkk@!plshHo\YTYH?S-HMk:50OdcQQMUcdacX\@d/9:N*4DHhH%8g#e>G>;;>cX5lTHngA%u-
%ohP,P).]UUaMQP0nLTIIn3T>DOA2N(H5g'-T3pdJqTc'DpjDm?o1l;iCLT3+)b4I9`6'DLS-VuMrhJlZApj/!Hgd)TB/qMY[rQ2R
%Y.jq/(%89eeun<"i1YMn[KZ07^jCrZC;+`Wj5].iPLB2Wno2!30&O=.J"f9D:qI7[_!CT//@R71qYr^:ci%VRcu%pLM2*V9R0$[Z
%Q97[iHXY8m4W&-EFl9gdhfsmb;STBC45#d=DlYjr]MlSji0QaO-^8ILdH"f%1/c4E_kN'HH4K!oK6m/LdGcNJ;a9N4p.71XpnrVi
%D1d<khGM,0#<Ni?o%oS>o"*6ue8Z1)r!4gi.McCA^f=,(B>JA:Jfr2%<3';N5,Q`M5_G%:i.V=Z9nW+.==maG!WKC.?Mgi0MimLZ
%q3ea(9nEMO>(_\'6'GTa<p;\Tg,"kG'<u?#n:n#jLL9;'+<38=Q0>c>_%5H1:_"E:7d6r'W.frFcT:s7P.ia)"!>b!_50i#!'"F`
%:*0V@lN)4_$lZqm.\B>B"3Q\7$lsQ?4`?)r^JXG>j)Y31Sl?>t:0Wu%!r#`E#^=Y5FCN%Y3ug]r_`!Z2k_,j8h:d-;W'o5`Br3b.
%R;/L>$4J#LQp^bk4Pm,,GAE-?XqgjQ3,#NC#e>V1&#;5L;2J06i'R87nOI;i+Y9I4?FN:bT2YQJWR7@nQ,tuMAbkkUdBlC$H:U1%
%W\KjFNRDBpAdSDVN=Pu#_d=iEcQI@sBMB6VXXDa_"72Uf0`+ADbmaUPs4MB>S,X4XdP-FoarV"Hce5&t8JrDKMhgr_\e!_OF8X\k
%M_Y'Jc_9B>@rJ7^3qR[P"0"XXm`,i`VK!)PWRWs=3r?as0RDm18B'<!H=RG3Am6;sMZd=dj./-'-]EgC,^k<G3Cg7/A"3`dg,*KE
%6$gH;!?(S*V-$7!M_^9-![?uiIQ06:5VDSGmMI@4PE-@fSJ`+]h9W$tIX>ANR)jhMVg(r_28H-\o9U]8+3GYGI-R+u.L,3C)0n/9
%A77_AhhL<4.cJ\fVY?l"5Um?$%LI]eb3^-=/W1u2.^[FP!",bTN#q:un./M765mPRVP3Nd1nDJb:)lRYW[WP[-%_lLB@u"H^)]_@
%[_WD,^:)[%m%`;Q%[[k6_6f*=@F@-.2[F`9)5+td+A>ss6-UF(@7V'*PL0+1j5F4a0[a-pM?GZRn$Xi'_b`@5KL[d$'j2VL20`a_
%"#,s5d^^6QJ/[#TWJZ5JcslFIq%=)O$oMm9Lb?f*_&7(3@^)#Po-#G<*5H61_LfUhObdnnaN7]o0Z$?C9MG\TV/rXT>cOQE,:3[s
%78kWJ'[U?f?3hF9phVOeNUROZ(]Lgq4S1C.Q7&)u`8jcn0/H(R.7sL=m?@0!@PlA=BK`^J$-`qj>==-FC/p^4Sfnl_+[9[!,IaI_
%6ZT+kriaZH8rqd$]&,>GBogL`#"K)3dg9a@X2MJEN:uteUnSCRdA0AEm\a%\*2<c"oDsAei$4m>#*-4Q3)-^,Qf"][Bq.D4EDQID
%)+@>QZr;^e.i4J52r'7p*(IMTZ#A;=+u/YWl&En2bfd;FHrO_B/ZrB7^J<G;rup7'm=F*t/ZJ`R0q_VoI6W/+=.M#&Q_e1LlS%K1
%f-q,@hfb(\.J2`mC.:#(N:#X)9#efhrU[f'Ze,;W!/(52<NRAX)Y=bHYBL>Aoo/+Xb&YWBFFG7dO/NQ$VOBcl]W&:.Wo2s7eY<<o
%3[491J,MmZGkgU\cbKJ.`>==!/#t_2l<"pKU"[)[i<p)'WXUTq7Bp,=?9!\AQnH*,%4iF7$VRhBd_?0/*_%9>p_U[!Kid0)m:QX1
%iZRj_Z]Zd;"Wncf4UiuYlE66MMii->/Q7kf$mTOIMOLO<1hr=nAZ3QK08qK?a]g<#GMn/bn/+WlKELnKV;&d:6d=>N_.SB1-8fM?
%ld>db!^'FLakEns-!N2RT$&us46&;'<<3WAO)9%UrQg!@)QL:o>;:$%/I.uXZ\IQS%(b_=e6kZ;9eDB?o+dgtD5n!h"6`ZpD2r<b
%;CI9XGW8i-<>d5BgTcqo-GJE%YsqLTr;d=W[L8<$6W8(\`(F(^TG^n7.mQRe$Ur%rQ)k9+Z5rap"YsRB.8UHen1jS]CO+Z?,%(qM
%Jq0_,J8P?]$m75%eP&J%,&*u4(:A\8W/2>%M@gDph`005<O6$i9[..KiG'],cuohp)Qq*Di9Ht6KF[Y+M-LgVYHfLm+Vb(/YZ*N[
%V7J]"hGLDH('pTj0c)\ofP#h"!ZqWSd9tL9Mb7iHU*/5lf$R_4Kkh??<LAC>Mg?gsCClFc;(1G+l>Y70o.k5Y&eq=a0Us*IL77Y$
%\"k/Z*%o;hkHL0#>t6+P(oE<1Rp!oW*qGU=$oH"I/@et1"`1L=K+SrZBFc4jL,l!D&R.QmDh=E$%^,2$Y/C0gKjs@g-X`C/"+4,d
%HFfS'D6TN?:g#LiHFa4F"0U9/fPIq$e,Xf3"(.n6Q4@FZ)4O'a%U<%cG)6EWKU(krBY[KBQ:46&qFL'h')l3DLc9<MkT0JC%]ThI
%"fWa9aUc0aBYOW0e;tre71'<PD4@t/NY*6=H:nqVr/2bp!r-.KQrL#_/R!aBTGXO-2C!g-)Icgf>8\C-(1AaQ#dV9]<e>-9!OcE.
%SYQHJ%<"e=`S1MTp_K89Ja3Api.P[ip#7DkVkVn6UahC]?5`tVLi:r\D`Ec3j>=d_70V4^)!O_1GE\g)Y(;hK#rY*e'=4+A9aCf=
%MhOT7?rXDHXT75lU]YH9^.Y#m#"CZ1O<>Q^';WOTRRB.V?'LnQ>VDP.d/?=#Kf*/\Efq&*@*'r>!9XnmqXBarc;?F3=5m1J2\Qf?
%2$f&6L)u2H[TMNg"`TL<FjR$3l.1c*d[pJnb(?UC[s$3J\I_=t@NaC)b`XEX&d&-Z*eJ0hEQ<`4ag?m/$[;edSa;t^F!,Q)/Z?g/
%DUtJB=%r!j&-9G(ee\cA#u8m&1RUL-e!1-+#'_s1'r%\&#/3:G,hb5J<OkgH,GpLJmA3bG2[(!3_*XadQq@XjN$R4bO<daK4%P:)
%=VBCVK1pI9-Bh`B7:^$e8&Q(A-`G=a9Mf!ucYV;JeMW/)*1?)d6)M5,PGp1g,-(76A#f9"WH8M3$=[r*ZBBl"cu^W=*it^q`ng-t
%$#s_hCt'R>5&-8e+12FGn<me'o@7Eh$RfT'6^si1nj$"k99h=_C6/]C[7Q%4g*0ese1nBp<+:N1rRZPSbi2O_h-61fs*hfoUL>_K
%3!V2]Lbb)3%R_sX/4J%%e:`oNK^,j4[&FndK@jk7_LckpaY:PU-6)b)al1@,D_HGWKG'ADK@!^iM)X6CoY6s.0aRCSn3gnH!Bb;c
%jbI=o]tg+?7E6Oc+&0F]G]MnMj9I$%/2($<R#3[&r/T5.Q2sm<GumdO@eB%5(q,&L:.P87R*d4IC`B_n96-+5C<1=.YUD?Y>R5#;
%#)FT?$[S&U.#W[^N%6]@"ri_U8CBm.NcJ,jQ<cH;,WF(,U-W*YZpasl"5)K:A?\e*mA^b)q#S"^6D=LcP,#NYl9Wdi!e4\E@=r;e
%eDguElLD<MH;Xj?*_NhK-E%1CeZ`o$PLMkHL^&,Vd1uaN%@.,PLq_mpBpV6[((q'q(+Ms_,18c@X[&O#_Z:3KZA9[c%1.-$>E#o<
%^o5+-3^Gfo;DFt2nU!/#H_4Dr29!AXHUe-=KoAJW'85[;o69d7#@hnBbJ[p93336&!rs?p9/!l^Y*t6I-:rs;g!Z]l;?NDB2^DG`
%D)!m"@+kp$e"KEtCd!%">+X\N?`Vf:\W.:14GG1@A>cRO"/+A0GNl,i+\+j;.N5CiL6WEMA'kK:RLZA'7Vs7S#*M\Sm?7H.R:q#r
%:m0`ND)d`[!Eh9oTF5kmb]maiT!(o\n0SWU<GE/&LhS)5HYN,a3<m9sUHe'!PGY5B8X`#`$,7aSUE)+$RYqB<k+YSI\S-n7cDQ\:
%cI\Cs0&TFM*$Q0SYp>b_g1Ug<U5K5DlCq!"]4d,dcDQ]LmA88`A/Q5U\ZV@-(E+Q$4lQrgL?l>^/<CM_<Xc'S0+hMI8TYbCJi7)l
%LjEOt"PGeo1>+BT:fTk$B]7O+/kmo9,dKpW'%s%g#STCEN+rl_#3HcY37drnAA\E+dnS17blOF$(57?pD;`-rPlW4DD+>n(@\X*h
%1c8IJWb/KSe6i`%0hd;/!(C"JAl@IiBirqA<GVbK#@Q1p3p((bJsNeU4D[l#p_6q3S#-DpJIk/+MB8Cg@H_;=$l09$%ER'/$Ao;K
%JP[3M\>F$A&HmF4#U$(U[024)Ut+#J\n9O#FFtKg(D(Fo_.+X55ViCo>"f>sYXR#D?->JLTj&!a]"5d+F+E-ZSK`TA9)+$0JH);Y
%<S)A.d:!Z&!AD;:_Z7id(mu@LE>cF&S7%@hn=K72We0n[h0#N'0"IKR.WoOINPlVEM;@.J:E'^aKaMf&,(Bj9%#"kC<t:U&^bQ9`
%[XNE[dYI7-F6%ODe)B#=)gS6m6Jk%R#ntZk%0hp^)N^4<h$)+r/Li3BM0n<\:gOq?B%0F\JL6W5E=JeXW_Ns(f%\8`TIG!"pL&^m
%eU\pg&EjlF:.TF8+?5Pun;\ia&<IRW"[B<=&O>*),2oQ5&//&d)7RGRigLuLVINO40OA=BK9Bc?f,*!CUr9O*&Q'6BMo<Qb(jHAl
%6mO)`lNPJ!e,X;t/_nNC6u?jZIhJGVYXXAo/!uQoX:WaibD`cfKE/u6>f>C4R**5C8L1Bg_Pb3X=P]Zg-?<G1i'h2rPQOK37'h2J
%\Rj%^]i'NWK8ccp'Q>tACK%/5R`Rm-PZ/)*9]-2BAjOa")s\Ua6Nt"(*sN0(RRAV;l4Dr92Y\^q!M[s?*4ArrDp^FY_/4(k*P&Bs
%Hqr+e+Q5-me`i`De:8i;C-]C>BWrW=!U2V&)bLN`PFtuo9Rst=!?/D+G#ndmD;[=@B1ROQ)9p<-Y"K]`I9>C8[JT-l,FCS)G>0C<
%Tqd_oNW=M6VZq[`-@-/p];)-`!+oB:%H=I@8O2mD\e'Rr(?5[f&f^Sm>o0<`cEIM,2h7D@57@W)8&-L67Pd]3TP;j`8l@o!1=Uio
%K,R9'cpiUi<-?\g>0P@_"9=g2KL!NGaZqe!5gT^VJNZCoVPF'^/V_OdDG90tTmYV]pu_eo"P?`%g]Iq#g_-DB!2Dj0ILU=:4O%>K
%?pepH?W45bKp]_IL4LmS2-/6R_I<cV%N.oPQ4!25/Z*;#X@4idpBT!2NeKJ(SkK`T`396Bh6)aX<O<1B3"BlC!hTKc?iVtg"p8^+
%0h$lQ!*oi65]_Gla<jj%?ij^o)4U-jR:S(uKRPF9#k;-NOah,NnG!ulD&kEI#S1ZDp&HO7+D#*g+?kTFrF?m9C,@)9`HE\8E.s<c
%aBqmQ(Y0oZd7d3?\/&cbH7Vr-LMru]/qZI<8PR!>U6;I`Tb3q-DL>pc?suY/8<G%W#@[RDI.-M@0$nnI$k9=iT[oL("b#"Ed_^rb
%mL,:K"]Ghhk\Mh0,ILpI$N.Fk&.A_]MqNHMY`91teoG^o[`U"n&H2*KSI/s3.;E6[0=Ba&3"1,O5b-*7D%+Z7UM?8\HDI<IkSc;3
%+9bCW[t'Frd><)jWeSZ$OTDPllkk#:$ga=:<YB7+-&oG#C/Hph,tYMm[&BCFR60A@g5a(\#r*\HhEjSHWXaq@FbN97aC6tCfO1EI
%5kaIiH"AjK=QgVVJTBG[26o9'br?+4#+nT0*6KTtBr",#PcZ[cJNdf/icPVPdkT_0%7,FK&jZe2.6R6+ASnS9D?\4b+:m*+$H>'.
%TFF:)J]1QEh7u6=)2\k-rMZ_#46pO@jR<^O`C_1L#gB/=XE23oBDQ:blb*-)m=^R#;jc+UrT>(D[Xj,W[/2=;LPUp.qB9Z35Vu''
%CkWL,p]se>j?CQ(n3Y*g%^/pc&>?@r$;t1g)-AYZ"9F*qS_QHn]1spnZZTYd*KhI+%i@)fiF8Zd4H[HiQXo&tg1[iaFW?@`d;(bB
%c9aZLS;7^HXi1.)9cV1"$'0XX\6K1X3!t7SPK?ho6mh^?S"*pu_/>U+\%e7>$3kZGd>;W!acOK=K;XJB2aJ`E+b;Tb<jF.@!JA9f
%(DV-#;3l'gq*Sm"'!R<3Jjl=bCNT((TL1k"?7G)FH_bkS6p50*FY!];1Q>oPUfnL8X/<^*+V<Bg;auZ%/u2To%\;r6BJ3P#OqYoL
%'o+4OBQ5:H(9_[D#3uU^Z#qB@TL";TNp159@Q&`_LncG[6&DtDZ@Jd$m9:p_mqWNTL:Y2n^C[A#3OoIEajISUhf%ZR?jq.2r#43k
%Me/1sXp.4R#r>[K0SPer&qIqO?pFEfSZ:.<ps<"41>G>dC9M,dMCH,o3ltQ1hP+KI%=p=FC6n3R%RraSWF3ONb>\fu0,S_E0l56h
%,q4TZP9Ntjn+-=@K`Qfui7f)#)RbN9)jnHC1ltnV$>?*=GZ2"DQ='@FIEOtO)dXE4cEUN8AR[bm/--Ig$;bn;eIW*!T9tkP-k6I%
%=Ht/hUh\tQM&upC:hPV1l@"Cj5VcIMT'\==gpNjB+$O_uZU#q8/K.UhCtpKr1Xq#;Ts,:K#%EjUWe^WVR_]Ue?(*+`Y:QbCJ7Ho?
%Y/<B!K?)"@$abFB3\YS.JT^cS38_.Rpufa_LcuPKR<dd\IiDOF`7F/R*fJ1G"pq2aHWkq[mc3@!(mNIR=96>VQpmhfHEb<.:l@uG
%-95YuLWduWU4,?Qb5rI#58Arg"<,W*$n&G:7cH<<`_fjI`f5:</1it.JcgT'#-&\1!FnrkNNC9*">L@k#Z9NjN2sdZq*A-?[XS-A
%Es9?_p`KtH$f7-pP_9ZL0*ipU1B?fneEJ@?!()>6<c+&R.neu_`9\$Wb]3/P,^9f6!P:]N-D!ZBEj10,^S$#U+!Uqd-t^hfY)k];
%,"$uS)?S$>:)pRE;G'5+YIsMdIB3:UKhNSI/6Es"5/got8"'bh,\U^G%-0.g2PI$_R\VDu=YSO+aZ!2[(-;74%7Jp<B]33.,et2$
%/M@br:,'&l8gEGLE=41dKCuTb+Ou3(QCM0H$/-r2Zj_Y"kE_,=c*/Yukls=NilH%Da#;s4V$,p/.Ak67!mFA5VsN!QXWaYI:f;#9
%?BU:A-iQOTZS4^TWKr9CRlhMjGJR0_h-^JUOhXjI,k"AP)A>>H,nJ$#-5`T`l<mi/AE^<KMhs;INCgI7HO)GGmYbd;9<Rd[)f3nA
%7:U$MlCs-)hC^,C()kj=$W\60Fb&O39tjnFiFrOs,66@Kel71+(@CAP=QBZ-U71%1)NI`:^./D:[OoWD+W7XDMbOC(\@aX%K[Em]
%A5NBE5a1GEqIt--]_i5``(*[L-!,Z1>(h-t.[3>#bqMk3>fHdHli(R@$sd9jY_tT3-jR7^6]TLC=dXcFP\%-g6,?ZmX1>34/B\/#
%W?`Di=ZS)TW5MKY!*1ql#<?X5PYKXZE]mH(f=B.FEUSZ_"AEFd@=:j]FT_m68Vdsg*=/"S:>]"&jKSK2M`g,_%_OTr;8m9(q%&I'
%D4u=E-eYVB;pOu]ErIH6i>+:L\<Z+YE-(9r%T^tVAsY*/Ym-h(!uh9g*L:(e:,K`d],9r:cgVno5)NmL4F5D*0*Zbca[/K$%6@[.
%C;==7-:Zbp)[4\gOkR_YRSEM2PHM/Q$.RihFS<Y7#.BWIOKl;>DNBF5B$^^kpp;U?"Q?4#/r,KlWB0GdW\cek?arZ5R0nWIj;,#o
%83rP2:XE;`m#T2ZZ%3td`?$WW&1Xa"ds`P(\F`%j$?D&#l/KUB\;@9G?B++*[MWD(Z(ln7T.LS.>K$[E<(\K"0ZVO6NI'V0F_!Bd
%f]kNI;9*=#`Hu^o@#"/=/8r@`&ac2/G=)&#/%1hneCd,5Yp^j&U#89u/cuiFDB_:[N-ZW9rP9>%ft=?Efatq?T=(ro$"=WFGiHXW
%;B4m'WNF(GdDBo]`hsA=J`+'VE*<I#NN0u/4nT*u5:_N[MiT,nSIFhkMTH3aPW-TV#!TPTq?qe(lHrhi0&aDl]ErF,k*15t"&Fu/
%4GlSGHd[7_,uPP\_.)saV@`3m<C@LUK?k*[fn0Suo#Y[s;-hdNM""dV#e3M\n4<ZbcgdB9X!+ZEW>m.rE"q-!]S;`,BILB1UiE3(
%FDM(D`lAb'r3I^`d[(A+@"@Df9hYl08qHD^8TIAgkc&EiKGSb@\nDp7;\Wb<[79An)W;+O#Ud#LTP`jmrHIRMi1J(f-U\.A=)i@8
%1>k*RLQKA,OT?!:7)gpkaQRpq1."<,:^%ILe);JQ1a\>^F=o?8iR<:mW9_<tgVTi".Q?UH`_8E[8L@a+-=*sf8S;$3=MlC6iTUT*
%4]1\+WAq9T#2[aXq\(C#Wf!W5[aBhV%Q\_fcuann!^/8u<YZF+Rq*^b<"@"^^amr+p]7/lpDUP+89Fti"3kqh+VK/$SoR3*4F5Lf
%idhJANJ&:U_>Oa5a:0W%fTD9UHcer,+icM&pT6X1,05HF)=Nj+s#I,u-kMH5eH`L(BPTnh9Z+8Pqn^&N=34@AXq,bCJN6E(4*nhA
%W[hM/8n'1qO21@CTl6ljiF7L-_6Zcq!UW^76?.6rJr_P=/5WUjED^g+.[O;>4Q5EN*`9qVFj+%Hj1tsCS8BRj(c)1l!CPIK+ca[^
%KK(:h;G9sC"9hdP`!1(YiNmS0s-s>lR&eW>,<UjW`km6=X%e.]W'FC9k\M+F:-=78,98o77!m8r4$r)fGu4'SQB(qMc^b(,\=r7k
%oKL+]4FaBh2Zj?@%EB,1W1533eMV)_cnMMbe$',-Z17T)SXlu)FMKM_ZZt.4@ic]01+@Z+nZ[[tVT;XLG(5F%gLb]5fs',"2FncJ
%/V>[kVC">26$kY#3mhTuAi\Gdp;sIPj<$4[&Q?4D?o$t).qjMc'Dsk"_VSc7Xq.clBc(AqQE't3gLcWq4DGsUcD[1argb,a@:t.r
%NNtp_?qbQs':/(G7QlR0Bi0M^-ouQt.OLKMGE\S^ck-nU[9<8eg:tau><DLNd>WW"J;)_"G4';S"`Mr,9!IVLB$S1*G?@.cOFWnM
%AMn!2@\&e"qrShrL;g)nZ#:bIQ>I8+L94s"6G]l-O4$qUN+HRB4PZ9R#BHdj"JHQj@V7_ei@qZ>n\,Ue^(J4a*CZ<f@>WcM45[aC
%h(lhS6s'e5\X5F4B)'6^di_WAdTe=+@CV"UoYSUP$?*dbCr8?]+N-'Pp&m<\(1j44idN`PVYtM[9$]%kRYt;N*hINi.d\(]J_/\O
%BlOhr3gpm4pQ/YmH1\V<LDt6EcpX.Q=*RRI*_&P/KcgL]%`E:uj?Y0EnR;s_Sl!f^n_H5g%B0rZZiPga`T3/SV6L5oc=Q$B2c`;F
%4GOH3YYHh=WhL5LLqjSlg2uB[$b]Z+6"[,@r31<t`Uo1nO`S!2NBupbX<EGO(kZibqW!QTGTI=='c9Z1a/!)]F_]BEF1WO86(%;<
%CU0jQ;8?.WR)6^rRjAf<c!u).+7is4fE!HY\L&gcfpKen>qrt2A+^V<8`;NLGkD1+q;S!?NnV;l2UG=oTlmt8_co[YkJ6GEae+qc
%P1\8pj"kCt+:^`5%p,6l.7%EF#((:9;1Fk&[kgJF7@J%%J>Q0lN.(tR<l=;F+t6j!Vbqp*E8e/\SUohZ?3$9('UH2;Y"Fgb&uF>/
%(d=*M+V$JG7P5qk!JKPEQ_^G__Ehl-iTf?2$HtK/GR]@XS&?r.?-Qq)L-(q9lN<a5VEUA8i%2<pS+.!F^1G\iVScY'/>^_HIgj.E
%-APtJ)8mjCL[.7kFpSAH&7&FrgI2lB*fL4FLqkS3,cCsd6$W#G$T;=fB,KjJ&o001I)m!2]YaC1ck.*AlU7l[0-d4sl;]tDj:\.p
%.:s5-4HmiSdo:VFlIZHcVX@@$)':lTL0hN1Q"hQ;%rNP$U;Q%+Yc92:\41,ql);$b7ZB@d`hr-bh8?7Mk/]+sJZ;.dOW%Ld<fr6:
%_T.=OKq5S\.uKW*#D;q?e-l"n8M]NR27BjPR]:%p6;6/=EiWk'"Y@0ZWR:)g]WoTtD,o-G7ZE,e2FZbg9.Q+sTa"_2LIX3Y\dG\a
%_cjK6e-7qCK/X?AHQ#ncfj]l"gqbPsUm(.i];pMQ\Ul$c=:B<g<=]<Q(_NbV#D(OC7Uulj_'^.X:t2H8k6$g31%T^:>Y<iW$<a:M
%FrTZ[[e)noCcl9^i<t?Kr@aNL8V$=MG&R]=1#9?V?Z#r]l4,mOR,Db0@m'TGP%WSL<=B;$,Y/0A2$><^G[P"odbB([Sb=XTml%/<
%$@@@PjtT#F72A]JB\Xd\B\XFRW0g1X:pshoK&R*:So1^4TDtOs\*:/%8(Me^MT61]K(r'#h*Y!8!.16bo^EW8s8D'N7Soi1b3^Z?
%=7(%#3doARSRGB!U4VnUD^;n>m`3dJ\'m?%8FbKTFZPZ'FSf@A'>&KRRg8Xk]-#<H7$N!ZS0r/<S3,+.V_mrV\&0)i))\n@8]r6T
%H1uCDYOrLpFu4&kp4I(+\=_"Ba*i:HNgK>+@JK"F>$d_:6oHcdDL9,1Xb;PFN)=J",8u<m8U7XrJg\6]8W[Q]D(X]-c0df%46sn"
%JqW'=LD=<tp*Z`=DlNNb]+K\RPp:!eC2ompG_4&jo::u3l0O=Q?s&0LAjup"jRBR]rmAs^(L`P?>`k)]n\?T3NQW`$@FJ3(2]de\
%-+2,mS;75D<[OaNfT(.E!O>)%UP1:ejt-d;)H9B5H=RF5L.4)DE2V4/?`:go(?(4'^==[].BkA1i@:$SRB'.pPH>3LUNoM<mU\P=
%3f<__7D2^dh<ft)Agf0d)hB%A5m"%bMIJCiIG7>8a!<19%3Q7F[buM3PDrJ.6D7qHla._M6W2752%EEkQrds9!1AMVqpC^+M@6NM
%VGTh2_)aWYf'&chY'4Aaoo[[L6OhqW=r[hdJ>XjcX20aMe8sP89VFO#_YF5gS8]\AE:l=8-S\a3R9EtpaUiWKW%<&-gQR`o<>gpk
%A40`W=EO8^bC3UqSDOg,j(p2rBSFR^Feh@lr^6h[jrLq*@b=5I]Nu65=lri-Hh%49aQ_bm6kQrbP\Mck(SLBte`S*;oe\>Y:C8NW
%&le%68j^89gPNNjqff`C=LRb[DfVN;U_gAr.)!cG'*qF/Q[s8O)I8SVL']Kl&jl$t7#@qF._W2\1Ob#Qpb)3Ge!.l6Ef%h\-O)E[
%,t/P<^KIqRkG:=4l/\h9S!9f11ld!d^maktECFkg31i,kE]/=/A&o*M3'h';Joj"hU:e$,;,Z%"HZg-Qlqs:57ksdugBlR#gO/T@
%Y,e-'j[X[ok#0tFDPFFQd<l<Pq;FsP!:(!E^#Xk8i(473_7C4;c*<(kGTp8lpR_Kq2P#TD0'+jbIm%/5E/NjQn_GWF8I3+`]0t0s
%#B5*Jh75#b.?GjB`T!+X[!!,>E%3c^.H0O),^sGg+Dc^(FXUgglE30CdaC*#6-*1[Q'>9R3c8\jL^6$3V:l:<LubD!np?TTbDc;:
%U0*)poV5E,dV4E"`$-Pb0,hT1jfE4fm<'Z+lhY348JSO*YG^/371+-/bZB_pC&g5aI1aj8Z7s7m)j,(sU4uhbIV#>5L&),P&<=C=
%Q.UfD<\qNF"QK"MjobKRRku3Q(Zuo"kGO!T1;ppTj4W&"Z,<%kaBlL*Elp"2QZB_00Jr23^#*&0oBL.RLhW'>;hp(M=Jp6@UEgW#
%")UFup5lj]OtY%pU#Z:c5)QZK^ftFJBK+0.L4@aT7XU`oj2o"m/A[#E87LI?JoPS!.9,9&)r^X<-gCQE#P$*1"WmGLj`l9gJ<qp0
%O@f*%nU2dU9G@dA`f5mIHQ;.e7@@+>YIq@nH`t<.7HAE7^2X_sbAPDJc:-Y\9aPi\&U!PM9^Q)\,j1:c/j_u#\oZ7fq9S.Hlm:2X
%G7`W28e(&o<fFi-FO])nU^&&beZ'Ur8RG/11?4p&9]W2%,aY"Y!XP^dMeT)k&S\[8mrT2F++9:fbCSm*.IgLkL]*$$fi_&M1fPYO
%Q4(fBOA;)d[kuq.S`Rp#+L=k0,QE?;Ha4V/RWb$%^r]F(]f6KYL$Yt/ESO!n)u-SkGF!=0`H)'<G[*@dM9O#mH&d\@7`rho^l<m!
%Ftt'D3P]Ft9G`=mSJK[W@,g0,;EN).g:7^nP9R/nlU^cN]Oc*=8_?5b,+TgDDc=Zq#'Wi<qWaI+H/^nVjlHn%)j.YF2,Ig_]*a`5
%4PM6(ME;oJ2r-(g^Zfp>PMjc.2p$p+aBC:7DA3AcXgT`9!hHVjE;cm(ZLaEd4$C=8Z8k+<o&\j&Ph\38d?&h.W$_\%f8kTU[s`=T
%mopn$G$0>KdWVOPYj^=<`&Y29G,'Rd;u1q"7.G]3T64GJIe^M%_onU_7KZMoj94<tgD@8Edl<</BLF@ui0.WOM5&)CMNbVW4jDZO
%eui"F_k=F"SN[s:YR#_;!M'7@frdB,8A!Iq-Ms?WO8A7(6+@g(,3G#[*._LYh0s<An*&d^r:(,mH%fN@LU.j4-YZ.r+tped=je<$
%'aOL\h5=4"DfeQpm"Z33l.ui^HC+&@F-#-.-(q$D,H#W"_J6`ApBGA8]>QdT;&SFDhG;:HGc0om8\@F'M0IZEDW72kTL\O$jL]N3
%KC^GGkLMd'G7*h`i==T)0&.njIMD38G2Is7nb&Aj(Z@"%79V#AD0d$PVb'1H4)hL;8O4,!`LtDM38*5_/NJ<+A<jVg"6=k6'JG'*
%`Z$B$@2N=1MHDA.!u@"a!/ALB7DUsg.73!I65lS%OieqmAg'L";&OHU1atPH3(isQP7gFu6"p_1Y#?.`])@Gqr<qX@;F$k18FsCA
%qS4JRR4(sV.gTM9O?rf*kQ==q`DK6!iEGPqSA[\b+fWiDHK>QYI/Z+\$1K'_cV0WJA_Pjg_ZCdfBV</F$5@'bM1mj;_EsS/&j]38
%TSbF+Dr6ZJgdE-(7YjCh3DF3HSPB9&aQ/;D=t.,lQ:FanY29FN0l2SQMM\i>V.G)CG%?h;Jj[GmV]?Q#8i27#dpp*P/l8:36Z%">
%+O_Q(rk*PS,IeAR4,Guu6AJ\LUmNT-WqKG=ZYNuU:p'AV$I',gXO[T5d%HI%@O&X[8][+A:IGrJ\Z)+44?-LV]UD)>"KL;`p/:Q^
%eOG?$MN8OAXMDN"&?2p,"tK^-!NMWe=MfppB!fC67ADt>6t1;C!E+tdQXAFFMFr<DX_rqMoK5f[+X))Na9tr-:d)M.MqWBYlBgT'
%&M!'hb=[mG>f622$Eu%t's93%a#p!+*u6C)56N%iLWTRDNSc*>[!<_k!H-%:o)Ro._4X&SSY@0AhC#[*j:UC&4L_b(bqPj8//\<'
%!9lAg'"X0AX^d,\TpQ];J@R@3N6X>\CuiKNqG"mA!@+VBaYk;D^DYB`TfE;H<'d'un[.?jcK17;qJ)Se75I$P!S()Tn@F<6#gNMo
%iP`9.8]2eaF/m$k6PH:tULZJ%.(/ps,/Fe59iJ%h/Z?XY@_pV.cW!?u5YpqVRUZac8OPU@P")\tefdN0?BZBkrP42@0i9hjjUoNY
%@p\=@lt0!k,jR1<!#^Q@+]X"%.mr8q*Hp+$&AWs]C255_5he)!^@p?pY[&e1Y6K2n[D]3M,^-&j*6mH5mRf"(,Qq<]V1P'W(,<<1
%U^S7aoN@sIhpuL080MTHh]>Ee8#f`M!KoTZC^u%QGjBSV*,52!;%Y8kaL\"'5rHq0s*`C;&5O2%Tf4l=-_Z2nR7R&[&tMXAeD2P8
%)<b)b:IB>@1'6o)W)6"HNba/1f",0mR0G_O:mC;g4Y1!`'B4Tfj?)=]0VAMZH7\8J=kffpg@1Z0rX[<hjYW#dO\XEQ;lNiC_QJ`m
%?@+e0brjOh!=b*@$,JrD-t8WP1K;jQKpto1CG_DH:>p9s\-rKf)J[&GarEo"M)ng\DE'1N\6p;,e.$0C))b5/8gINX%o[85ma+i$
%9VGS+)K8T$)A3m%6-@a`bJ>Y&n.J[_"ieH9#,M@3(cr$B41TO[@d:u9pgOu=Y.LHs2)W0(FOZ>D$s2$WB)q;nOF^B'lk)XR9>qme
%fK)9DM^$XdX'\c<:CBOK[unj6S1=X@323B7!^`_>"A0lB-_&2[#\V=^Z:\M`Y!VF<h2"3E*p"J:Q`9jn#g4`T;MJB%.%IV3[&bEB
%TD9q\n=)bX2f)3KB/CT=is;Uh]e`,*P"0TbRd&E+>fWV,C<8A+"_&YG.<S(I4d;c!YML;;qB/]X9deJ-;%100UfE@L&u-2n5RaFA
%GKNqU>V<'$Zj9LJj-P.u@ei6l]@RB"Ib)G9j>!-P0t5Kpo/-P4MqEoJ\;6ft\Xk1kQ\CRFI\$["UURYT'i[-fJt/s!AuRkf6Ue`,
%B?6EtJpEFdB?_6ms#.'m,t)g[`^ou<<QPs((8Zet5[hN)Td;rB`>?7Z0AfLF'^r-D\>%tQ1.6B+(F<9Xpj(Itb:&FZ`@i1LOE?;j
%CU8-B#WH@^i%GRL+lIRRL4NnMqpqqB[*V!RUo0_]7U&/V4/aRiTghlM[Y9kC.<k?_2(.[!2tQR:Vd#*&Wt4A)\K_HlkHCa.k%F)P
%%4G&8q$EQ6L-Ysj`b2mpdDY='R+.*#"nN-pl.ARk&lZ&N>$gVE[6.P>Pb6EL,BFgb06XHSo.e321l"j>N<7!/Z3)9bA1$Gf5\\a/
%5VX-H7$_j';6!?N"t!DH`jG7iNm,:7)J`6q`b=e#$GX@O2\7ZQP0+8(_8:Qu^cuAR?PPVoc:DIJ[gTprDAZ;Z!ofc0VHSBuW$XPV
%=AghY^)7#q)6ZHa(>S*%4b)*Tp=FZ?e;<-'Vo!+4TC26sO8eqIO?s9Aa^?L+(&N+!f=pk"VL</b@^O`$bc'A=QSt9,0Q_=-BFPUs
%AGpnH8Ir:l<O%FRJSYPs9B(hh';q3T4GX./lNE1/&g^TsMeY4._Jir6"Wa;6I=qBgp;N+9+uUJY5]`S,b<;jM]BM\n/[bskS7#o9
%"KLNJ'P^ET7M?nrU9/gLbo(Xm:FJiq&N%VgN$i`e4%^QRE^HcK![rHKXP%4JBK1Z1113c1OVk.nZR(O9ZiB];^PEOL.5+Bn["M+j
%/lG#O-aB=<6sQ?Q*Vg6PQT]iVQO9<cGiF[nDoNE0mY=s0AG2i^kYq"Z<^<kNV.D>%N&!eX)NeD8Rj]G>dt_Xr>Y2<reoe/K\!?qh
%I*etG"QCP#jQU>AQn@m#729]M$kZ"4DXUN`D4WpYR;Gbk$qL$,1;F0[`tBjmC4pP-<%'6Dpn:]CFX&n$OqE&m(^2U=ZCOJ@$q'85
%mkb_;R#I$1Z]PCn?q"k?&#]Nl?As;a?pZ"<Ke[)JFV@`kIUfT<'Bc&g(mYC@\ZnF_fs@+V.At!=-rk]IM?a>H<t[c]_-J=J^ko^"
%40fus5_8<[Ius`+l^ug:&e%$L_;TCI_8n71^$-LJ<rbcG'q)Io3Y3`"NaT-N_Bb&C^.qG)K)*[gf"ptj"pZkieY5l5)U([BMQtl_
%0:;t^7902AJTO8Pl%Jr6%5]%ePir0W'j8)+^dqI3Md+d<2<'-I"gIlmO;^2%AZ@F9!4c)#Tj\;%N913t.M0I/Y%5,eq6Xl=QB<CB
%0`).*Bd=S+'^mWTOCDR6,Y+V?49QO'Lom]FOHO&]jIO_UI@^i(:'hW##g,@`K%^i'D:96;Js1+G`Phc)3_%1=EY\d*!Xr\-gf7sq
%Bgt^kXcuJqiR'"s^-rVS7@0LffS\rf.diM+HB^d(?R[BZM4%2as/rlILcKoA*A+KsV`0,ZB!.R(<PV7*)?jGc'#^[A>H6*d5ua%j
%MeQ]9G-=.QK26*P#XeMZ!:oGil,Es$2pcB2FHWPGD4EtM\TACrTiK!%Op#@tA4N6s3Pc:/e#G"GN@#M#W%r4+eL0&.3Y)&>Q35Lh
%Z"QJ+'_Q<!)9*K<m:\$FTH7P$R5Og,)6+tG'36*<(kO0d,HFC&PD,jf26,:&]4nHZ0oQt#h1i$X5gNW();JDjn-KAh;^Q&`K?(LC
%.hD5U,bO-J"o"89E(\C:_8e$[Mn6H.cgKMB?JUh:pY[/X],>IR1"C,mK.+m73%R#'k3K>YFA>l-8#;'0:a#3re6FY_=f&_lV,\Pd
%D':SKp<tiN`fu9Ifs7hUicQMQf0l(,^Os&.A%Np"e`DlBRCtJXLcPW+=VGlqc0^0akMOg;;08:9a&%n:ofk^E<]0t911[jp5Qm24
%6]@L.``&HcD&`b4V\Mjb_.R1f0a^9*LQ.3"3S@BM6TBGu6,?r"iZMQ3Upd4Nig\asI5?Nm(%S[b$Xl&](6oaQ_a,Z)gC])7ottn=
%F@um/G:AuU.)h\7?S'Mng%/Yln5j%`fcC"Y9]["#9A`J*2Ap&dY<5IUWY,Sie,aiY6%gA]Y0G:&dniFV$JA7]C9u3.7;P8a2cTFe
%^;dF4bu$/:0e;BVRg6Jb>W*!VW]QoDYh6Q]O%+%i?+`hd9`ij--_#4BQ,@F,$'Za#,;@t0%<Cr\Hj$63V*6]f=IgnUM@?DnnM\'0
%+Q=k/W"n`n/7LsY9XR)g>t:`jL&l?]nIDrci)!g+<#LeU0-g)1D]RYn:R0U$*L39A<n.i8=ZK<.CkLgLkN:B=;MJ!MAT2)K@HeMt
%MkInfCjMl/$g*@[iBmUK03PjgaM"[k++gP0K[jq`B\)Y1gN7(G.OL5a$J)9+[t--.oYlD2HX`_9lKqC+9I"_B]OYJ<F$)McX,<8d
%<`fjlcGO(5'NFIf[#r8Km\I`FXSh_.$8CO(@?Y>,DMTa@<U*,B@%OJ!jDlthhW;pm#*e%3oHr@qano?g^CG#rQ9@O#hO?7Te4XC>
%N$6.@e9*\8Zmj\+i"+\#XOER:K/qHq+i1aGN)QLJiSYmN0FhYMns/sc5LPA",J.!SK#09Bfj^OKI.U>,N>pCTELZ2I.0K[@P$[Dt
%@]?&%Qt[I=!&4?*&*DXVb6$c?1[3_'e;:u!]r/p[eEElN5_kbJ#&K8g.>)uu-tF2E/R(FS*a0fn%?hP6oI3gNFJ#T+&m(ca3muup
%^iV#c`<_703.i$2eu*O%VmhX#H!ssS'18m6/6&GZ$4JA^3%BQllmieq3ce6#X9Z2rBY501)N.2>3UuXD4Cio9?V7cE3K@_N?5l(H
%@k-fD$g`gpQ(661-N=B`:gG&oUA*5t;:!P2LktUhZc790\qBek\J16dRd5d;'>'0bI[G#9(S*./+51.7@RWLeV(/F=aUht8)4b%J
%CaBB,IV=MQK@rYiQ_-8%V5!a]613Bj'0l]&J1kbZjKT*c8]?GP*QjINP]#DJk<cW[@LO#M8R9@)8YN)jYB=H/QZM)Vh&PdO-n).h
%""m4>EfOuSd/[=slddHBI/;mX^"D'91gHNmgP>agC!DF@rDc]/U.u&C:ra@CN?TMAE@pfZ71/l`3+Ui-%:Lu\>;XL:&-_I,hX5<%
%M6,+?kARjYk>0nM1)qJ+[pOg[(HfFjX$=EJ)Z_ck<Ba4Kih5bKP9unM)XKXrf>:$C2b0R..o&GO;Mpt^LenRM.#Q0o"IuMUd1IMu
%n"K>#hpI:\Hq>XlQ_W3"UM-%>8[?R9D@C-7gu%%NImntN=$<$JN5E_f&mFe:8^JXrLD.M^'pUbA;TE#]WhAb$9)#<X.q=i(!Z"_Y
%JCAm#eMi)3L/!mIZu)18llu%IP#&L*A/mWr%3WAuj'i-$XoUm@`+0k8[U0.54:4*;31@%,,AU[8IMOdRQJaH>+U!sD9W)dpa]N3W
%PtO%_;hQkPo;4iq%N:("Y:7?+<23s$8i;o>>VujUN,?S,7l=3)CT:5TB,OG(</h%ORl\6XWQ&V/&PH#Z0cj?u)4S6L.)m+*A>U_-
%>n'MW+Do$<5$5'nl!u$S>r*hHhMD[AV2*/kkY71Oe?E:p?rY@MCP(;'_pTBBe7fH6U.Q_6F\`%doSJ]:.S,!oS+[`7LU*a*&E"Tb
%AD]<aZXsL)?s'0r4&blo^&DnCCbS)j8O6ARL7,..6Ju38,hh6uV^\naoi4&hTCWjM_YT\s-;IK=mhfCq+HSjbgW^%CgWQ-(r@)0%
%edq%D^^leB6N'Qsq5kGoGP(e$\BSBi?Rj!+;IN?crJ+#'VmeO2<XSoR3/#DHXRu7HG2$,rKa;Y[,N;o*m=RM"Yc?XEfuW(FdlH5c
%$%W%9f)q[o:2K57lbifG?+/X(4S[;'X`0L!ZT,DRpPhYk$OLrq<LD@fgqKfbs-'\U4#78A@_V7,U<SB;"/H>S!'>,4#j_;X`YFIg
%/@)N&&:E@OiGJJBk='kmfUhah3;B,KY@0t<+>:dWcHRoVMhn9TGSY1)!sr4gUoi[<2mR]mS`h>^Ot1qd?mo!XHo[&4BQ(_BFJ&<_
%LsJ<M`BrVh)"g,$CJ":uU_`2mph"\:&@Ugm.l9Kcr2/"&o,I)MVa^$a&N7;L4M#rb$7,oF&&]s5AHL0dGX"+q8c[N(Uj-hmR&-#?
%mL0H$b-_pU=VM5)7>_"(U3d_:!sXo'J2XECG\3Vg?:6[*S6ntsJ)[t"-+82]>P+!B0E;#:e4a(02!B9*%qnW]cI*oLg%O(!43b7Y
%2J=\tGMDQa[/[=p809Z*Iss_$YsJ]B70:m:n![`$JS,\T@Q/G3Q@:m3Vu)bsmZkjjBm+_Z:^ffN;g]5.j!90Y$3`/n09Jhkbf#o;
%4L7loM)F#o-E:DU[#p,PHlT*rS(WdZ7lHP:8gM)+bV`'4\G@K_gfG]Xr[7[lI#=,"$70j7c-B#I7/P^PiFsrOglM"4"._p[!$4O=
%`)KVQl1`k:'ae((4WZ'g1'"*(0E/4Zri:V.?Sor+OT;CO#\<[^m:WlqL0,l,XNn\C72X-:"dAd@cu4_;>.8tCV`Xl[48`hIlI.fR
%A`s"Vp`0<u5u'FM'qeJ3VNSb&$,Q/-;ACfT.iPL9R"_GU@jZk-X2X%+^Iat2_]`"gEGg#4NcVQ>iJhk&c(j]]+-f+h,Q?#VJ9VWX
%[B^>0(CI./k$FItnP%#amlu\pEkU/]5k+$S'^]GP*r^V7e(=$abKOs#oHW/r&n#=<3W!pYBuE%'+\Ph:>*BYV&OuGQ=:7-V1R4,d
%W/+p1iMUFh9EcCtjZlZt:GksDb:5E33J5&4-Leg54M,bel[Jh!0,>S#2o^>ZcfRCT14hK?9bB^tNfGA]40HF"cq>d_,MSj\S*emA
%"g%u?;SW;;V>@%'g[5>1JDKI[oQT1J7XAjnCn@FN8W7l?m'&([U:!RaW7XQn4&SP-Uj[G2\3&'Q3#-uGGu6E>JRYP^UeoOY*!o.>
%Qf3'ZR>06%6fV*'g+;C$;)umG;A"F6j>`kn=Q<uVFG!JVasS0"\Tdr#!$FN_(tS<)#"6PHAlSrcBWW?,ri*.q6t*>e4>c=lZYLTf
%[s`b.*;Ylm^L+Ic"f"kJG?;n;\rsS&A6R9V!HY5N^bSg$Bk6iC=Nm*4DUf0UDB[H.SbfLu4,"_G\2<rQ#*!'_961W/^>BX6NhGmU
%>uuM@)!\ljPW&\nR`<B"Ac2YkBg[@E"U3O4jj7@CL/Y2bY3okSs'@eb(!`Mi(LpoWiX\9MLN`I=DWW=knA5$?@%9/3S>(!MbjSRl
%`EhOoG9]5KapOuW=lE.8r1R<hC"@Ql&cT?ds$);7-Z!eHO=Ji8N:B1?=Po)-:3;OK?,h-PSP$O6j7F+;^:tQGl5A%6%6)93h,L(T
%`]0pYA?'i`>Z1b1F'b1&r=R"=(@Ut,B"?9QG$<fG:nHP=V7Za_RiJW84(.k>0@a9sDT66#fODGFirjs,XuCF7;Qkn+^7"#S\/uhO
%DPe_dB5(&o/^(&anlc@jH!C3=h('&GHb7ti=V^/jAqjAeGMK:hhdriP4c$TeW6&q.1Q8+&Ho&RkWe$gKp@h!poD;^6=l7_aU%!9d
%Ri4H3n7?u7La?B92[&%mGLN%9QL&5V1;,1Qau*G42h^/`3O\\CEM4%aVK^!=:@VqB<uOBq=JkilVbHQ-bqct43u;gi\%iO],:kW4
%Bd:KSE8U#K8t$i%WOunrXS4mc$FE\m$b%f@^lWRb^Tn`n78T[E]8n1@oi!5!7Lpm,WMpnu1iS%)k6&$>PfoR(TThn]\4WIe(hm@,
%:oR&5f=^/q^9WXA]4!K\CMe5/Kgm#/G]0sl?+,1^Bi(mgMbhbLoWi@Ql`J<(!@!t/XIm\5Yid7M02JeOolHlOP&.QZ7Ua"!k#$dV
%6ilaQNFb`!_"q7;Q;pAVi,#X,\XklaJ/(sK88YCm^k0*iM="`rE"NIJICY(eX0soURJ)Lj8F"#%,8b`H$L3[F1o^k73S1Yi=oSt"
%i<8@3;.^u-lTT,jUD=<]0X)j==Cl;Xi0ULg2ZkgHPD?Hdkio^V;,q+*ZEIcVk$b#be5\e$/nt.hi(i*#JQ'pTBJR&O%b1e3!D$"\
%i"`,+Tbnh0;W/K-Q1&ClMk+[/([M;6"0e#W>_6-[J\F'd!g60rK2($m5VKqaE";Q;>]XSsES*<7%KV`D!G_L&nK/<PP\;iA<rAge
%nL9q1!r'JPDkEU,U&&"(.F/Eg0\3KB&D]#k2Cn).QWpN_Ih]r68BJ^<aQL[Jp3'QN-PId)2r'c#G*u6cY/o!a=p0hqd:cX_!7c%)
%n2Z9q!!of'V-:"t7FiSKC+*8nHmBl._;$?<<LHm+WdV8q=<)'A,#KjkHMGdDFZuo.,-#dERg&l'4QX0ZJ-NO$W<(FUn_[7IB_'i(
%dp3&PP7L.7V#km$+R>p4+9pHd)F-IA)IU!f!9T)6JZps2L,%=^9*51DN?Q#O!6q7-f$gT!+p/9D^,3Xcl[Sm2Oef*!I"tu8#e_8C
%^U-8C2[SNm!_hq^(goRll=fDA3g0l$=iYY3l$G&EIO:7`WICC0lr[(D[PLM$BWDZ!nh;'5m8.i_qq)G@@;+m%Tqj]OQ2OM\X\aE3
%W?"SR6HY*C23<KJdk<S?W\pSXC-_:-]$[AZkSLLlGHM/"1`H4f#,obLk?'i.A'*-`QPr]mJ2o;9!Pgu$*I!\Ii2ltfE2iqNe>co%
%WI`-@.h;0J"p?m-^+V>Ddm_fl],GqTOLJ#S*H7>VLc-PE*s-HI;[F^lh/6ES5E"Q,Y"[O$2`6[:=`uNN]^<fT3tk;7%@kO=%;8:L
%#cAR@+X3q9qGIEIO\dQbX+@(H*KBS,_T\^/:d'r6>hBs`#QRudQP]%2.!a8BO.U^&c$X7?GKcUq$K',r@$G/Y`1]_!c+NQD&!Ku2
%N\ZG$0bB>L?4Wp9dI/1(^=gntg0V.^8\Dm?Imtq-,muipHo3;".7DcV')3Xb;N&@J6e(pBQ5Uld?]@E0HnT.i>VlQtr@HG\'uU(/
%p/BLL0i[NdUm.mILioCn;p0@:AX,`is0<.mPg\)n]TRf-\pfC&:JZQOMJU9HMcOYu)Tj^a&JOpM=tItdZbO9C4)1R0+)g^C7f7`5
%75]q/gcqdRa4b^5p1\ap?qGfl4"=6p]FNoMZO@;IH9oL(c4!:skC5?Fr:.Q2dGXi=%'om51oLn[F#$,"WVA,rV4dA-:,I>Mbs1?W
%[CT4Qlu3U%X\4[7:%Tp&U,ToVN+\=46FncWo?<(>3^#;(=O/ZA;\FARi5g.'_atR79/<*RLd8lRh%V=KbhNqD1S7K27Bt(jZGrg)
%1RfpN&E;N%lCEWR#SJSeXMUiO%cO0r;i#fSML0PQl.\YVh&7#aAR>g7lJW7*_'iIZP(CJbCE=1m*%I"TleR)4L"r\j\mYL#X(8Ff
%NcaIDgB%*G.YF-dE:Q!fOg*&uD4R;T]rCSnr1R4I@K@n1n,O\]dRLKjD]o*qr9Sm#9pFLQF[+ek5Pi&d`dG4_o(nnC7=!F,K%jgl
%SI2F1U,RZ";7Q&8D:(*_NKT/2ne+Fd40IJ0J?^R:In)P)%MlsnCrDFMW%HYbQ]M/d$H,g%o4M"Hcg;BkPMrpQ.O\1^f$\RdAJ]/!
%E="Ob^At=l"<2eB"-meVN>],oIh6Gm@?5/@&MH9P6HH\$\HqPF]'DBS?$]*r4blmMe`'6LSWmEe?,WT)QnNcm#?>EKGh7)Hh03FS
%qZJS&G0_6Hqt]GOk:bNSCknl1=>k:,Vu^>'?/9'aIG:XdG,?s1pQm\T+-0*8lFY,)l`T\7VE"5hmt?11l+<Z$>MSl,8\$Rp8R2+P
%DIi;cQbHCM7"sTh^*A:ige9JO-YTm$lar(\l+<.hlar(boUXP0O%nM_(.k.e:#R8eC3rd%LJ:%i'V7pJ`ic\)_M!#4GY+Q>jf\)\
%*GPCl/ZQ>XrCu6b,X`VrKnh$3(s0HA4=pIYNNa*<DB3,9GD16&"(,Et*^'Cun"9AL`gfhNOV%V:>:RB&\]4$KHp$PoO=XMK_Hf3A
%ha5i26MFA!J*sf#prXE:&n:^f\@@NGMAmqC;9\e?oKW+Qk]oKj/j%%SY8#O1H!U^EQ^Vg;4.R(8i!P2W&\OHFp6a_EX/VHaM,&'a
%+$4?:l0"TYhsb4I`p@X>\9C[nOd8\=,T?T5]^'mu4K#\h1lMaeb67[.pKO2QIIg3CZ3_<$XgG8BRjZ@J.hMSdk@Nh;5B$5iNc0D*
%/FV&QF@sJ_C,q*8;HrYHD=F\@))u<>MhRQa@81O%4,_q9G_>uM/Fj]npd$i-!!_3YM_sN3l;"BH8&\Bn$&&5V.\)c>[r<2[@A"Xm
%6og\`WP_S2cRa4]@LmF&CsX=r#E:-1TXn$"<^*/j_J.MP9F[1j/V'us+HG`J+is%`b0pk!2PkO.Zn6eIWDdR@N;`bQDYI4*M(%mg
%SR'-GG^b;&WRT2r,/9/ZE!a7n+F$_/!+]oPHFZ#GAI>W@C-1CKITuLLm9K`e4^:oKhXe3-[sP5^p^PmEG<,%T;0sZ(=I_:!Mer4X
%VR@ELg_usB'dY*\<c(NQ%mGBF&5AtuXu&dE$/(l!jYGfSI'[@9-;$&C2'ksKK9D_HhhG$&)K\?e%!]Sm5asTR(6=tgA3p_(J-)Z%
%V>6l)d#f(n-8B3:[.*SHRIKk"^M!LN"9_5c"Q3E_K;jerbUm-;"VfuU,8Ol^;=GQge^h^]Qs$&VOdIs9=$p7A=R*cX<O#j;L`$4E
%&BN01/J1s5(9EfM3l^[\0DaMin:"uqHj5,d(:,/(,C7HT;iB85_'C=WW+#4EH[__QqlCq&#7aLEeDu2A>K2ce?r`aX=G+2n$qPUT
%XiFtI<-;a>$Z!(O""<,mMtOgn&@LDd=B5&qM2bR#lGQpi;+O5Eaj\']9(KX]d0r2nJdb)-hRaG$?&HH/hUV_Q3R+a(j>-d7bWH#*
%<qZsgnZ80C:!YRrRnjOdL;'gP-]QPBM&M8W02r7oRrL\9Mg"OM]+`<J6d4a&D7ReS7;-&"^VR[d;"'[gGlTl-=%c8pWj,RsMGk-e
%'ciKtGt8if80EI:X:Q.)'!Ph-.+E&kmj$6Z1ejB#$o_FKa0^0!!!MCFlK4-1irKY6`JS%G<1Lq2(<$TEiC!`EeNbE;nX3:JBZ$"A
%kqOXt+%3?#B2_frYO$8<*m8.a*YFW<MFr/6b6K1D'#D#SXn_b1"t)7nh"CY"L[n1Fp^GQ!=:D@lR;Y(b7DHTi)@*)YlIVjW!;QK&
%YVMLKb1m=#+GWDmFjmiCF<o"<fW`7nYU9*dI7PP'.Bet>8bBc2C^dSL1r-&\[K?K`/?#On*0H1PE[uYSK%OU_ZU5RcGeo?h'LgC+
%=l7#u=h/;&B=j+o`0>Xq75.?=R7.;Kch[BnCAL%l:"#2Z,j))M33gM_E`F#mfQ?S2LqWHPi`S*?FT8k`Cq;0t?"Tj$<?s'^NPt\=
%T.8XIR&WHsCKrHT-F&.--4a-VA55E!AA()<(M$E=,#(!7^bQF!B*<*[;E'Br+QZB/;uh)BSoQ53@(*-@YAlZ<;B/;!!'bPL&*;3B
%Yk,%''FkSIBsPAR_)pgneO;aii[6d2%[T20)!ZSp7t:2Bj:R?GVnph^$SYDSdDf3&-&oat`Zh!tI9Q!f!7td,WhtHj&gF!h@!QbW
%;69tSh5eX)b[EQuNs2CfZ[<8A'kdD)7!>9b.FCP?7lnCRn)!W,Q16l]h8=&Xe_<9;rE"(&B=21OFF/0)/(uGESrdP>P_CqFj;Wg%
%SOG&\?Nn[[koRb;)[a`"#g93LaX.J7N<p$[#UGs8K1ki"+_UR$.='T-[L\Y3,E=S?("L]*7]rn1;h]Lj`Si&s$R81d3?h2D@`So#
%R"CcQh^fV<"/3peNa%8mO!!iGR32%5$SPS;^FVYp'AB]@^hOaQ(63Ld2%(BMEWgbE%C]@d$']?lQhooJf7?G?ZZ"J`2FD*5X6LpQ
%Ae4JF%seETN8<4@k[ebp#"B;Z\rI0SX<K3*Z0IjVS:!@J1SLP[,&XV_A-/iJP^43j=]\[e;G#!)j%X-aB(h1g(2=mF`4diK`#Q,!
%3]o^FPMr"l\4[AHGkj<QL5_)s0:&8O^"ZrgEd/shS&-)p?JQJ+UY<#H?9Gbg2OA8[p#u[N@t.ajku@T)68o>HfA-*OaZ<SRXRU#G
%ZZjWN[K`/1LA+&N;?i,-5d!i$*.@\Q1f\X4QsrfGPAFd9UYg\]!#Ej=P_t-ZjAVQ9,KIH%*WDLM(PQi@XKQm>5ZtCiQ=QLIZJ6kJ
%@1s!`*ltiGs+.i\eX3WCDa@hm9=M7FC^?6m2>rO^jch=KV)7t:3A;=qOf07Y];gg0`)2=W6t"T$_Ks^j>*UBQ>+"(\2058N/Reoh
%SB)6^+J9=2K@5&oZ%S;g7m0O'*)&G*iDGq$ia89@rMt57o4_>O.rs2j9[gZ3kYALp'Y*0tJ54%_Jtf&rYXsEmkuFU2&`2O)Pg+HZ
%<DtJQ\7X6&T]R+/8hLK$TV_#i5gX3L>L!U7i6`B^,%?Winjbi$;!+m]Su$1J27Wg$,ppk_e!8-DLH(nICb7P#PQ?g$J,*lGDOlSX
%UVRgkdI_4Bat^!E,'(g@(.g%N:JhNDQ2+<LNEI/?M'5n;UiTXZ:K,k*BMQhF]+Nddr:\McpgNgZ(V&PtH%6En6mE&>Lb[OiA"f&-
%friOiCab(e"i)PU;3Et2Z,2(8)Xa&F!LkWQW+#?;/>AG7L4B"eP/!6nrc%:ga\`3O@0RUEV^.t9"@^bmAD\;0DJmFC=`cc+"k;ag
%pNK5O'IXr$X)V3H5W#=IG0Pnp"tf0W;5$$AYqG<M%\(Gal&6Fn"WM8+mOcL1IWj;8;R!%(@EE)Gb-6s/4['F_apVr@@7+9kKYct`
%C6dJo>@sM38(r^%iE5\!%gLEKM<-]i$G)Y:c-#7`g2^Me7?"!G3C7@&T<u\e/T,YYo-4D:1=g%Wm>,eU7L3H$2VSc?-<V9ufpGJ`
%MWX2;(YK34<h!<gd7[1+:_947e%7>Ta&V'jCK.&C%6aXC)E9N:!<%'B?>V0A^'e"JFNogj',(:LOSbt6&S]j'63mf1=sS*_fb<$U
%V.n4%RjSH87VhVe*?CB2lG/0_K.IM'>^f3s2RDR!.DC9'HXAAt5$sb9VbZqOduM"24j>E'TYk1Wff+sP13K9@3A'74(E)/[VX^+d
%a'6:SV*A=RUp@WISRk\Yq.M"A(drmRlg:koMl_48bW.OTA+=7C,61_;3(*[i#.A[[ku%kFL#$<<9@9[7*>i?5#-mI-RbUp8RE$ul
%)Mno6T*4j%8#JAo9bPY2PW>Dq5h3"_cNlt=CFC3q)M*mF;%/kZ<3366$_?cRWXRpVWf09<Kumr?nNmHiGtK1+QH>5j.<Fj]5*#!l
%!1F64>M[dd@_.BQ55G8oV)e%h,5<)(<DCQt]*-TTaZIW>k$:"TA_9`07\uD-R)JmZ\6f#+'CVYkJODHe/M`0_^QuEr2,KVoi:%eQ
%'T*#@;uM;J*Fu"\0J3'us(+DfKDSKiPqe^9=;gHdmkY-LnQ)_`3IrRiqH9sdbr*lj5us.!&$^F%9%.G22T]@H\G6s[b`?"oY,[4'
%C1>huP5hBho`<-.dDS^;`!Xs%4n4g8">MmWADWD@L>@QLJ>2TNTchj"iIt7s=dH#VbP6:47s\+TTmWPn[.]df7`7]qC2OfQ<Nm/.
%qfF2cSuW+C([1P#!_VQeBIgA5WYh0o2Q(WM3VGY1H[q-%imj%:,=d5T'ehRp,6lJ-nkU]H:PH&'Rs2l%[2&04J*ujO^Ambnl)Y(j
%d5dVPAgr%*&*SC2mZ)%engu_h(PZ+ijEFh59p2b4KF`hS69Y;&f*].AQ0VW(g0*q,0$r#W9Nd7l7_ZLS^`a*j.P_e5dU^G5%U!r)
%GpoWuRXT0dV[to?ERhY*XK?"546PuI`I>\4DZ.p@@fX,(;E+CO`[\d5Mt6Xt^K]3Zhjag_b%+l5SbsG6iPp4.Hkr%OjtIV_?Y5cC
%l!*a4cuV-N:f@b+nIbXn@<1+9CS;t6crjRkpKs0N-`i$fL\`s6q_PO#Qq:[M@3aRbn$QN\`tPM"0&#ch,RuX11!!cO<'U>q^iu6&
%)L,9]A"*bGl=A]_o3C&BKE)p!M\kp<:;f#keS!O:jg7rE__$8Mk<G+;L]61,'\n/Go]o:ZS#Vr=*aX1*ZOGoEhckSZl2d9hbg`MD
%B!/Q#I!9&jQR5<uY9?;g%MH?kC9'pbJIahrL3=5M(GSn]$SVYJp>Gf[Mq]Ym9NU6=,#YR1.m:;J]][(p@lU2:,,Un6*[EmI4:W:+
%e-usU+BCh)MJ*"ZeV_m$6Ykm],QhVi9N0Pm&B^`1l69o+T\XqA0R0<g:X\,7OTHe[(B^niL@%iLATR5_[96d[mR:(N$nFVO0]c]t
%oHG!o](J(T:1J3(VWmu;8.?k4q*8")*-?YC9Zoe"mu(-$55N@(5((++'C7bcc=l4OJq5j57KYN2)!&YL(M.*`PB\f#UVkR+B8a"#
%RF=n`ZbJ"fVW$lNUn[._U@0-o]n%pu6J`!n/\3U!&8OFCR5u]Tng)HJR7UcPWtt*m_`Ml8nCaW-p>P$D*^BS_rkA6Hs3(InTV>+I
%Ef%nicIt9%I7"-X!6R,>lm)2edc%"cZT1f#EK^mn)gC7;l1934%Ljq((Cl`(N!J<,m&6*=f>f1$4WQCrhkK!q3+8i57<gVc4U?@>
%(KL#=O[fjA(f(2NdW:]&(p5SaP&d1b*6"_I7\7*V+8I<LpC5BAL7p*eo3Uoq%FKIKj;nDBK=G=i(Np6VjHo(N_OJf]/JR#J(K#uL
%%Ck^^:0>hgZU)0s!QdNW:N"a336lZ5PDepB5LDrPSJV*?hX:")B)fpVq\9hseNcQ7OUYqZr^6hrMaIN\i20GYVORTq,uaeC9'5H:
%:Y(U+p;)[bIV)d1%-@!_SBbNpA/Rr#q.UY%^FT(Cc/%B;!$]'Oj4e5cSdZe(-FgMh(($$?J-;%Z):ibhKd\joa.e!gm3`KhY)=dI
%W7RS!_YNtj[XR6^FR"J'[h-X-I/cY)<=]nJgG!uTVAhfG$uaI$T46KF`?)tr=\cIilb(;WdsY!/:2&LKIF3Wi+.]m7r?5HBZ9S*H
%X:*Sg#`p)"7VKc[s%-/L<Sa65b8GA\cf[:Hp8%;SFdn>OXZ&QoZ>t:-V=KSq3H'PfQhP]E_X1Lh7I)jR7c\_;#l`lX/CLE9fUeqj
%M>^RP\39/jB\c/X4)T^kk<B/(K4BAdKHc1X[O4)op8%:(^Wdlt2f=,+Ic!@>1CD!4h..q1;QhH"_Z$@sU3.DY`V7-(1gP]PdAl,>
%cb!"(*qr/biV'5AU32rA;7)6XBSqZ@B+]D,qm-Rl@KW.HEl.3Hk=+\p@.5/j[i5U-IQtV8g*(C\@_c=+%e([tSonAHDM)cXcPeCL
%TfbGqGY$Nu0NJOJcf_VM@=QjNOl%La9K8B0,$<d8\BkqBI+8+7TS/!&5L1eQ#G.9Q[u(s4h^F;;d2nlM/uQ,UM;ZkW\3J@ipEuQ!
%S[UpjoY+68(A73S'LCor57nITP4g7ajo33iZL_*&NH0@i+sZc9-[)3d@t,[kU9X&\FNXQ=k@NDM7bZAm'/n!Q5BsK])9R?_$!b/'
%p'34mm=El#gTAKp\=c,lO3aSCZ/2&WG"\t7o:0iNhKde".g3ts'f9nZPkaadX<@NA`(]Q-hk0+sq\.<!c<DGeEkG=#[Cl5]<WaB"
%DFNp^\384gpEuQ!S[W?g5C'"tjdmQc#i&:h4jbc3[O4,trl"E6o2`b*^2B1dlbi7R?pR9^Nqda=_G8G!*a"SbI[\ht?=m:bp`*<P
%Ut,jjLGn;)KJnp4Mt#8U^)!-3[trq-q$;Ac\MWe#NjRU`Za7\ortR'fMrXZ=bG`)1kG7IJ]b>7,gk<@!E7qe2I=Aoq][?Rb(M3KJ
%441eBH)JV*fCLmqHG8[WdGi9+ZE`gm1_)b=ZjsqF]^;d_?Zk4=S[s`b*R:3hBDB-g3p,&c2JMZ.eTmo9="_WBIP.A:W:N2GLg<g2
%ADQiWgMKW!Ss2sX?F2#0f8WNKI6MP8jj."F2_qLS;)[NU&XSM<n$LTkot4"'4^W?gB^*4$EiR0<\?tIFVkn(1kAC(jq5X$U9=+)O
%df?n6b>(%cZqQ>BH(2eCI+<M;A\7;n\:"T0/kbE@PM8^]j">uLko.=[BpNUhdrmfebJ<_]S/1%/dV^Bq?*eFSN6R?$>,3N_RB>d-
%bH="#Zl-VSf;tGm'7(mnG4nL3`q[-gZI[>LD'o512<uU41"Zc0pMeR9_cSj#*m"/MbtWJpB&-rW4"'!-Lc/-@f5X!&WqDn<nTqdd
%mr>pW-fO^e2MsMGlQ45B4J/sjP#']2Rk0?e,]$fQ7PiY>h.?DrkE@e/q<=>jPN?DKKZt=jBQ=&AVal5#Blj0DY$!\d_1RrU72RqO
%Kd##Q/4snGk6ti_r;0[3_B:47Mj8*8$`L-ler$u-_6,@@o5r67A$+\78_>4P)pQ5f:Ed'"YhG#QUn7WT\meS@1Te.TMG6+u$?8qP
%'K9rlaTLe;g[NS8OM^p!r6;0",M9pO5qBI-="-dHZu:j\:\2-dgg@hfrqCa88R"E!I=q2&k;R@srjC'fY+$CV+YJB)*UeT];8.A@
%)[[c@=0`n.K`+4"2<u:fZ+g7/_u5Bj.Y6;"@-6@G[nX%X_Y0McRWT;/qf_X2RCCW5!i@kJQ7iVsH/.Z:NoM>M:HG[^2lVON\J*C'
%*hH>u1j=d3l2k2D"O&(V:HG[^2c3e#]+O&2iC3oLZX*^1Wq^fp65F!ZdWs*K$'K(:4Gkek&@t"21sL%1"(`qYg%W8UkH$2b*=`1!
%fEi]ApW!u-!kb<HojLACT!J^WK<B"@9tGK$mY$3^gY7qGhb%i7RXSIpE7DjP'K/=O0ArmB%N8&UV/"//4aM"nr-Na0p/5o@(ZDEQ
%N,W(_iVlSEmp%5Q[.X%1nlV;7[6<=#g3ik9-&^&m3!n>tDD^+--25^`>/G::e)uY?D:Y%VK`1LZ2#G;Y2N%mmUGb#U\n'W,ES=":
%fQ![o-&1e>MlY/OD4LWRdCRR`5:9l$A/icgid%#9<mPDqkP=qJFdjZl:;S>=2O_aSo/95CS^6#ceFQ,p2G;VlKM<S,1m=BkD3eEi
%T=)etkDRo.Q39E0j<`nHOqba3HC(Kgp%,%TShF8kEKtYF]rA,.LRW1.f('?K^h^':<F,GW<=Q"ICZPZ5mkia.']*W44%g+<n3`l?
%WdPj!o_-KNl/fKi<S*eN3=5[9M8D]NN6me)n_7H,C>-aTefs<\re&LScC_aeoCuWF[g,-g#`dH.(AF@aBn0P=e6;A9A0"ZC6MPFL
%Jp'M#jC,YkATN:3bp$scJ'sbc,HeY#9CcDMl<Dh`rLWVToo%F-*o?1iqu.`g'sY.i+<o/6%'GE]Q_5FQ)Xn#[!\0=i<B[d\/61*0
%nDed5o/_Nsmmds/1K^?h9'%1[6"QDB62J2'$ZZitBg@>=N87)PD.^'i<CV^F]L/JR;&JUQ0d?cd7%sMcYh]l&-&R;/:aDLo]DjW5
%_&`e/g^/JDC[,n!Oo[-N:;ft]:D6E?V3?_g_soFjl5HK@`o1mO_M=!5keZZS:5b&pI2B"(P^6fCcbL4?6m'3mmke$d?<._0Xqn\7
%BigBfGj0j@(FiJp1`bp6c,2`&K%%UU[95=+C7QM)Q:]>iSf!kc<to[`dN!a,;u!+jTfAi5s308V-mYRD2F$b$R"j!*#1U1s.Te@O
%pWuH%lU+7d4qFe)R5uEDrruDR6?`7YKD+"=-kRpckO;u4+/>T`mRGq,'iXB57%<l`aCb&`/^cR&To)\c2NJ?(*3)%#&[KsiidM-r
%8fuLF5\a$rM?H$0!ub`p`K=IaU5gs=o7o*@gWBsqW.mSI6HdhtH<]tjVLB&s[92F^7ZXM$!fWu=%C!Hb:ug.#+!(,=S(bQ)j04El
%n$h1FD.G;C6;F8dk:?rlR*Zu*[:5mC%ni89gK2Z4gd<:f@e[_r!rn#M%E?dcYP+GV$3i\89!^i5:@&s+S'MZ)n4-'t5EHRdm1EV[
%7&e&iFtY3X6-u5\M$Rbt2^">?A9^%,G`@uPWrQT#Fn=tf_o7cY+XX4+1ia3Yk.2C71p!V@'PR'r@HV$r-$E<PX522JKughd&q&=L
%F2KB;k@g,nb!A]-_5UFhlsr&j1;5kjT5jQ(qL:5hrq@qs&D;^:P>qCU;D\;q=qD$3*(pAnOdY$\,rD'&`.3V9UF&47;>)H!c`o/&
%%`2Vod[[=<q5K+R!JcHJk;ouER6!/i%U2FNWK5l>&U(r4o3`F,:u1@8r>J?3@;W[.e-kOO"-lB?>J\EC'Tj/\U3\jHhga7k3ck-s
%SIBK#quO[BigY(JHNum5R\i[4ABhoXM=t?[L"9b$nYH@=NmL?'%$`LXRRP,4m8_]aMki9(/hJCQ5\Zjh^Q1?=/?D%Z;a^S@;uf1>
%`9ISU6m*rODTWV$+&E64q:(TbL2+kNl%='rHcb=b>STHIjEA+3km05ViQ)#p89([[g,Z4TFV&bW@ja*#=F9WA%F(dAfNaP()\M?J
%KN@VdYkUPAQF,*Id,\3b3P#N**>1_/#[a0`Q`DDB0B0=U+u\m8EV.7)?*Hl.eK>ndb$a`9YX-rAT?b1b2s0Lb!Ao<QX"5tmeZG8\
%'H^pfAYFjc0B_48<QuV7/qH<imr[BqGdkBb'KmCd7^&*W1q!Zu\:4APqe^]#7Iu^f1uDJM;I/9/^TWfuE8u8QCHV9^YFkT-[#?,1
%YAk0P4g.l"(]Ms,pU+T3S+IBF[[o^(mJGAaE`)aa[f4@oRMq%]$f[F`oup%.`[M$,mG.nC-1/*Rj?5$/8/:ct=>p:p:<h+=dl?VM
%\4f,$Y^Nsk0&9`@jNne9?Z8p"[\%jYFgq1S^f9+?<\(N4mXJ.$=1CgGgA85G47.DA^\RQN&%hN.-^-^mfB%%@b5AU[b\rPa3Mas]
%j^:[oa&CIJ"ejML74Y,TPM.7U#Y--AUn"gZ,W%iP)&U]Xc@]`L6(*djk"_^cPRINu((FK*^Q8WcBdafJ&>9[\!T--4Z:flKcOVNg
%$I.:Y1*T,rDSdu=5'e%E0G!B?L"#l_OPr*J7%R<kWQIeI`+G0<6X+d?-@isY7!5_Z/%li8>EX=i<((MCDhS\g3C4k*fM@%'^X@B<
%e>%TY[q;;pW)ak1bM6h$oU0dFGF48m7_odi/2dq!F(uB';Z^A0=q=YPO-0PQ1`FkuE0<(uPdKK+E>muidB,:g%&&r;S0[l#:0H&K
%Bb@#@A9.(pV;`Du66IprOd,5O:<\N#OBJP5k^pB\cFkhT.rHcRGoE.l!+fZ6AG5GZjo/,5i[=V\3?!j!ip?d*m/RaG),*Y+HTloZ
%>GT#N`jg-,\VLhnc%F:54Yhp(Hs]>OKD\=EpEEuRKQ^^&R%i6bXn.m;@*_"QXl$&/No-6*j&Ikj*j*2r^(2mig5SK!^CYYPP8`N>
%/stMp<%n>tTL%=QCu3G-'j<b1ii,P=ZjNV\@3Bdp446i!Y?tJIj?-sUQNs3!:TKnF/\kRjVfrKSnXE1&YbXNj;IC.>AI3qaD\)uR
%F=V>QaCV.gl-ZiIakYMQMG3<raG)G+e1j7ZW8Zs[MF`PUSLkX.;QV.Alg@MCLl3"KZQd!&=E47m3c\Qo3\m<g&k!7/P1DG;:j9M7
%E$[M'e!-XC2g,bdR(EiI1sl_^0c>b;L;:G0KR+n*6#&&/eI'M1$C/OOQW+t\*%("!*]eF\fLWubP3@lH=$UJ0+$L6X^07s:k>PE#
%!%IiId]AYWRms(Rm3B014QUi>d7Un2r!3SlVF(QLGa-`AQ(1G/#[.O]#/!^1$W9N$/^qGp8#i(0lO3e/cbZNK.pHlE0<.nOQG[+/
%MP=<NXSG)\oY7(L,s3!-JY@0[c^A$b%'9@\cULc`&`AE9_1*l`L"V>\3o@Ag)mFt2.VL+/UJ65mXFL`*7KOb?VM]=%rV(89"AU!d
%>^^MkQ'F!LA*2[.7!JBXHiQ[%R)8t`DV%bN3WK7-Q9U>-U.0hOieTLb#;fd^DHH-b]!%"3VA(k\6]AA;/LL32Cs2;m!UW,UO+iT)
%OIHpKqU43)O($XK*7V9?@l6:O*\3mQrk$i"`F/hJ&2r.e@CTA)Ms)@NC28^E,W"sP8]+Ub2r(kcrE42l'DB?I?XF7"pc47nB`X#O
%V@jG;r,/3"]o,?a0U8.`Cd<D)5.$(,'()>=F2dE-DPj]SrjSjXH4U2'U',e`<C5RW8Y`F8S5EJ*WM%5!b=_I2@Ccrc?<'Q:ML`;X
%SJltH0%p>bH6TIJJ&bZYJRm&>1O+;^J!cTDUuD>7'Yf.trY)TWHH&\sWKe4M)/-ISJnWk_%KO(-&1)$%0I%F?^<ukVDFo+Ja_CH3
%64:oMd8ZH8Zoh7^X$>$iY'kV,RUXiF,5,])Hc96IBU/WA+h2X.P9LaD),RU/9t[%fap.kAGc-&@YFflQ,Q%[Gen0`<\LCr03'OEK
%)-kg6kVlRGR/m>?s"YQp]dbU6Lu_=iO,`l3-f.kP"ncH)<UJFt:UbZCbPjP7ej&mp<?P0RCs'dX;qBUTdjeCpahRb;^2Oi*"U%0_
%k1JCXg.==^p7>Clo.i1H<-,BL2XI<ZE"j:GUK_9#@iZBg^b!6&U?2E;#OEI%Ddj-Z7JZL<P_E,k-Yf#f:Zr=Og*MK/43]1DL@p1;
%@`!ZQ-Qm7W,A\6D>U[%D0^>Z<\@p?U&g0EJq1Ar^Q7a(G8hQkF7.RtmA>JBqpq^/s]kJ[KC#2l[cnhVu"s_&ecW0NIEQNqJ/R>,?
%3n5\NO_X@$3pFHC>KUrITO;Yn8lqn_2LtFa4J*BY,Ye%&:9WJ.Hn-Ac8q5<"AZ;YCSf'*^2#@,#5C/TmpE`nb\#1MSIUd+mc:4`U
%X]<jH17D)ub5B@G(C$)7lV#f#G75V;=ERae*A#$CJX.MWDBMrHA,#V-YMM::$5)">R%7i#?)Up`\IKl6mAF=fiTiV>Z]K?cFsV[7
%1dEg2_ZX+&euHZ1/nb^579:Ck@ru7pF_sN8OYTDpR2lWe5SbPQ"Dam(HGt>T)VJt`gUk.FmiqEXVJ6@2'u(]mR(#g+>Ue4DTDHqC
%4hl,,R@)@I9UA6R:cSM!p3*TJGSN%c9UP`uUgiLG&.ddjF+Z&kd8mJNM<NSs???E:3/YCC9+IA/J%aHOh[b8e5FqBIPe5"kXnJXL
%'oB>%Bi<tNH$%"C7\L8dTHl,RDtKAXOdaW>DaBR=RVb6A6]S1dh<-GOjQ&+[&J;o%mK5\Z>RY;f$?b7fZ8[N@b4JHZ$J-j%<3;7<
%idrZ%01BIVg/M55O5l5D1\e+3bG[\rIZa.^^R_GK`pdZoo"6d,Y^=pJ)cL^QV'qrTI'qnmbje<MUf'Y'4%!q"icF.MW@0a2jLR%W
%JnEs!o62#>C[)Sl^Yh=jh@LMn`[l5k=p*>S]9fLlgqE9DCi2"W-5+Ukd#P!27Q(u8BgSHr_n=#k(rJeL:("5H<TkV`8eSsoY')4J
%qs:*kWb1Z.o!-H?%\f[B,k9k;bG8g%L<=o+*bZ+&[0^!0>!s>0:mo(/rM^]O+"S+_hhA-_`Sse<qL:A^<B79g'it"[i>S1dOl0Oo
%]>V`j(j$LEi@sa,,+>0[R6`f</5W^+Km;Ah84'B%KgJI]@A2Bg#FSqISo6X)JD"P^L8?VUXeebsDQU`?$h*9CLVhuQcQk4M8r3ud
%-aQJZaG[T5,.D/G.<OI+?uN5_;"WqtTo,>3BfZ6.Sg!1iO.$[RVE<m*XcMVN(0-E1c4'S+BJfNuJ,[.PL4RD;),VR)bVu9=UaYqf
%/`YrC=[sEV6ON'ThFq8+1kTHh3Q$cpD39Y\%!4K0i%nP5aIO38Ac<oqh'9(9-<+"K4!]i=d(o,Fl4uo'+?Z%$p>]T:W0fA6CDj1U
%Z"6(K9"T0WJ[:&tY\(TJ[RX&Y@4X^#lUjn!a^G#Q78RLUN+WWN!EHM#S-?6j]H$F^B"UAZL[$bMRp\TnP9URnRI?u-j/(:i_/LUo
%m>SLPXqNN,pk^ho(9g^MNfZCp;cN"W%jo"5#p:[k<K%5Al-4LKp&ulX]O7`IirN'[&I=,b5Sto/b^IGr8$u:B%_8s>hFB;FV@**Z
%s4\9';uh1L]<lfkL^Y$"k>X-aRFm]T%T!^dJ%,0Q8<&(ccC$mqK0(4fO3b^eSjh3+_uO\NlkWg/17"<d;i9C,66V7UU7-sW(8YVK
%m),`(BPN,p=spZi'rRsadqnb<U^GM/=ca'o3)2C"F=Ga+F!J7M'9?Xg>V%aH\M6m?QkX[8ELj=$j&/F(QYN0gTf=3A[=#h>AR0)P
%i"hE4@3PW3UOiGuTQC5=G0/0H.3oik0iB$)BjU;6]H\<(e^==d:Ii\Q]i>#FQ`Sgco1ZH(;\d<Pe/#e04,'3AdfFftRT(/:cmF)`
%UQi+'5DR-4!Co4Er*tmU;5k1NGV5tiLk7jmi3OTFm$\P_mqR_LcW=(!8B//TSskMP;OU>HL(P)N3O"bT_o]Jo_fAX'Jt49$J6u^G
%a@/HHPn'eu7Dcc+a=(-pfi"=mmL$!S1V81bfnfX6e3%ZfA3_fm'Lt>4jU3cVrm*SX"q\S*PX\2d'k_^CBiJO(^2SZ`ce)46,G<1;
%*&_i541^4*MfQ$idWCkhe<::A/osofE&<e(0hVRM4;k*FrCak*Du=m0ns:_=HntRd8UECmm\m5>[h;N)"FqH+>9Esq?6`p:YS.7O
%jL2gaRb&/cI*'<!<s+2%XO+a-0,pkZ.adD^e31J[CD!_X73`0%$u/Ln;KI>F#+#kJH9^1q*,Qp.PD+"YHLl>t5&?el!38V]g_3Ce
%9I'/P7F:Bn`Dpe;oMUG=OiQi2psX\97*u2X!76MoB.Ot/Z(Rk?Zam3<SR;R06Y$kNR#1):)3U*#W5;l9<na6DQn]WkI;#3tjp&^A
%VF`AU)DOa`b(B#!VNp=V8oW0i_9cSi23_N<g.*(ogJet]]K*PUpTE,DmMDK'T$8n)ZH%(-3@<"HE\-/L8)6>d:_nRkOq!(-QrhJ3
%q'froEC3YZ1l%d!EjPT/ebDeta&2J>Xr,$u@>`!TpamBeBr0)'^n,bHR"^BCAm[5o&g`2mh/!'iUhWVp^SK['1RZA0!W!3YPS''D
%?T;%LGIT@@J7<t%T=6PF6!\jjk?/N[0LbZ@[bi!lg4_/A1S_8p)_h;siqbHHQO-MVnG13L]\1I5TTGhO=V(eT6(-HH8;`=%chuZl
%UK9t)9CFe`qN"4\ME-cnN%u9>-jM_Y1rKOgU1.1SA[aQ>NRf<=TPhH=h;_!ZCRm)G@C)r@cE4d1?"!2aBd=bbl(mk'>(9q4J4Tbr
%Of\RpHm!AG>(;28p?mR:.n/OO>%g98&Y"PB.Bs(aA$%]gYVZbJ9>dR;RX?lm&Ad"_&-1g"M5do,U*H-n_&<!AmXq5'e"TLdY=D:)
%O'7Bq2>TkcldQP3WRe*gZVQ)$@!4$Tq6eB*J:3`^e"e#dPP+CQ2@?fTC/j9L90+srp^/jHCM`sEnG$Gb!bHB#N2qG2OQ$%]b\cb;
%-JKa5i`gkh]1O&(.aKe[&bm02`Pr]:.p<)^Bd5JGNc.g.>l[8igH(3%59fm3'o88fKU(=tplIhYq,?98r=ebkX%t^qk$fO%,As)0
%p`k=VjhuefJK_Ui^f9ug<$n]8h6$uNlcdkSQFrf.598Y\luZbq<)I.-R89`n;-"cFUg!<S^Z]cM#)@4[V#R/OV4`%:f:;k&]"M'b
%f."jAZC*:s)UJ?bV81a78"T[Q7Ift>lI05he^>,DHT5-mNpWt%)@/.u0q/cdH86E@4D6f#eZ`MC_]7@.$4h8#<^`C;K4ie]s%5T,
%7`"(4INk:a--DQ\2\O.`g<j[&&<)USKfgq#/ZK_CmU@s`;pmD'J<Zm_#h4Z>Fubf.5m$(]`HC9t"I=3@$l:=8ra^d6AYa(P*uH9B
%%?blP,h_RInp(/fj7tLe6&nHTSS[MRY"'E_WgY6U+@.1`fIS;2QnOD)Vd,R>f%'6krlc@]?)TF[PO0>K`]kZl.+moF$p/1M%F(&Z
%.Um0o[B=6#.-.O?4rG!_o^NT[*7GnrAr2:<#@s'Ad>g2S8*Y3-J5o+4DhQ:%ED+/_3aU"<]858m%\nO[LY3GoG(1o1oRiXNBh?f/
%XP:K&`8QL'6\eu4I1i7X?%Qf-rAaOfo?V+omS!)FMI\P_f)FE+'%G&DeluB-1)5o[$3EHNrD0ip/04`h9(DQu[h]E0Eji5FPNT7i
%#'/&,7=;Qt<t&6cM0t@XD@-D%1`H7cA92#SI#;$oKBjW?Uf%%Jig99))Yf`DQh*-e_V=co(JUM;]T:pXKg[]EG3b@McZ_03[.B'e
%hh^THf$1CBIbLul.])<ob2ZJJH(fFtrmj3cT(Ji]E3#f");uM@E]PL[$u[Ee^+BJS7:@G,1JF5dfuXn]NYs`NX&J/C+ZF.WH*:cn
%6q/7CWZqY#TH5>?#8%GCpl#cA-C=u!+-Sq-@hZ9t.?Rdcasj;a8E8N^BfOMQ(d+sP\:pZ6@[#6U3.TG)^+&N<&]2bYc-<k%A:I":
%8/uS\Gm$PX!E5)2U_u"N@CRtQ%P!4/M@fCiq(u>F,\YHHmG8l!6f>Un/]H$^g1-!(d'^%fF]9`gbMR")Qg!lneo9UCjn\M^2#_Mr
%L/+-lC_C6<a6c).!.%bTS]V//s'r<B[P?3`+`.Qt+SLMK1ms4Z*QnFA&rO3J-*)diRrM8d!J@S<9mo.]nqRs6Islnbm,Tc_b186=
%rD.n7T=gbaghb-5ct:"?FO/RQo;c>8]I"kui6"aciO__n3]\+D>pqq&oT0l+P\ebmpN*#cmLdo-=uC"_lc)Dn4tkku-m[`b"OB3e
%-B$r99gYQ$;?UE'5bSfXP[`R<804WL:]'RaC!o9LU+sUM6:j)c)e&si$Xs)X=qn%]CrHE""G&i_%NG,HB*Ge"+-3lnJ-jd#:9$@3
%=`aEj,X5u`dhJOLZ3Ug]2mJaS<@<nQ]5A>#0PBuWP9QGO#r5"Z04[g1Q4qk_)Spkn3S%WV&kXKm11*upH8J$`YN>$G^::W2dog2G
%6]8r2;a?H3lr@&C%Z;U`V)tVhWtnF2"9bAcAk=s.M^%$IKpG)7[N]:$&-HJ\mmaCGTb%`,kX6SN$BknR=Y6H-%Ec'%S]<7o)d,9E
%%^WhkWh#!7n/;lHL%#J'7_TdTH&tXPU7e7u!5EH@XcZ;bjdbfA"q7S"#4sao:n9ag7_8r",)!1=Rj7MA/!U??_Ptts#afj:K1`8m
%LP]7TmKKm'90<QR#9+U(0bAt3f[Z:'K/*%Q+otQhklH!)!JM?rK$Jii:;Qk^(kBa_/Gr$n"<!"$QknBEH'/GL:BGmaPJ`Os\ECsV
%/>=8R&2mSV0i&I^>ubF0XVHnjK1U,'aU_=q76F%<)=c7V$5lm"'NOs^egF"?2oXSki!YYu0lT*7;93qYd^DJGN%Dg;:aUChf49mj
%DIPRRl^>BnCm`^^TYJWM.:%cu!$eKKH]*PH+=p3:4")=0Y93mO%/uh7;[GQnV]L/0iXNdn8Ya!BW.l>TU(@P3jJs`"J]NfRe1&%U
%2e&Q<#%F>l`@4ZKl2K6egHskXPkD0A'n$C^q"$g#/g42"#j$&-((XTGr6ni(:dOclQ@\9fbD_n78fkR-'Od4<R-M4U6"3ej!p^8P
%b(>a=_Y8>A7R)hEs/`_`i@=e"O]j;^'>GK5%8'"_Rck!<d1hjE.0(P!Au,#P.e-mD:dmab_Bd<f;E2S*qkOY.B`h7$`.\X0AAGpN
%L2L4MDD7bLQ+9PqA2$9e=r/VD)[8o5nq]mKl7AWn/pdlr5KDg5?j9;IC:1ZH24/X"E=f$a/WsS>c;+OrB(mq0^m9-3":lbk1<pC.
%U(0seW$NN$e`#[Y8<T>O?o(Xi,;`'/"@[.JZ:nGX<f&%a"$E7c#[8a8WKb]<$!W3HDRAMP=UACBes/Qr![a/t,gD6kE9%9(C&pZV
%gb:_T,?O77J*u"S'4pnGn,>aY>2bQWC2QT=o'E8:3\t,=[jU"f*i^-@":tq@FmhdN@Bh/VBWtO!EMj4Zo<n)4\17UH#+&+'k5))0
%;&;sV_:+t4:Nrg634W:+Ude?^</ZSRAB\R>0jGbOW7mag.GAbC-/$+38#+%25SL)LBdM*Ka:^Ap460*#\fUWE.6nI8,hfT0AL+u9
%/ci#6)7UZ"Esr,9%t#L9XCB=<eNkT1i;8+JLaJ9hF:F4(\JTNh>_'4Qn/*X3lY`mLB0*gRQCpNJ-Y5TZ]u/1T`tnLQ:bdUFRqITL
%@f,U1#I!aL,:N1]^mm<-?2QEFlkFpg<t0]LfIu?n,nu3;UP05>%RftOF1<+BKuBKc>+(c'="A6V/>,K/8a(U-g7V0VqI2LrU:1G1
%/rL/CBXRb29?'JE=<'L[Rn_']@YS0cnMaLtQIG-fAeADpJ@3taNZ_R[!uBNI"@?)#*`8FnoZp80*fA7l!4C(o=>=Zs>GHMMD()[u
%"_s&W)A0bs=WC.k,r"2Vl`a(F2eH#FLEDf^gfR5P;_.(9q!7Ohi*tiq&XB8aB]\GgC!##&MR"+`.=9@nMIJZ#;)^Qb3p`E=)qmQq
%hAe,K9X#3+-%_T:Z/p#7Xl-S"fs/UIR4T1'0UIp'9]SLHh9DBM)nf3X1Bf,$BMfIi9_"[O=ZE%TL.o6EG[LJD*$qtu2piV]DTo1Z
%"E6>KpL>&\fU&47*iT0nFf3,`D0m[%Q,G]R\VU@255)RV*",k'bq*8H[MW_bT`>*U!M;=n2:!<=Kp:!A+n0bPQN(FfE0'Q&n>D;Z
%bh(kd1Jsm"99*u2NYU<4mP;u8ffk&dq&dh^LOh#!<i\:04@_"9bdo^&/i$_]$qWcJ/^8aC?IZKt"F3WAV&<X3=m;bLS:+<MJkm3)
%Lknu`CLs[,@+\]ulpEIaSNbCG#arailrMSq]@3gnb%aO"dX\O%)YHC43:5`?aC(W01XFbDBd>NV+aHZ9?V+3VULe^g'K$:4riI)o
%o;dM.*\`KI0Rn7B5gE.hLr&-CG2T+fdBf<q,cC,Kq8S3#Mh:0^;[FKVAlb0cU8"0*b2Xi/$[$ogVG#,o$b2:/eV53dg]kUi%OsT+
%H7@bjQmkUJNVo\B+;5EV$J@&H;;Mt62IF<<<@%n(0&SuSNE?g6k7JM)^+4>E6(Aur,_@fBmQ>dA1,]V285ObWJ5?&1EZi0VPa0B3
%)W'oG-R0*Ph4ZB,e6Yo3SBVG?YfIJ*]i5ud0#k$hH4%q)ZHQ2uR'Ium;8"iM._I/DjoaLh/u1]Vp:C#I+5%XB7]op"6eD0(_4-bk
%e3^Xi.4W.;3q%Pqeo*Mag.slf!P<h),`n#%m5J:7a*2p9jnIHjI@WrfR1[/neNO'"c%?)>GMELXIJ]@H)1HMVN\XW2Ci?H08P37C
%l'N/Hb!Ec,^5samQLh65>;j_TquVQYf#%)IQUdqMX'S]LpA,4[jo1"<rWKnTMY5<5#N3uQj-*89NtIY(N!=rT:l&8d;&"_l:GC&T
%=Nh*#/B.'Im'=5W^'2nNVZk`W1L0+js18TMkm]NYef[Eo$pr=+m7Nc*&!&WIZ'/I%(rPH-L<Cf`ik2SL&Kr>O^G2pMMER6eX_pOG
%(n][CO+0Tej]B,89a_jT-l&O;R[!rmT\U5W>neW^/u!k1KcrQdGlCP5FY#m4d41%n!QY]S8QPcp@gqEKPIQ_/Lui48-r_e?1BnMS
%E<AQ3XAS9F#`@mmY;l[JDQN&o5i>LF#9EG[%"fF1&K=t`A5MLNL_CM.R^)1cddcNm1QC:2c'XD8A;<d\U_s]$KJpWSU`!smVe2a3
%=.1kT^Eb3Kdu=KHd>a+.OD\=nAg(O%l<\X)*g`/F8LW<Q!Kjf1.EC]p29JcV+=TfS'pN3k0a<ZE+p<Ql#o0-R]f(fl6*tPkmB^6$
%;=/]I^,:6W]pMfaW_LBo]3Z2'7=iSo+c`_OK_^J@o#*jJPp*>LNlU9[L%\Y(TSt)9"n2[OXG;!tK'RUT-TI.("2G8E;6jkLP_P00
%>FQW2]EN&iCtf$Z3q9r+(.AoUk`iX"qBClMDJ($3;NQE!,c-E0nVGNu77/IA-(rpJbsR9)Sq^ei&cm@@)*>0iL43m`<mqdeZiHoI
%-k1i\b'1gs?p$pNED<1^*%jrL%tI_r.r@&L\#$#A+Uduki7r?l._V&@5(TB=,qXI*Jk(\<M4^Z.RdCDAH=&URreHI$Uj5)k7aq>A
%U?8[:">E0(+B.88;'Jjj\Qu7;NQ)#7hs6%0lR[oG=WRkG73CIOG#E*3n8%aAC`2Lf5o.m\a;G)%Nku>_Xr02u`1juFkM1[K@%a,)
%d=j4t/0g#hUs\_fHsuQ\:^lbP;ufIqeM_tmgB]9/U8-Di5)G"e-l#LCGTbl_.kUZWJ"+&]4[N$'@@*sO_EuSYj\ajIKTrb+/8'd_
%Y]sS([Qc<LQrIW&)?FhcC@@7m<#=9B@)\'2n%;i64/V;HTU+!$bTpJfEmE&#e'9=2;^=1Wj+CEoh.olMUe$cn#;GLQA<+qTfi5O;
%OhkddM_uCKOk_*[jcOI?N&KJ@N9]!mX3H&i6AhC6ajXB*;JC1%Gu`.,0qZ$Sfkk:idjFk%$c>gn`,.@uo7omR5dB=k-e\&Xs+2A1
%Ri:t'/)lTsVX*CcA/N(.`*WORc9!cFGE[ef>62)`E@WHF.WQOp[VV]1Q"I,6X\Oa5#sB@$j]'OXUG\DfQC,^2/28HrjGm.2>YPHb
%CQI:.Xu_^F)2\1>Z[$L11+4H$T0RlBKl-(8-oNOm@L0ja9u7K"RA<fGqOgPT77I#&R:&[P4WTi,+!-a7Kdp&d$tTid00"h',>cn\
%oj;]BZH^kXCfFED&[J9U`_K0CDW,/"Au9Ib&@*Zm2'/lq`YBt]Q38ckR<6/_nII43T0HkY/K%FB_m7D?hXnF:O'IFQlnS-D3"YZ-
%80[QG]R)0ZZb*KD87@Cl9"L5i<lbiMh("DK*l7r`,"Tj<m3kRZ(Xnu'qg<b_QmC'1H4ZbQ29!rZ9X7gQ.(i2Ga#MDQZ>p3&X&Q9G
%br[_V5,sLFObaO6e;_A8NAWV:R#?-L`m]34`.@MN`pAa.=th*O$`7/EN(P8sJ%:SLn`+kc`k"p?f1CNEGSm\2c`T//W`!I2S1g$d
%Q)[XA]S!5eKUp_*?]8eUd6BKr18(:VD8J:FOg.>)g`Z>3]`Q7pSj\$10_oN`+`")G:I#IL2(j-*N!<\`2l[W$AG-kc@\;&(N@BZ4
%n^QeQpJMT_FCSco4NnXUj[dQok_,EbgQFsBGSCGu6rpX%IcFKS'p@?U1FTgcO]ZC(2lg\a!YmhEBQ'gbKf$2?4j%/Efa^2H<8fgh
%QQj(U7Yb/5,07o[kPgqf*SATTp9bR4EB+r&g9'9]U48fR`XhD6Io`_cWnorIn];+a_D'n,Lr,1=$9PhKN^U_Ud#Q)_F$kf+1E.V?
%$T-GOZ[>70>>3^TJrB'S+PfSALrf<^@;<@446JqXD<ig+#1fef<8bGo8`0HNVgFLNc'g2oMiq=^q7=',eP5HA^APTWmq*mgd=<(K
%>a.k"K'Kiep["^pl\AkgTC,SB.R-TF^fj#\qL0Zhj\%MlN>PPL(tZd#FCn9k_*7qd)V(eHPW'APMq$28`-3FI)F/PL-%$E\IfGC*
%]U='jq@A%)+KCWE]0F4.L7qrMcZ%&'D>&UQkeGC"lWh'hP2H:ZhgY@FM,f[DrJC'kj_,!k:4J`Y*'cMSe&ae6,O7blQ1sZG60C$;
%]Y82)5bt9VADR<RLf&4i'/lck(0ndgUZb)k`/^koQmeb6-V!F%59KObUSn-rrqtsRk8-L[NuN&q'ngb>;1BCAOMW\:UC*TM'#rJK
%H9:`%(I@tP;$GU>e)$'BF\pp1qCZ*`?3GcWg[eHM(E!LICJ:T,0>@HR9iV<LO':07<t3uQb7>$1D]c[jCHot!<r[3f_XgEMhhZ&l
%G"0-Qn7e(.^;O);fQCqe7JjO@XF%5'+)L1sS,^<;HJOlNpNnJTs6EM;(g!sJ!";NOjs\DXATk%\dCQ#hPB>)E""p&XHS0APN<uV_
%\TYaJ%l`G`7PfEU/H#$2F#JV[o1&nIkG?^5b=`(Yp%imFoVYIu#+"DR!;G,42b-k9:r>]Fp<E\0X)>6FCN2urA=o@pl4>+Ac2V<[
%c%d[#W)j1D9hjG3@.B7H0JL$aVh)+q8Pn2!gdXX^+E&GD,W_CRYkZJ9]Rs'59rU"#WIbR,C5t6M0U2VW$[IS@IVG]V-o!i4N?ZBU
%,#j]1&:a4CR<8`-HjL#AVLAohE089^c!<R1r.#-o#f4!#U0<"3>H,-EOoT!1e?JBVZJ<3+RohQOf[b^/@DgK%G0g%6"u8YSFQHnV
%mfotD'[o2p"!gO8iF9ql>njsGCt0%:@iP-26G4sHmJb(3I1Ulg':F^3AV1>c%d^h'UJ9*WQ;oe$3b\@8V%9S)mDR[poN#ro&Z$[/
%.n:W@c+14g+?RmkTIP+Z-0o$Ed]F3/C4s&#:bhs\=UDf9rKN_B>FTVn+O>s3=",lO"T'2K"d><?W%*f@DHE^MlDqJk$>P0c(-jcX
%0U+@?k3:DGr7Q-G5mX?SoIYW>':=#K/5Vg0:Bq&CMAaR)rW-A<nCQna/hc@qe$!A70i(h;%^dqUI1;8)P/TdDi6_MgZNl?jKsP'e
%hXJ,bN@Mkh^aTT(d`A.#6=$kEXQ4CLmitBblp)%+R^JXUn=nM;%NFjqB[<?'W\[*VTeU:U95)Cp5\O9!!)6GV6\GZlm15,_Urq(<
%d3c:fd<V"u8/@s,ZmA)-2tGa,1HCm,pOF\X"+hZeMm?f%eY6'g.La9cH)opW8E(AiXrb:9E(a0-@R7U&#6$=:nC(anX9jUZ#`pe,
%;=IIiLJ\nPJ1)CphU?-f4@N6,:hbfe41f*0Pu5lIRQrV?m)hMr6%pX01g5!PM?l7!iOWlLaNhAPRUtX]Vdci5p00>0JDsJR9@/MR
%cYM#F;XTQ]$Pl5oXM?IsO@54JbOF@qn;#lS0C!9d"4B^G]5-CRb(B%.60opl8hqCeks<DoqL55sg<rCV?`Jssg*olF0Z5eK46sd7
%rH<pdC*o?ST?,+XX)X9hJ7'Wd.sqO55Y.J:ZBs^]QF;gh[Rh;n/<Y11(dbRgX0.jJL+R;-/CTD]R*i5TSu?>68I-<dUVf]8l+9hC
%K,"Ha3^nZLQ,l!sd&:2dp#)el(g7=#j;]hf.*[,5d"1q6O&qkd&>VUK]@KiXkA?l\ci?_]L@SN@"N9M`dPR`X[d^'8:5[c7[Y5DX
%4+dI*MR4O9<HSeZ[C!5UP[Ha,Nsd$_'8?;sb:R.0W-M7C4G^nlb#Am.<AR.L"PTDEL&64$psEY#V+$ZjSdSitH,%<1ok?G_ennTA
%;n`Oegm=p=%i:c>1998aABPl\Ot.2b.AV$Roi7_m!k.-K;W;q+psEY=UJ-OPlGd"0V*L+.W'VsNf6867/=Mf'Dk0h.1i2e(*u9<I
%R8L!\K_)XVdc4O/gQP-<kXn:KW$oBT:VrZcR4`hnpsEYJTrn@'NaWEmX`[oM*oUn-Z;pNTjHOJF4uA"=?hi#[RHt.#m81FV[4kbN
%X@uiX'bd\W^I';XXq\K'>i;7H[48:Y%i:diaVL_lD4)ME:@G=TMc#\CHMT29gtjLYd&5P5IWX77)8c!X(6\E2D^UV`ctB2P]NFPs
%0Ap8G'S3!3VhL1uM,ImK,n'.5$esRiiM@\j0Z6s+9?fQi:if+jU,7iG[WUR$0qL!Z.6WE6*J6MM2f#0J(c#)_H=c\B<"Zf@(pK^;
%F'n]eR4(c3XeYI,kJB^_8op;lp'DZt+J+>`9H#:e;^sJ$pN7Q`(9(8(.L1#^aqk*u)LP?FL<#Zu8eMs+So5O./P;9QGL-W[$ccHG
%E7mYlr-7*8iW7WZ0N@"pjpQC`CCrJgq+`@o?Z$69]$)V1lA`/(Uo`paZl4OUV]78.<PP!jK[KI8[UgOcA-AaLpI3T$H%(pjWF"tl
%:/"#p.?/?&.63C[YjeF2S-#K)%eR/jU=[qKO_m@c9t24dBk8V-hC*ec;XV9eUW]/o/$#+Zc@p$4p,Y0,-%)bJ3E<1VD<0DoMFO&q
%VhL1uM.2+hF'6bo$LL[G"sX):PsR?fb#D$I.W--rGuCRnNgea8Z'X<aW4[Fs2(47'#2M%6I0i3HPKG<9L/]%6<*'J=0(>tl5U%Zi
%X2P0@ldsf365?NZLl+EBn,aS--o!37dhu9L5D)hn\N'##E<[N@Ao4C'Pc4*fTRMO2m:W82P!ZQZjbg#C\,N0W>bH>#mT;9)ShI](
%e4+CVY(a`;W9[E\m%`]0/hV#m\@5=O_SU0K8!c5innhB7S-uZ8p:8!),?s60%PP#G3RsZuiUHBImdVc(MJ!=1Nn)`YE8L1!brHj]
%I%/EkWsg'T(Bkmpea_m4h$7"!JagKj'=VQF>btA3%@bh%58?m=-GgH9K`Z0%3P-ql]PO>G's+#8R7ZSL7&nB%;/8`tMC@rUPNtt9
%"t'5]m\@t:7:b?ERase=2B#W`$P.dN;R8ALf"oR\!YM.q4q8%O\ZPbmZBGn)GAo,Z%(#;q)YpC(:BAJ^:"bQ<-qTY$a1giVCRd^u
%PqZ@l.W@Qk2F]j)/U<F%R;l@r%<kDem,8?D1,kgY;[AmCW8LZPF'UPT(66,qiYM/\'-WjDf#<:@7&QDh?:b5_/pt=uUdT,V^D:R9
%8R*UTYl'uZ%F&Oa6FGStn^*'Ef6qb/;s5>sH!`NqjP`)Z#B8u)W:Ns1!t#>,od9o/qC_Lg[qkVKP^PEp8j9Y_Lf3fs,G,h0""iTn
%4s<?f:.aUINI"t*d7$e2aYLnR=_F=O=\`[4]USb:^c/?R2MI\g"GBSAYjh1gNH/.Yk.,G[_UQTrT@N'2;$/tomAJ_gM4WaUiQ%9B
%g4HU*9>=Y.bR9dC-EZ4CkaEthF&&r'e3rcZ7VN'2jU:*PpitI]$0fP.6:KF".)foJR2;,to4m6HDM2_#eq[fY>ic(qft7gJf0ocP
%no^B6NX+3:":-V[bjA/n67G#Jr91GM&iGHa(7OFOXk2-GV@Uj,lK53`m0JVZ%6UK\r35[cbD]>R6$Q`Eafs<C2.T]U(U/UViAd*q
%#l7!sKN@OL5J$3WUi9Q$!PC?!i(]@-'Z%Bn*WpmFNp1;3A$Glc:dpX[T>%3QD'fDpChurJO(0r^4GXc;/EE/'njQKWSH8C,i+q%`
%O5cO87d3)Wl<;iBM:;8G<PPWEFdXT$6g;K:R=IR92R__4#ZV5c=eVlO*%hj,H*1*cc!c^:0h/&HGT;SBmnaL05G9m@+1b-U0!.,n
%&/F%M%+,eSh%r7]G#IP/"RGJZ8CMYQZK1*[J9;)D"hB=ZK`";rUQgOf+'gcR6#k"?IJ1+2ELU96/a()O5(`J@CgnrR&sWXbU_ms>
%G:\2^fgZRhj0]AQ\`UF8\S"dX#`(@'M*U4Z#j*2bepVM&#jR/hAQoB4Q@gE\>GLdqZbR9,<J,p<]M[be[\nh?Q\f0#p7R:;>A0c5
%>BC!"9\gsl,,IoK[8U&`PUq]bFmmL;]$)V]q3%>](02sFon<Vk-:nZW!^6bJ+ic\+!-n"AnAEFE8e`36[4lA+K[qS?dRD>F'a`-*
%;`@=J)ORn6qrk$\%\8>=WCU:;Ch-GD??/h6=]:#&7AM&fXJBD:ZZ%:LjXKdUHn^q3X>KHjYflMpQ06FV5gB_taara',M@T@I:gH`
%'9,&p_1nBK'ob1i_rdMR`<a!mhK/'&QWKPQCX@"h,f)e/V1kUR$5>(6>QQX#d%FP[oN0pILc-`k7cBn8&<Z6Q@@DI5:CA6t4"8u4
%'lFE@Z^d2Okd?gFhd"G0*2&jsDVP'"O"NLC/WR%ebjrpQP',4g\)Mt%U-YPg0(;=2:B[l[@H$6XU3'$KG2We"$fuZ*OI`p^)Zcl$
%)ZU>cpA_UG/hNA/7hjf!oH/CSV'%;G\[2SZ$k;pI(pl'9G`W@Zac($Rs*NYlS>bl1>urWPoUW7k]b$!eS(3d,q1sthEDG=!ApJ1)
%EjQ5"JkJ<9Mf-;k]HK6"^"H;d(_FBr\u-4SYoFfeeh$d4fu5%eKtDb>kKO]"\>."k6<]12W8#cl-#alKQ<InW)n+R83W;_FCW5(p
%D/WOXTig@I=B*g&l_9Z1lsA5MjkXBAD6>uC28&RfYXF<0XC8UQi<a+&qiXTlB6ij%>h;d*!K#-QKpX*5qD9Y6s6^ri&INOkUD3h]
%SQgo<Kp,I/cc,b/0%om^6#!:b<l-,mn*TI)VR@#lB!PG"TjmBZfZjoCj\ub[JIb^8Ck);pAUf>"#I!Qb^-$<DmpWV*OXuj"gH]KH
%,&0iL5=p"0ZZIF."ul(c@BAkFh^VA2O4Y)^6MaT/r`qks5$#@$CXRe]]q.]t2<l4M/c2$/\!+2lh;b%s5?[R1.m37YFhbcC9/45+
%#]C(>Zrq*Q,B!nk7o^C<RSK@\('GQn$g_D:Q=egiZ\D`1UQ-@)Q]a;%GM0C>:#\l*B&.JHlr+/sgG2`8^VCT@214HD[tI'UY>JG@
%H5aTE2Imeu;Smd=.&tG7=[TJ/ESDkQ:&JYmrB&a`\2N<,5tb$6adCet7eq;UT)?YT@o),b5@GE600!B/@6fK2'e5"VMSu5Fp"(P1
%<Y8Z?;Ku65goX3sVa['IY@62d[t2L5;.\Kt&I3<&c%0D*o]';.'#=,:nbGF4BFMZl"(5+HS/PoN-,St'+`&AsAV_V#>j+$*Bi;Jf
%B"ght;X-_52lRLDpfWDj]Q<'"J;t*!Bt6(NjQ.PM?V]4P1-iY\8Xlj/@eOL0IC/;MN65GY<W)m-m7'qX<)FeDfauOcQs6Ru.C7g/
%PFVCI\tA*'d.(V<<TF!jE,Ih9O%/UuaH+*T/!kYo-n3MT/mQUX.b/3hWmG=*@SAG8re9f_]g7(@%.EWqK^<&n1eU8uE`S>*1Kf[A
%,aB9LAL"JnrlA;&B.TK\MeG/L#g6j^X;4]=9&fMPh&Xek+t+GA>F<MDTr5I6kX-N^W8pkf5"Jgu0`g.4S#70*QdcR@hh5VhOC):+
%U]T?`c`VCM?-sBhiIWK)WuC-1@52.P:">jgr$-pAZSmBuSC#Jr/Tds"q8!)-6"j-cp?\4m>B5N>j2;8EW3TAR\s-kX&]d;[RVE*+
%A5-hg6:=*?dE,`e]n[A/1><`#fV,$gR.@,S)T9geV7`*#'<2hB>N$74'tI&(":!g[Su*4UYYiO?0V4<A-"@O:i_Z;Nb*#/hLP893
%-$?Jj;$XsKI!)rj6mk@AXK/E+#=F*Lfi1-\3]CMm1^']ap5*LL8\Zm<qed[t7aC!Q';%Bn+X6,cD9pXX-e)F7i(eVV$(QNRA/W2p
%VcA]=$B(^(Dsl?\K*RC[8+0U'P"[Y4r.Rrk'6.W8;Rtp[mA=Dmio'q8;:ab+"nm-:H`Gp$GUS7O#5Se9]WgIdA,i\mL/04kJ&&JO
%V:FU]H1m4FkbIBe@EMoHfp<JiEKN@g95f8qeYtB9%$cuTQ9VdFRqSc&Hdf)P8M!K,3GohE`YG63DFtL*1!Uk'8#:q?crpd98lQ,j
%QPCC;2ok;?p<8:2l)eUHU]'nr-Qfeb<u6)Ua6.t@=<AV#5#9m]SrA*&pO0<%&>&TK]^H0]c#MLJ[(0F]K&<3%0,J0tpC>bKOD9Cb
%'Z4FL[&sNfTipF6$9[[liHBn_H=Wb=>u:ds^5Dk`fbL4LPOkUk<<5*X!DY2-ibHeQ:=^k\%<@IrF:+Q>P\t3m>%jn9R>tDuJ%uG*
%3\4.=#\1aG]o=JH2-7b0GZ(bFS\A%p^J,L.@^8VXEor4rf@*fS])6P5M&J\f")AmiUW(Vr9X0W7\lP?%BuSI=5ARL$q!;kpDoO.f
%Hs(+=0ES,JIAQB/b04l#f%>?GR'B*AI>\G#*'9Q8%ln8G1e-^*ZH[J'M^p]W?-AIV&q<e`/HmDR>L3=FhuEN$[o+0al-&K>IEp;V
%L/FS><L[ZtFd"<lr^RnIJ]jaH":jk&@MkX#<!DngeqquS'WM0".^5@+pa@*hTIG3j6j,dJ(>,X\!sL"t.cCATM&[nG(_`Td5\>`*
%,C<6gaTpTh#c28XUs^Q$#CF=i5Q!jF::%brm1iITZ:0J7g9Go(fA(ruJa%\_W/Si+E>8fG46p.hU3]!S_Z_Q^=N(qHJ2g\dMlM0g
%?_3t3M0t]V(K\O`h&Md4Kc/%^VfE=UC'9]LWCTuEH[88>T\[GH\3[)>XQs&,TGTe/,]'_Z@("$Ho'370b"J9rNo(7>B3CK!)*Cb%
%7HVklEE,:c;0UH[Q!-N"6WBQp8p(kn@1EFF<9&jP9b_$?o7Np,KqPDEI/Su9)75&hFCF1#?LN!hb\\/>euIEp4L0fZHMBV``-USf
%Zk\^ZUe393@j561ABqH@5HufVGs"86akb;%,=k@05[U*CblWW9[SKD8(H=7udIqJklsQ?P8W[_8QHdAYI&=a6.T/]S4HMa-D04^Y
%'&1d2rCktR[%!mEDO<8m8iX7gr(G$p9A8a`hQAJ+"A_GC/J!aj<VFsVlOHE+TD<"W9iC/P^\!I6$Aq2Lo<d>2Y.nih4]@V2Yu>Wd
%`Z]Oe)OEdYeV*LbUSMIX#apY9RD"muYIS=i:9Wiu1U#U"&*IeT`^a([\,bho6ou,["F".+W$gO$+9*RXl'&k]Y+^ZIRr_VV.jHqt
%$Hn4VHD/cVO#g:;`I<D<-VJr1--3ql2t,?FKeldlN1q=r<>\##_S)8m9HD[CZE!X.1[b4+Wa*sCPAX8=38N"5F;;F3BdqOjIT+X&
%R`L*@>KCGsY/'kU2`PpL-[)!BI>f@Jq.sr.A7e&B,2pHgQ&\KjHEf\i?@rI-;-a3F.$c'LBbnlJ]l>$$WV2-POjM]oR%T)R>/141
%$<d6]0YqSQ35):hl<FSaK)g";D-A6gl]4,Pjl%^$G'IWD/XXEg@S+A[O=\mQIsfS#]fC6SCpWDq.,2d*6Rh>m#B/EW'^u6'$e3LJ
%r`2"[T_q\mggKrSqAp[+Du?JT-teop_K&H_=PW-Pr1(eK??lN0kS`_O8Ib;2LLcQUE!tr79r-g-?L6"CgHFP'eCuD"a7c1#>O`a+
%]7t#gKOf6YR0g#Q<A5.C85nt"$j+%.FZk<41lHJ\Cf@Y&+`;ICAr4spd)@Mr+R,#'OtKVIHt-[4`J8XRd-SW=?L#kAf9@jB+N09s
%U*,+n&?bYGhl_-$Y*jAZQ2<<d(8MYO'_#LOQtpp.7%'cT7%?a1CT)>f_;3*8F6ML]L[ReYc'N)1^gOML.k#5Oa([qpnU-NQFS7cs
%%b2n1(]R?rcR_F^kmN(*k$OY@X2Y[C969N9/!_I$<^dI:)G5>Wi13T8"K&dMmsNiBmF0@2jXY)$X088jDX)0"R@L`PP@Lm/E84oM
%09eYNL4*]ElZsm]1-qWX]_I*JW0u),koLA'`H9H7aT'Vh(,(''B2N3?,OS0-N_PZ>7Q3m5840G9(RL*ZL+L=@8>%n'Dhh,-D7Yms
%Hg3<&F4C8e6'TDb*6\nMFX2#ms*&jN6XR%q3F7*VrR!LWPF(<'q/4=6!c#u;QA7=jn6V#Rr(gEQKoCT&7hhQs#BB4:6lEC7\'oP'
%+SJ[FcimWDM.kO\qTkpCRk[g`Kr9_E[8cE4gtt[X;Df.T?&2Xh+st]h>"_+)1YNr[3?r^L/V7\89$dQU<a3s&R;jZ>*MW;WA-;r_
%OfI"i&Hg<V5g<g_=XBiS?9=eOT3/PR]4St:_)Y]\[C!XQb6rsBc>4[k\?2(5?&>9^no(`@eN/sY=<lHu)C,\UZPj+kYC:"10!DCt
%YO[h.-U3])QbWpj.=k/=>9eMP@!>I$7?iR+:o]Yh'!$aoEt`G=SpZDIOt?+)#0g/19G\Ho*FtStR%FsUL4jpX0?Pj.lrL]Unnnm"
%C,u;?cd./ZOhKAT?h%=VN$_=-PZ"tR%"^)#'XBYNC,T1kUBM@od-%Hn07GmcmO#+-WL]g"K+aTuU`.c1R5OlFZNPX(B[HQRgaMWs
%G-f!KK-93[*)fnOYm`&iP-:L?aiWnC^@YsG%n2;]TkXe#Db>4'/6/9W1[1<*$%9QD3XnQh:=AleEISmE>fBpY!L$SN<!/BP4Sti$
%=(a2`i!R:E"c?nko4ZshERN'ggGGF34S[AG3qqWSVP<P_f-:8.i23=Jo#A1t:-0oZ6?C$2ONi4^i&bYp-3cT3'q:US!sTUf6[.aB
%AXL)`3nt-1UT!7QR3FTXP'J/L,"`"GeJ5u8@ZTG#F&7&W%uWK\=-n731Z9_CD4BNTS>()>goFA!mo7%^G5U@p>StK@8@*psFX^s3
%m0c>[HqN'<(k9J(U<b/@SZX9E,nUKAm3M-tJYfE[MrV022W3K*W(<dDnDf'C3DIo_cgeNs+6VR1ahFUoU+#GOTa:O39$Y6FDCIRL
%q%Q<^`-sVbUV\3@BYumdY!MOs*Yhc&l>5G%Jc?<DL!%VpBc`/MU$FhM5W0EP<bf_)@.FmK%QO+qQaA:q@ZUFbE8]Rs4dp\<ee#mH
%ccUUVF`^p8,-X.&e2IYQ0gNlo4KppbZ>5euI..a^jdJ?q?6Z-I=bgD#GdO7,]=^fN$Q@,0Ve(/gq,`i'_"uG;Z]aDg+j!I1Bn,&%
%XEd_i2lQYRjB%l%*j2d:O_TW)72Qm*6A)p>ldF>/'6Pi:5G:(I'IkASo'nWXneY(%K*;-N!WdVgSE"&"WGD@Ea:5oUgn#a\T<2hX
%WfXHs/=IO&ER:lf2.*RG)[qeao4Q"*=XYKN`qcP%+ML-:_$j-@fjU"RKUh5lO4%e9;8%Y`X50phre1Edj.5X(4Y7?3A^S^o>]lIX
%Ta942LhrLZTl'Or+=U12?e@]6!QNgBK3ghuDE^[mJTqbG/\[h!6b21BH$s45r07Le\93;/V6c4d(8V\TL2Xe.ob*kWK/*7J2+d!2
%J,?:q^]3j`m>kV'qkr3#s*X_CM_@h[c[Y]claOWYs8"D;hS0$V(LM[lqM2O=YJ:%%-boWGl(;k-IfK-=^O>kUmEPBTrpCk1BQVka
%o?Y2LmB8bO`P2C"&Zs4~>
%AI9_PrivateDataEnd
